### YamlMime:ManagedReference
items:
- uid: DEM.Net.Lib.FileMetadata
  commentId: T:DEM.Net.Lib.FileMetadata
  id: FileMetadata
  parent: DEM.Net.Lib
  children:
  - DEM.Net.Lib.FileMetadata.#ctor(System.String,DEM.Net.Lib.DEMFileFormat,System.String)
  - DEM.Net.Lib.FileMetadata.BitsPerSample
  - DEM.Net.Lib.FileMetadata.BoundingBox
  - DEM.Net.Lib.FileMetadata.EndLatitude
  - DEM.Net.Lib.FileMetadata.EndLongitude
  - DEM.Net.Lib.FileMetadata.Equals(DEM.Net.Lib.FileMetadata)
  - DEM.Net.Lib.FileMetadata.Equals(System.Object)
  - DEM.Net.Lib.FileMetadata.fileFormat
  - DEM.Net.Lib.FileMetadata.FILEMETADATA_VERSION
  - DEM.Net.Lib.FileMetadata.Filename
  - DEM.Net.Lib.FileMetadata.GetHashCode
  - DEM.Net.Lib.FileMetadata.Height
  - DEM.Net.Lib.FileMetadata.MaximumAltitude
  - DEM.Net.Lib.FileMetadata.MininumAltitude
  - DEM.Net.Lib.FileMetadata.NoDataValue
  - DEM.Net.Lib.FileMetadata.NoDataValueFloat
  - DEM.Net.Lib.FileMetadata.OriginLatitude
  - DEM.Net.Lib.FileMetadata.OriginLongitude
  - DEM.Net.Lib.FileMetadata.PixelScaleX
  - DEM.Net.Lib.FileMetadata.PixelScaleY
  - DEM.Net.Lib.FileMetadata.pixelSizeX
  - DEM.Net.Lib.FileMetadata.pixelSizeY
  - DEM.Net.Lib.FileMetadata.SampleFormat
  - DEM.Net.Lib.FileMetadata.ScanlineSize
  - DEM.Net.Lib.FileMetadata.StartLat
  - DEM.Net.Lib.FileMetadata.StartLon
  - DEM.Net.Lib.FileMetadata.ToString
  - DEM.Net.Lib.FileMetadata.Version
  - DEM.Net.Lib.FileMetadata.Width
  - DEM.Net.Lib.FileMetadata.WorldUnits
  langs:
  - csharp
  - vb
  name: FileMetadata
  nameWithType: FileMetadata
  fullName: DEM.Net.Lib.FileMetadata
  type: Class
  source:
    remote:
      path: DEM.Net.Lib/Model/FileMetadata.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: FileMetadata
    path: ../DEM.Net.Lib/Model/FileMetadata.cs
    startLine: 14
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib
  summary: "\nMetadata file generated on the fly.\nExtracts necessary data in order to index files for querying without actually open them (which is costly)\n"
  example: []
  syntax:
    content: 'public class FileMetadata : IEquatable<FileMetadata>'
    content.vb: >-
      Public Class FileMetadata
          Implements IEquatable(Of FileMetadata)
  inheritance:
  - System.Object
  implements:
  - System.IEquatable{DEM.Net.Lib.FileMetadata}
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: DEM.Net.Lib.FileMetadata.FILEMETADATA_VERSION
  commentId: F:DEM.Net.Lib.FileMetadata.FILEMETADATA_VERSION
  id: FILEMETADATA_VERSION
  parent: DEM.Net.Lib.FileMetadata
  langs:
  - csharp
  - vb
  name: FILEMETADATA_VERSION
  nameWithType: FileMetadata.FILEMETADATA_VERSION
  fullName: DEM.Net.Lib.FileMetadata.FILEMETADATA_VERSION
  type: Field
  source:
    remote:
      path: DEM.Net.Lib/Model/FileMetadata.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: FILEMETADATA_VERSION
    path: ../DEM.Net.Lib/Model/FileMetadata.cs
    startLine: 23
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib
  syntax:
    content: public const string FILEMETADATA_VERSION = "2.1"
    return:
      type: System.String
    content.vb: Public Const FILEMETADATA_VERSION As String = "2.1"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: DEM.Net.Lib.FileMetadata.#ctor(System.String,DEM.Net.Lib.DEMFileFormat,System.String)
  commentId: M:DEM.Net.Lib.FileMetadata.#ctor(System.String,DEM.Net.Lib.DEMFileFormat,System.String)
  id: '#ctor(System.String,DEM.Net.Lib.DEMFileFormat,System.String)'
  parent: DEM.Net.Lib.FileMetadata
  langs:
  - csharp
  - vb
  name: FileMetadata(String, DEMFileFormat, String)
  nameWithType: FileMetadata.FileMetadata(String, DEMFileFormat, String)
  fullName: DEM.Net.Lib.FileMetadata.FileMetadata(System.String, DEM.Net.Lib.DEMFileFormat, System.String)
  type: Constructor
  source:
    remote:
      path: DEM.Net.Lib/Model/FileMetadata.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: .ctor
    path: ../DEM.Net.Lib/Model/FileMetadata.cs
    startLine: 27
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib
  syntax:
    content: public FileMetadata(string filename, DEMFileFormat fileFormat, string version = "2.1")
    parameters:
    - id: filename
      type: System.String
    - id: fileFormat
      type: DEM.Net.Lib.DEMFileFormat
    - id: version
      type: System.String
    content.vb: Public Sub New(filename As String, fileFormat As DEMFileFormat, version As String = "2.1")
  overload: DEM.Net.Lib.FileMetadata.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DEM.Net.Lib.FileMetadata.Version
  commentId: P:DEM.Net.Lib.FileMetadata.Version
  id: Version
  parent: DEM.Net.Lib.FileMetadata
  langs:
  - csharp
  - vb
  name: Version
  nameWithType: FileMetadata.Version
  fullName: DEM.Net.Lib.FileMetadata.Version
  type: Property
  source:
    remote:
      path: DEM.Net.Lib/Model/FileMetadata.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: Version
    path: ../DEM.Net.Lib/Model/FileMetadata.cs
    startLine: 35
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib
  syntax:
    content: public string Version { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Version As String
  overload: DEM.Net.Lib.FileMetadata.Version*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: DEM.Net.Lib.FileMetadata.Filename
  commentId: P:DEM.Net.Lib.FileMetadata.Filename
  id: Filename
  parent: DEM.Net.Lib.FileMetadata
  langs:
  - csharp
  - vb
  name: Filename
  nameWithType: FileMetadata.Filename
  fullName: DEM.Net.Lib.FileMetadata.Filename
  type: Property
  source:
    remote:
      path: DEM.Net.Lib/Model/FileMetadata.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: Filename
    path: ../DEM.Net.Lib/Model/FileMetadata.cs
    startLine: 36
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib
  syntax:
    content: public string Filename { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Filename As String
  overload: DEM.Net.Lib.FileMetadata.Filename*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: DEM.Net.Lib.FileMetadata.Height
  commentId: P:DEM.Net.Lib.FileMetadata.Height
  id: Height
  parent: DEM.Net.Lib.FileMetadata
  langs:
  - csharp
  - vb
  name: Height
  nameWithType: FileMetadata.Height
  fullName: DEM.Net.Lib.FileMetadata.Height
  type: Property
  source:
    remote:
      path: DEM.Net.Lib/Model/FileMetadata.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: Height
    path: ../DEM.Net.Lib/Model/FileMetadata.cs
    startLine: 37
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib
  syntax:
    content: public int Height { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Height As Integer
  overload: DEM.Net.Lib.FileMetadata.Height*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: DEM.Net.Lib.FileMetadata.Width
  commentId: P:DEM.Net.Lib.FileMetadata.Width
  id: Width
  parent: DEM.Net.Lib.FileMetadata
  langs:
  - csharp
  - vb
  name: Width
  nameWithType: FileMetadata.Width
  fullName: DEM.Net.Lib.FileMetadata.Width
  type: Property
  source:
    remote:
      path: DEM.Net.Lib/Model/FileMetadata.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: Width
    path: ../DEM.Net.Lib/Model/FileMetadata.cs
    startLine: 38
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib
  syntax:
    content: public int Width { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Width As Integer
  overload: DEM.Net.Lib.FileMetadata.Width*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: DEM.Net.Lib.FileMetadata.PixelScaleX
  commentId: P:DEM.Net.Lib.FileMetadata.PixelScaleX
  id: PixelScaleX
  parent: DEM.Net.Lib.FileMetadata
  langs:
  - csharp
  - vb
  name: PixelScaleX
  nameWithType: FileMetadata.PixelScaleX
  fullName: DEM.Net.Lib.FileMetadata.PixelScaleX
  type: Property
  source:
    remote:
      path: DEM.Net.Lib/Model/FileMetadata.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: PixelScaleX
    path: ../DEM.Net.Lib/Model/FileMetadata.cs
    startLine: 39
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib
  syntax:
    content: public double PixelScaleX { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property PixelScaleX As Double
  overload: DEM.Net.Lib.FileMetadata.PixelScaleX*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: DEM.Net.Lib.FileMetadata.PixelScaleY
  commentId: P:DEM.Net.Lib.FileMetadata.PixelScaleY
  id: PixelScaleY
  parent: DEM.Net.Lib.FileMetadata
  langs:
  - csharp
  - vb
  name: PixelScaleY
  nameWithType: FileMetadata.PixelScaleY
  fullName: DEM.Net.Lib.FileMetadata.PixelScaleY
  type: Property
  source:
    remote:
      path: DEM.Net.Lib/Model/FileMetadata.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: PixelScaleY
    path: ../DEM.Net.Lib/Model/FileMetadata.cs
    startLine: 40
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib
  syntax:
    content: public double PixelScaleY { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property PixelScaleY As Double
  overload: DEM.Net.Lib.FileMetadata.PixelScaleY*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: DEM.Net.Lib.FileMetadata.OriginLatitude
  commentId: P:DEM.Net.Lib.FileMetadata.OriginLatitude
  id: OriginLatitude
  parent: DEM.Net.Lib.FileMetadata
  langs:
  - csharp
  - vb
  name: OriginLatitude
  nameWithType: FileMetadata.OriginLatitude
  fullName: DEM.Net.Lib.FileMetadata.OriginLatitude
  type: Property
  source:
    remote:
      path: DEM.Net.Lib/Model/FileMetadata.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: OriginLatitude
    path: ../DEM.Net.Lib/Model/FileMetadata.cs
    startLine: 41
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib
  syntax:
    content: public double OriginLatitude { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property OriginLatitude As Double
  overload: DEM.Net.Lib.FileMetadata.OriginLatitude*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: DEM.Net.Lib.FileMetadata.OriginLongitude
  commentId: P:DEM.Net.Lib.FileMetadata.OriginLongitude
  id: OriginLongitude
  parent: DEM.Net.Lib.FileMetadata
  langs:
  - csharp
  - vb
  name: OriginLongitude
  nameWithType: FileMetadata.OriginLongitude
  fullName: DEM.Net.Lib.FileMetadata.OriginLongitude
  type: Property
  source:
    remote:
      path: DEM.Net.Lib/Model/FileMetadata.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: OriginLongitude
    path: ../DEM.Net.Lib/Model/FileMetadata.cs
    startLine: 42
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib
  syntax:
    content: public double OriginLongitude { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property OriginLongitude As Double
  overload: DEM.Net.Lib.FileMetadata.OriginLongitude*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: DEM.Net.Lib.FileMetadata.BitsPerSample
  commentId: P:DEM.Net.Lib.FileMetadata.BitsPerSample
  id: BitsPerSample
  parent: DEM.Net.Lib.FileMetadata
  langs:
  - csharp
  - vb
  name: BitsPerSample
  nameWithType: FileMetadata.BitsPerSample
  fullName: DEM.Net.Lib.FileMetadata.BitsPerSample
  type: Property
  source:
    remote:
      path: DEM.Net.Lib/Model/FileMetadata.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: BitsPerSample
    path: ../DEM.Net.Lib/Model/FileMetadata.cs
    startLine: 43
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib
  syntax:
    content: public int BitsPerSample { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property BitsPerSample As Integer
  overload: DEM.Net.Lib.FileMetadata.BitsPerSample*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: DEM.Net.Lib.FileMetadata.WorldUnits
  commentId: P:DEM.Net.Lib.FileMetadata.WorldUnits
  id: WorldUnits
  parent: DEM.Net.Lib.FileMetadata
  langs:
  - csharp
  - vb
  name: WorldUnits
  nameWithType: FileMetadata.WorldUnits
  fullName: DEM.Net.Lib.FileMetadata.WorldUnits
  type: Property
  source:
    remote:
      path: DEM.Net.Lib/Model/FileMetadata.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: WorldUnits
    path: ../DEM.Net.Lib/Model/FileMetadata.cs
    startLine: 44
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib
  syntax:
    content: public string WorldUnits { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property WorldUnits As String
  overload: DEM.Net.Lib.FileMetadata.WorldUnits*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: DEM.Net.Lib.FileMetadata.SampleFormat
  commentId: P:DEM.Net.Lib.FileMetadata.SampleFormat
  id: SampleFormat
  parent: DEM.Net.Lib.FileMetadata
  langs:
  - csharp
  - vb
  name: SampleFormat
  nameWithType: FileMetadata.SampleFormat
  fullName: DEM.Net.Lib.FileMetadata.SampleFormat
  type: Property
  source:
    remote:
      path: DEM.Net.Lib/Model/FileMetadata.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: SampleFormat
    path: ../DEM.Net.Lib/Model/FileMetadata.cs
    startLine: 45
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib
  syntax:
    content: public string SampleFormat { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property SampleFormat As String
  overload: DEM.Net.Lib.FileMetadata.SampleFormat*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: DEM.Net.Lib.FileMetadata.NoDataValue
  commentId: P:DEM.Net.Lib.FileMetadata.NoDataValue
  id: NoDataValue
  parent: DEM.Net.Lib.FileMetadata
  langs:
  - csharp
  - vb
  name: NoDataValue
  nameWithType: FileMetadata.NoDataValue
  fullName: DEM.Net.Lib.FileMetadata.NoDataValue
  type: Property
  source:
    remote:
      path: DEM.Net.Lib/Model/FileMetadata.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: NoDataValue
    path: ../DEM.Net.Lib/Model/FileMetadata.cs
    startLine: 46
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib
  syntax:
    content: public string NoDataValue { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property NoDataValue As String
  overload: DEM.Net.Lib.FileMetadata.NoDataValue*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: DEM.Net.Lib.FileMetadata.ScanlineSize
  commentId: P:DEM.Net.Lib.FileMetadata.ScanlineSize
  id: ScanlineSize
  parent: DEM.Net.Lib.FileMetadata
  langs:
  - csharp
  - vb
  name: ScanlineSize
  nameWithType: FileMetadata.ScanlineSize
  fullName: DEM.Net.Lib.FileMetadata.ScanlineSize
  type: Property
  source:
    remote:
      path: DEM.Net.Lib/Model/FileMetadata.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: ScanlineSize
    path: ../DEM.Net.Lib/Model/FileMetadata.cs
    startLine: 47
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib
  syntax:
    content: public int ScanlineSize { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property ScanlineSize As Integer
  overload: DEM.Net.Lib.FileMetadata.ScanlineSize*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: DEM.Net.Lib.FileMetadata.StartLon
  commentId: P:DEM.Net.Lib.FileMetadata.StartLon
  id: StartLon
  parent: DEM.Net.Lib.FileMetadata
  langs:
  - csharp
  - vb
  name: StartLon
  nameWithType: FileMetadata.StartLon
  fullName: DEM.Net.Lib.FileMetadata.StartLon
  type: Property
  source:
    remote:
      path: DEM.Net.Lib/Model/FileMetadata.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: StartLon
    path: ../DEM.Net.Lib/Model/FileMetadata.cs
    startLine: 48
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib
  syntax:
    content: public double StartLon { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property StartLon As Double
  overload: DEM.Net.Lib.FileMetadata.StartLon*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: DEM.Net.Lib.FileMetadata.StartLat
  commentId: P:DEM.Net.Lib.FileMetadata.StartLat
  id: StartLat
  parent: DEM.Net.Lib.FileMetadata
  langs:
  - csharp
  - vb
  name: StartLat
  nameWithType: FileMetadata.StartLat
  fullName: DEM.Net.Lib.FileMetadata.StartLat
  type: Property
  source:
    remote:
      path: DEM.Net.Lib/Model/FileMetadata.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: StartLat
    path: ../DEM.Net.Lib/Model/FileMetadata.cs
    startLine: 49
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib
  syntax:
    content: public double StartLat { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property StartLat As Double
  overload: DEM.Net.Lib.FileMetadata.StartLat*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: DEM.Net.Lib.FileMetadata.pixelSizeX
  commentId: P:DEM.Net.Lib.FileMetadata.pixelSizeX
  id: pixelSizeX
  parent: DEM.Net.Lib.FileMetadata
  langs:
  - csharp
  - vb
  name: pixelSizeX
  nameWithType: FileMetadata.pixelSizeX
  fullName: DEM.Net.Lib.FileMetadata.pixelSizeX
  type: Property
  source:
    remote:
      path: DEM.Net.Lib/Model/FileMetadata.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: pixelSizeX
    path: ../DEM.Net.Lib/Model/FileMetadata.cs
    startLine: 50
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib
  syntax:
    content: public double pixelSizeX { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property pixelSizeX As Double
  overload: DEM.Net.Lib.FileMetadata.pixelSizeX*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: DEM.Net.Lib.FileMetadata.pixelSizeY
  commentId: P:DEM.Net.Lib.FileMetadata.pixelSizeY
  id: pixelSizeY
  parent: DEM.Net.Lib.FileMetadata
  langs:
  - csharp
  - vb
  name: pixelSizeY
  nameWithType: FileMetadata.pixelSizeY
  fullName: DEM.Net.Lib.FileMetadata.pixelSizeY
  type: Property
  source:
    remote:
      path: DEM.Net.Lib/Model/FileMetadata.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: pixelSizeY
    path: ../DEM.Net.Lib/Model/FileMetadata.cs
    startLine: 51
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib
  syntax:
    content: public double pixelSizeY { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property pixelSizeY As Double
  overload: DEM.Net.Lib.FileMetadata.pixelSizeY*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: DEM.Net.Lib.FileMetadata.fileFormat
  commentId: P:DEM.Net.Lib.FileMetadata.fileFormat
  id: fileFormat
  parent: DEM.Net.Lib.FileMetadata
  langs:
  - csharp
  - vb
  name: fileFormat
  nameWithType: FileMetadata.fileFormat
  fullName: DEM.Net.Lib.FileMetadata.fileFormat
  type: Property
  source:
    remote:
      path: DEM.Net.Lib/Model/FileMetadata.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: fileFormat
    path: ../DEM.Net.Lib/Model/FileMetadata.cs
    startLine: 52
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib
  syntax:
    content: public DEMFileFormat fileFormat { get; set; }
    parameters: []
    return:
      type: DEM.Net.Lib.DEMFileFormat
    content.vb: Public Property fileFormat As DEMFileFormat
  overload: DEM.Net.Lib.FileMetadata.fileFormat*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: DEM.Net.Lib.FileMetadata.MininumAltitude
  commentId: P:DEM.Net.Lib.FileMetadata.MininumAltitude
  id: MininumAltitude
  parent: DEM.Net.Lib.FileMetadata
  langs:
  - csharp
  - vb
  name: MininumAltitude
  nameWithType: FileMetadata.MininumAltitude
  fullName: DEM.Net.Lib.FileMetadata.MininumAltitude
  type: Property
  source:
    remote:
      path: DEM.Net.Lib/Model/FileMetadata.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: MininumAltitude
    path: ../DEM.Net.Lib/Model/FileMetadata.cs
    startLine: 54
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib
  syntax:
    content: public float MininumAltitude { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property MininumAltitude As Single
  overload: DEM.Net.Lib.FileMetadata.MininumAltitude*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: DEM.Net.Lib.FileMetadata.MaximumAltitude
  commentId: P:DEM.Net.Lib.FileMetadata.MaximumAltitude
  id: MaximumAltitude
  parent: DEM.Net.Lib.FileMetadata
  langs:
  - csharp
  - vb
  name: MaximumAltitude
  nameWithType: FileMetadata.MaximumAltitude
  fullName: DEM.Net.Lib.FileMetadata.MaximumAltitude
  type: Property
  source:
    remote:
      path: DEM.Net.Lib/Model/FileMetadata.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: MaximumAltitude
    path: ../DEM.Net.Lib/Model/FileMetadata.cs
    startLine: 55
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib
  syntax:
    content: public float MaximumAltitude { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property MaximumAltitude As Single
  overload: DEM.Net.Lib.FileMetadata.MaximumAltitude*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: DEM.Net.Lib.FileMetadata.EndLongitude
  commentId: P:DEM.Net.Lib.FileMetadata.EndLongitude
  id: EndLongitude
  parent: DEM.Net.Lib.FileMetadata
  langs:
  - csharp
  - vb
  name: EndLongitude
  nameWithType: FileMetadata.EndLongitude
  fullName: DEM.Net.Lib.FileMetadata.EndLongitude
  type: Property
  source:
    remote:
      path: DEM.Net.Lib/Model/FileMetadata.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: EndLongitude
    path: ../DEM.Net.Lib/Model/FileMetadata.cs
    startLine: 56
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib
  syntax:
    content: public double EndLongitude { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property EndLongitude As Double
  overload: DEM.Net.Lib.FileMetadata.EndLongitude*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: DEM.Net.Lib.FileMetadata.EndLatitude
  commentId: P:DEM.Net.Lib.FileMetadata.EndLatitude
  id: EndLatitude
  parent: DEM.Net.Lib.FileMetadata
  langs:
  - csharp
  - vb
  name: EndLatitude
  nameWithType: FileMetadata.EndLatitude
  fullName: DEM.Net.Lib.FileMetadata.EndLatitude
  type: Property
  source:
    remote:
      path: DEM.Net.Lib/Model/FileMetadata.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: EndLatitude
    path: ../DEM.Net.Lib/Model/FileMetadata.cs
    startLine: 63
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib
  syntax:
    content: public double EndLatitude { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property EndLatitude As Double
  overload: DEM.Net.Lib.FileMetadata.EndLatitude*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: DEM.Net.Lib.FileMetadata.NoDataValueFloat
  commentId: P:DEM.Net.Lib.FileMetadata.NoDataValueFloat
  id: NoDataValueFloat
  parent: DEM.Net.Lib.FileMetadata
  langs:
  - csharp
  - vb
  name: NoDataValueFloat
  nameWithType: FileMetadata.NoDataValueFloat
  fullName: DEM.Net.Lib.FileMetadata.NoDataValueFloat
  type: Property
  source:
    remote:
      path: DEM.Net.Lib/Model/FileMetadata.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: NoDataValueFloat
    path: ../DEM.Net.Lib/Model/FileMetadata.cs
    startLine: 74
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib
  syntax:
    content: public float NoDataValueFloat { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property NoDataValueFloat As Single
  overload: DEM.Net.Lib.FileMetadata.NoDataValueFloat*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: DEM.Net.Lib.FileMetadata.ToString
  commentId: M:DEM.Net.Lib.FileMetadata.ToString
  id: ToString
  parent: DEM.Net.Lib.FileMetadata
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: FileMetadata.ToString()
  fullName: DEM.Net.Lib.FileMetadata.ToString()
  type: Method
  source:
    remote:
      path: DEM.Net.Lib/Model/FileMetadata.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: ToString
    path: ../DEM.Net.Lib/Model/FileMetadata.cs
    startLine: 89
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: DEM.Net.Lib.FileMetadata.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: DEM.Net.Lib.FileMetadata.Equals(System.Object)
  commentId: M:DEM.Net.Lib.FileMetadata.Equals(System.Object)
  id: Equals(System.Object)
  parent: DEM.Net.Lib.FileMetadata
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: FileMetadata.Equals(Object)
  fullName: DEM.Net.Lib.FileMetadata.Equals(System.Object)
  type: Method
  source:
    remote:
      path: DEM.Net.Lib/Model/FileMetadata.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: Equals
    path: ../DEM.Net.Lib/Model/FileMetadata.cs
    startLine: 94
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: DEM.Net.Lib.FileMetadata.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: DEM.Net.Lib.FileMetadata.GetHashCode
  commentId: M:DEM.Net.Lib.FileMetadata.GetHashCode
  id: GetHashCode
  parent: DEM.Net.Lib.FileMetadata
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: FileMetadata.GetHashCode()
  fullName: DEM.Net.Lib.FileMetadata.GetHashCode()
  type: Method
  source:
    remote:
      path: DEM.Net.Lib/Model/FileMetadata.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: GetHashCode
    path: ../DEM.Net.Lib/Model/FileMetadata.cs
    startLine: 102
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.Object.GetHashCode
  overload: DEM.Net.Lib.FileMetadata.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: DEM.Net.Lib.FileMetadata.Equals(DEM.Net.Lib.FileMetadata)
  commentId: M:DEM.Net.Lib.FileMetadata.Equals(DEM.Net.Lib.FileMetadata)
  id: Equals(DEM.Net.Lib.FileMetadata)
  parent: DEM.Net.Lib.FileMetadata
  langs:
  - csharp
  - vb
  name: Equals(FileMetadata)
  nameWithType: FileMetadata.Equals(FileMetadata)
  fullName: DEM.Net.Lib.FileMetadata.Equals(DEM.Net.Lib.FileMetadata)
  type: Method
  source:
    remote:
      path: DEM.Net.Lib/Model/FileMetadata.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: Equals
    path: ../DEM.Net.Lib/Model/FileMetadata.cs
    startLine: 107
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib
  syntax:
    content: public bool Equals(FileMetadata other)
    parameters:
    - id: other
      type: DEM.Net.Lib.FileMetadata
    return:
      type: System.Boolean
    content.vb: Public Function Equals(other As FileMetadata) As Boolean
  overload: DEM.Net.Lib.FileMetadata.Equals*
  implements:
  - System.IEquatable{DEM.Net.Lib.FileMetadata}.Equals(DEM.Net.Lib.FileMetadata)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DEM.Net.Lib.FileMetadata.BoundingBox
  commentId: P:DEM.Net.Lib.FileMetadata.BoundingBox
  id: BoundingBox
  parent: DEM.Net.Lib.FileMetadata
  langs:
  - csharp
  - vb
  name: BoundingBox
  nameWithType: FileMetadata.BoundingBox
  fullName: DEM.Net.Lib.FileMetadata.BoundingBox
  type: Property
  source:
    remote:
      path: DEM.Net.Lib/Model/FileMetadata.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: BoundingBox
    path: ../DEM.Net.Lib/Model/FileMetadata.cs
    startLine: 115
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib
  syntax:
    content: >-
      [JsonIgnore]

      public BoundingBox BoundingBox { get; }
    parameters: []
    return:
      type: DEM.Net.Lib.BoundingBox
    content.vb: >-
      <JsonIgnore>

      Public ReadOnly Property BoundingBox As BoundingBox
  overload: DEM.Net.Lib.FileMetadata.BoundingBox*
  attributes:
  - type: Newtonsoft.Json.JsonIgnoreAttribute
    ctor: Newtonsoft.Json.JsonIgnoreAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: DEM.Net.Lib
  commentId: N:DEM.Net.Lib
  name: DEM.Net.Lib
  nameWithType: DEM.Net.Lib
  fullName: DEM.Net.Lib
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IEquatable{DEM.Net.Lib.FileMetadata}
  commentId: T:System.IEquatable{DEM.Net.Lib.FileMetadata}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<FileMetadata>
  nameWithType: IEquatable<FileMetadata>
  fullName: System.IEquatable<DEM.Net.Lib.FileMetadata>
  nameWithType.vb: IEquatable(Of FileMetadata)
  fullName.vb: System.IEquatable(Of DEM.Net.Lib.FileMetadata)
  name.vb: IEquatable(Of FileMetadata)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: DEM.Net.Lib.FileMetadata
    name: FileMetadata
    nameWithType: FileMetadata
    fullName: DEM.Net.Lib.FileMetadata
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: DEM.Net.Lib.FileMetadata
    name: FileMetadata
    nameWithType: FileMetadata
    fullName: DEM.Net.Lib.FileMetadata
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: DEM.Net.Lib.FileMetadata.#ctor*
  commentId: Overload:DEM.Net.Lib.FileMetadata.#ctor
  name: FileMetadata
  nameWithType: FileMetadata.FileMetadata
  fullName: DEM.Net.Lib.FileMetadata.FileMetadata
- uid: DEM.Net.Lib.DEMFileFormat
  commentId: T:DEM.Net.Lib.DEMFileFormat
  parent: DEM.Net.Lib
  name: DEMFileFormat
  nameWithType: DEMFileFormat
  fullName: DEM.Net.Lib.DEMFileFormat
- uid: DEM.Net.Lib.FileMetadata.Version*
  commentId: Overload:DEM.Net.Lib.FileMetadata.Version
  name: Version
  nameWithType: FileMetadata.Version
  fullName: DEM.Net.Lib.FileMetadata.Version
- uid: DEM.Net.Lib.FileMetadata.Filename*
  commentId: Overload:DEM.Net.Lib.FileMetadata.Filename
  name: Filename
  nameWithType: FileMetadata.Filename
  fullName: DEM.Net.Lib.FileMetadata.Filename
- uid: DEM.Net.Lib.FileMetadata.Height*
  commentId: Overload:DEM.Net.Lib.FileMetadata.Height
  name: Height
  nameWithType: FileMetadata.Height
  fullName: DEM.Net.Lib.FileMetadata.Height
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: DEM.Net.Lib.FileMetadata.Width*
  commentId: Overload:DEM.Net.Lib.FileMetadata.Width
  name: Width
  nameWithType: FileMetadata.Width
  fullName: DEM.Net.Lib.FileMetadata.Width
- uid: DEM.Net.Lib.FileMetadata.PixelScaleX*
  commentId: Overload:DEM.Net.Lib.FileMetadata.PixelScaleX
  name: PixelScaleX
  nameWithType: FileMetadata.PixelScaleX
  fullName: DEM.Net.Lib.FileMetadata.PixelScaleX
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: DEM.Net.Lib.FileMetadata.PixelScaleY*
  commentId: Overload:DEM.Net.Lib.FileMetadata.PixelScaleY
  name: PixelScaleY
  nameWithType: FileMetadata.PixelScaleY
  fullName: DEM.Net.Lib.FileMetadata.PixelScaleY
- uid: DEM.Net.Lib.FileMetadata.OriginLatitude*
  commentId: Overload:DEM.Net.Lib.FileMetadata.OriginLatitude
  name: OriginLatitude
  nameWithType: FileMetadata.OriginLatitude
  fullName: DEM.Net.Lib.FileMetadata.OriginLatitude
- uid: DEM.Net.Lib.FileMetadata.OriginLongitude*
  commentId: Overload:DEM.Net.Lib.FileMetadata.OriginLongitude
  name: OriginLongitude
  nameWithType: FileMetadata.OriginLongitude
  fullName: DEM.Net.Lib.FileMetadata.OriginLongitude
- uid: DEM.Net.Lib.FileMetadata.BitsPerSample*
  commentId: Overload:DEM.Net.Lib.FileMetadata.BitsPerSample
  name: BitsPerSample
  nameWithType: FileMetadata.BitsPerSample
  fullName: DEM.Net.Lib.FileMetadata.BitsPerSample
- uid: DEM.Net.Lib.FileMetadata.WorldUnits*
  commentId: Overload:DEM.Net.Lib.FileMetadata.WorldUnits
  name: WorldUnits
  nameWithType: FileMetadata.WorldUnits
  fullName: DEM.Net.Lib.FileMetadata.WorldUnits
- uid: DEM.Net.Lib.FileMetadata.SampleFormat*
  commentId: Overload:DEM.Net.Lib.FileMetadata.SampleFormat
  name: SampleFormat
  nameWithType: FileMetadata.SampleFormat
  fullName: DEM.Net.Lib.FileMetadata.SampleFormat
- uid: DEM.Net.Lib.FileMetadata.NoDataValue*
  commentId: Overload:DEM.Net.Lib.FileMetadata.NoDataValue
  name: NoDataValue
  nameWithType: FileMetadata.NoDataValue
  fullName: DEM.Net.Lib.FileMetadata.NoDataValue
- uid: DEM.Net.Lib.FileMetadata.ScanlineSize*
  commentId: Overload:DEM.Net.Lib.FileMetadata.ScanlineSize
  name: ScanlineSize
  nameWithType: FileMetadata.ScanlineSize
  fullName: DEM.Net.Lib.FileMetadata.ScanlineSize
- uid: DEM.Net.Lib.FileMetadata.StartLon*
  commentId: Overload:DEM.Net.Lib.FileMetadata.StartLon
  name: StartLon
  nameWithType: FileMetadata.StartLon
  fullName: DEM.Net.Lib.FileMetadata.StartLon
- uid: DEM.Net.Lib.FileMetadata.StartLat*
  commentId: Overload:DEM.Net.Lib.FileMetadata.StartLat
  name: StartLat
  nameWithType: FileMetadata.StartLat
  fullName: DEM.Net.Lib.FileMetadata.StartLat
- uid: DEM.Net.Lib.FileMetadata.pixelSizeX*
  commentId: Overload:DEM.Net.Lib.FileMetadata.pixelSizeX
  name: pixelSizeX
  nameWithType: FileMetadata.pixelSizeX
  fullName: DEM.Net.Lib.FileMetadata.pixelSizeX
- uid: DEM.Net.Lib.FileMetadata.pixelSizeY*
  commentId: Overload:DEM.Net.Lib.FileMetadata.pixelSizeY
  name: pixelSizeY
  nameWithType: FileMetadata.pixelSizeY
  fullName: DEM.Net.Lib.FileMetadata.pixelSizeY
- uid: DEM.Net.Lib.FileMetadata.fileFormat*
  commentId: Overload:DEM.Net.Lib.FileMetadata.fileFormat
  name: fileFormat
  nameWithType: FileMetadata.fileFormat
  fullName: DEM.Net.Lib.FileMetadata.fileFormat
- uid: DEM.Net.Lib.FileMetadata.MininumAltitude*
  commentId: Overload:DEM.Net.Lib.FileMetadata.MininumAltitude
  name: MininumAltitude
  nameWithType: FileMetadata.MininumAltitude
  fullName: DEM.Net.Lib.FileMetadata.MininumAltitude
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: DEM.Net.Lib.FileMetadata.MaximumAltitude*
  commentId: Overload:DEM.Net.Lib.FileMetadata.MaximumAltitude
  name: MaximumAltitude
  nameWithType: FileMetadata.MaximumAltitude
  fullName: DEM.Net.Lib.FileMetadata.MaximumAltitude
- uid: DEM.Net.Lib.FileMetadata.EndLongitude*
  commentId: Overload:DEM.Net.Lib.FileMetadata.EndLongitude
  name: EndLongitude
  nameWithType: FileMetadata.EndLongitude
  fullName: DEM.Net.Lib.FileMetadata.EndLongitude
- uid: DEM.Net.Lib.FileMetadata.EndLatitude*
  commentId: Overload:DEM.Net.Lib.FileMetadata.EndLatitude
  name: EndLatitude
  nameWithType: FileMetadata.EndLatitude
  fullName: DEM.Net.Lib.FileMetadata.EndLatitude
- uid: DEM.Net.Lib.FileMetadata.NoDataValueFloat*
  commentId: Overload:DEM.Net.Lib.FileMetadata.NoDataValueFloat
  name: NoDataValueFloat
  nameWithType: FileMetadata.NoDataValueFloat
  fullName: DEM.Net.Lib.FileMetadata.NoDataValueFloat
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: DEM.Net.Lib.FileMetadata.ToString*
  commentId: Overload:DEM.Net.Lib.FileMetadata.ToString
  name: ToString
  nameWithType: FileMetadata.ToString
  fullName: DEM.Net.Lib.FileMetadata.ToString
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DEM.Net.Lib.FileMetadata.Equals*
  commentId: Overload:DEM.Net.Lib.FileMetadata.Equals
  name: Equals
  nameWithType: FileMetadata.Equals
  fullName: DEM.Net.Lib.FileMetadata.Equals
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: DEM.Net.Lib.FileMetadata.GetHashCode*
  commentId: Overload:DEM.Net.Lib.FileMetadata.GetHashCode
  name: GetHashCode
  nameWithType: FileMetadata.GetHashCode
  fullName: DEM.Net.Lib.FileMetadata.GetHashCode
- uid: System.IEquatable{DEM.Net.Lib.FileMetadata}.Equals(DEM.Net.Lib.FileMetadata)
  commentId: M:System.IEquatable{DEM.Net.Lib.FileMetadata}.Equals(DEM.Net.Lib.FileMetadata)
  parent: System.IEquatable{DEM.Net.Lib.FileMetadata}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(FileMetadata)
  nameWithType: IEquatable<FileMetadata>.Equals(FileMetadata)
  fullName: System.IEquatable<DEM.Net.Lib.FileMetadata>.Equals(DEM.Net.Lib.FileMetadata)
  nameWithType.vb: IEquatable(Of FileMetadata).Equals(FileMetadata)
  fullName.vb: System.IEquatable(Of DEM.Net.Lib.FileMetadata).Equals(DEM.Net.Lib.FileMetadata)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<FileMetadata>.Equals
    fullName: System.IEquatable<DEM.Net.Lib.FileMetadata>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DEM.Net.Lib.FileMetadata
    name: FileMetadata
    nameWithType: FileMetadata
    fullName: DEM.Net.Lib.FileMetadata
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of FileMetadata).Equals
    fullName: System.IEquatable(Of DEM.Net.Lib.FileMetadata).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: DEM.Net.Lib.FileMetadata
    name: FileMetadata
    nameWithType: FileMetadata
    fullName: DEM.Net.Lib.FileMetadata
  - name: )
    nameWithType: )
    fullName: )
- uid: DEM.Net.Lib.FileMetadata
  commentId: T:DEM.Net.Lib.FileMetadata
  parent: DEM.Net.Lib
  name: FileMetadata
  nameWithType: FileMetadata
  fullName: DEM.Net.Lib.FileMetadata
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<T>.Equals
    fullName: System.IEquatable<T>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of T).Equals
    fullName: System.IEquatable(Of T).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: DEM.Net.Lib.FileMetadata.BoundingBox*
  commentId: Overload:DEM.Net.Lib.FileMetadata.BoundingBox
  name: BoundingBox
  nameWithType: FileMetadata.BoundingBox
  fullName: DEM.Net.Lib.FileMetadata.BoundingBox
- uid: DEM.Net.Lib.BoundingBox
  commentId: T:DEM.Net.Lib.BoundingBox
  parent: DEM.Net.Lib
  name: BoundingBox
  nameWithType: BoundingBox
  fullName: DEM.Net.Lib.BoundingBox
