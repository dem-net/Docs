### YamlMime:ManagedReference
items:
- uid: DEM.Net.Lib.MathHelper
  commentId: T:DEM.Net.Lib.MathHelper
  id: MathHelper
  parent: DEM.Net.Lib
  children:
  - DEM.Net.Lib.MathHelper.Average(System.Decimal[])
  - DEM.Net.Lib.MathHelper.Average(System.Double[])
  - DEM.Net.Lib.MathHelper.Average(System.Nullable{System.Decimal}[])
  - DEM.Net.Lib.MathHelper.Average(System.Nullable{System.Double}[])
  - DEM.Net.Lib.MathHelper.Average(System.Nullable{System.Single}[])
  - DEM.Net.Lib.MathHelper.Average(System.Single[])
  - DEM.Net.Lib.MathHelper.Clamp``1(``0,``0,``0)
  - DEM.Net.Lib.MathHelper.Lerp(System.Single,System.Single,System.Single)
  - DEM.Net.Lib.MathHelper.Map(System.Single,System.Single,System.Single,System.Single,System.Single,System.Boolean)
  - DEM.Net.Lib.MathHelper.Max(System.Decimal[])
  - DEM.Net.Lib.MathHelper.Max(System.Double[])
  - DEM.Net.Lib.MathHelper.Max(System.Int32[])
  - DEM.Net.Lib.MathHelper.Max(System.Int64[])
  - DEM.Net.Lib.MathHelper.Max(System.Nullable{System.Decimal}[])
  - DEM.Net.Lib.MathHelper.Max(System.Nullable{System.Double}[])
  - DEM.Net.Lib.MathHelper.Max(System.Nullable{System.Int32}[])
  - DEM.Net.Lib.MathHelper.Max(System.Nullable{System.Int64}[])
  - DEM.Net.Lib.MathHelper.Max(System.Nullable{System.Single}[])
  - DEM.Net.Lib.MathHelper.Max(System.Single[])
  - DEM.Net.Lib.MathHelper.Min(System.Decimal[])
  - DEM.Net.Lib.MathHelper.Min(System.Double[])
  - DEM.Net.Lib.MathHelper.Min(System.Int32[])
  - DEM.Net.Lib.MathHelper.Min(System.Int64[])
  - DEM.Net.Lib.MathHelper.Min(System.Nullable{System.Decimal}[])
  - DEM.Net.Lib.MathHelper.Min(System.Nullable{System.Double}[])
  - DEM.Net.Lib.MathHelper.Min(System.Nullable{System.Int32}[])
  - DEM.Net.Lib.MathHelper.Min(System.Nullable{System.Int64}[])
  - DEM.Net.Lib.MathHelper.Min(System.Nullable{System.Single}[])
  - DEM.Net.Lib.MathHelper.Min(System.Single[])
  langs:
  - csharp
  - vb
  name: MathHelper
  nameWithType: MathHelper
  fullName: DEM.Net.Lib.MathHelper
  type: Class
  source:
    remote:
      path: DEM.Net.Lib/Helpers/MathHelper.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: MathHelper
    path: ../DEM.Net.Lib/Helpers/MathHelper.cs
    startLine: 8
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib
  syntax:
    content: public static class MathHelper
    content.vb: Public Module MathHelper
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: DEM.Net.Lib.MathHelper.Lerp(System.Single,System.Single,System.Single)
  commentId: M:DEM.Net.Lib.MathHelper.Lerp(System.Single,System.Single,System.Single)
  id: Lerp(System.Single,System.Single,System.Single)
  parent: DEM.Net.Lib.MathHelper
  langs:
  - csharp
  - vb
  name: Lerp(Single, Single, Single)
  nameWithType: MathHelper.Lerp(Single, Single, Single)
  fullName: DEM.Net.Lib.MathHelper.Lerp(System.Single, System.Single, System.Single)
  type: Method
  source:
    remote:
      path: DEM.Net.Lib/Helpers/MathHelper.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: Lerp
    path: ../DEM.Net.Lib/Helpers/MathHelper.cs
    startLine: 10
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib
  syntax:
    content: public static float Lerp(float value1, float value2, float amount)
    parameters:
    - id: value1
      type: System.Single
    - id: value2
      type: System.Single
    - id: amount
      type: System.Single
    return:
      type: System.Single
    content.vb: Public Shared Function Lerp(value1 As Single, value2 As Single, amount As Single) As Single
  overload: DEM.Net.Lib.MathHelper.Lerp*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DEM.Net.Lib.MathHelper.Map(System.Single,System.Single,System.Single,System.Single,System.Single,System.Boolean)
  commentId: M:DEM.Net.Lib.MathHelper.Map(System.Single,System.Single,System.Single,System.Single,System.Single,System.Boolean)
  id: Map(System.Single,System.Single,System.Single,System.Single,System.Single,System.Boolean)
  parent: DEM.Net.Lib.MathHelper
  langs:
  - csharp
  - vb
  name: Map(Single, Single, Single, Single, Single, Boolean)
  nameWithType: MathHelper.Map(Single, Single, Single, Single, Single, Boolean)
  fullName: DEM.Net.Lib.MathHelper.Map(System.Single, System.Single, System.Single, System.Single, System.Single, System.Boolean)
  type: Method
  source:
    remote:
      path: DEM.Net.Lib/Helpers/MathHelper.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: Map
    path: ../DEM.Net.Lib/Helpers/MathHelper.cs
    startLine: 13
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib
  syntax:
    content: public static float Map(float inputMin, float inputMax, float outputMin, float outputMax, float value, bool clamp)
    parameters:
    - id: inputMin
      type: System.Single
    - id: inputMax
      type: System.Single
    - id: outputMin
      type: System.Single
    - id: outputMax
      type: System.Single
    - id: value
      type: System.Single
    - id: clamp
      type: System.Boolean
    return:
      type: System.Single
    content.vb: Public Shared Function Map(inputMin As Single, inputMax As Single, outputMin As Single, outputMax As Single, value As Single, clamp As Boolean) As Single
  overload: DEM.Net.Lib.MathHelper.Map*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DEM.Net.Lib.MathHelper.Clamp``1(``0,``0,``0)
  commentId: M:DEM.Net.Lib.MathHelper.Clamp``1(``0,``0,``0)
  id: Clamp``1(``0,``0,``0)
  parent: DEM.Net.Lib.MathHelper
  langs:
  - csharp
  - vb
  name: Clamp<T>(T, T, T)
  nameWithType: MathHelper.Clamp<T>(T, T, T)
  fullName: DEM.Net.Lib.MathHelper.Clamp<T>(T, T, T)
  type: Method
  source:
    remote:
      path: DEM.Net.Lib/Helpers/MathHelper.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: Clamp
    path: ../DEM.Net.Lib/Helpers/MathHelper.cs
    startLine: 43
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib
  syntax:
    content: >-
      public static T Clamp<T>(T value, T min, T max)
          where T : IComparable<T>
    parameters:
    - id: value
      type: '{T}'
    - id: min
      type: '{T}'
    - id: max
      type: '{T}'
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Shared Function Clamp(Of T As IComparable(Of T))(value As T, min As T, max As T) As T
  overload: DEM.Net.Lib.MathHelper.Clamp*
  nameWithType.vb: MathHelper.Clamp(Of T)(T, T, T)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: DEM.Net.Lib.MathHelper.Clamp(Of T)(T, T, T)
  name.vb: Clamp(Of T)(T, T, T)
- uid: DEM.Net.Lib.MathHelper.Max(System.Double[])
  commentId: M:DEM.Net.Lib.MathHelper.Max(System.Double[])
  id: Max(System.Double[])
  parent: DEM.Net.Lib.MathHelper
  langs:
  - csharp
  - vb
  name: Max(Double[])
  nameWithType: MathHelper.Max(Double[])
  fullName: DEM.Net.Lib.MathHelper.Max(System.Double[])
  type: Method
  source:
    remote:
      path: DEM.Net.Lib/Helpers/MathHelper.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: Max
    path: ../DEM.Net.Lib/Helpers/MathHelper.cs
    startLine: 55
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib
  syntax:
    content: public static double Max(params double[] args)
    parameters:
    - id: args
      type: System.Double[]
    return:
      type: System.Double
    content.vb: Public Shared Function Max(ParamArray args As Double()) As Double
  overload: DEM.Net.Lib.MathHelper.Max*
  nameWithType.vb: MathHelper.Max(Double())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: DEM.Net.Lib.MathHelper.Max(System.Double())
  name.vb: Max(Double())
- uid: DEM.Net.Lib.MathHelper.Max(System.Decimal[])
  commentId: M:DEM.Net.Lib.MathHelper.Max(System.Decimal[])
  id: Max(System.Decimal[])
  parent: DEM.Net.Lib.MathHelper
  langs:
  - csharp
  - vb
  name: Max(Decimal[])
  nameWithType: MathHelper.Max(Decimal[])
  fullName: DEM.Net.Lib.MathHelper.Max(System.Decimal[])
  type: Method
  source:
    remote:
      path: DEM.Net.Lib/Helpers/MathHelper.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: Max
    path: ../DEM.Net.Lib/Helpers/MathHelper.cs
    startLine: 59
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib
  syntax:
    content: public static decimal Max(params decimal[] args)
    parameters:
    - id: args
      type: System.Decimal[]
    return:
      type: System.Decimal
    content.vb: Public Shared Function Max(ParamArray args As Decimal()) As Decimal
  overload: DEM.Net.Lib.MathHelper.Max*
  nameWithType.vb: MathHelper.Max(Decimal())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: DEM.Net.Lib.MathHelper.Max(System.Decimal())
  name.vb: Max(Decimal())
- uid: DEM.Net.Lib.MathHelper.Max(System.Single[])
  commentId: M:DEM.Net.Lib.MathHelper.Max(System.Single[])
  id: Max(System.Single[])
  parent: DEM.Net.Lib.MathHelper
  langs:
  - csharp
  - vb
  name: Max(Single[])
  nameWithType: MathHelper.Max(Single[])
  fullName: DEM.Net.Lib.MathHelper.Max(System.Single[])
  type: Method
  source:
    remote:
      path: DEM.Net.Lib/Helpers/MathHelper.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: Max
    path: ../DEM.Net.Lib/Helpers/MathHelper.cs
    startLine: 63
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib
  syntax:
    content: public static float Max(params float[] args)
    parameters:
    - id: args
      type: System.Single[]
    return:
      type: System.Single
    content.vb: Public Shared Function Max(ParamArray args As Single()) As Single
  overload: DEM.Net.Lib.MathHelper.Max*
  nameWithType.vb: MathHelper.Max(Single())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: DEM.Net.Lib.MathHelper.Max(System.Single())
  name.vb: Max(Single())
- uid: DEM.Net.Lib.MathHelper.Max(System.Int64[])
  commentId: M:DEM.Net.Lib.MathHelper.Max(System.Int64[])
  id: Max(System.Int64[])
  parent: DEM.Net.Lib.MathHelper
  langs:
  - csharp
  - vb
  name: Max(Int64[])
  nameWithType: MathHelper.Max(Int64[])
  fullName: DEM.Net.Lib.MathHelper.Max(System.Int64[])
  type: Method
  source:
    remote:
      path: DEM.Net.Lib/Helpers/MathHelper.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: Max
    path: ../DEM.Net.Lib/Helpers/MathHelper.cs
    startLine: 67
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib
  syntax:
    content: public static long Max(params long[] args)
    parameters:
    - id: args
      type: System.Int64[]
    return:
      type: System.Int64
    content.vb: Public Shared Function Max(ParamArray args As Long()) As Long
  overload: DEM.Net.Lib.MathHelper.Max*
  nameWithType.vb: MathHelper.Max(Int64())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: DEM.Net.Lib.MathHelper.Max(System.Int64())
  name.vb: Max(Int64())
- uid: DEM.Net.Lib.MathHelper.Max(System.Int32[])
  commentId: M:DEM.Net.Lib.MathHelper.Max(System.Int32[])
  id: Max(System.Int32[])
  parent: DEM.Net.Lib.MathHelper
  langs:
  - csharp
  - vb
  name: Max(Int32[])
  nameWithType: MathHelper.Max(Int32[])
  fullName: DEM.Net.Lib.MathHelper.Max(System.Int32[])
  type: Method
  source:
    remote:
      path: DEM.Net.Lib/Helpers/MathHelper.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: Max
    path: ../DEM.Net.Lib/Helpers/MathHelper.cs
    startLine: 71
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib
  syntax:
    content: public static int Max(params int[] args)
    parameters:
    - id: args
      type: System.Int32[]
    return:
      type: System.Int32
    content.vb: Public Shared Function Max(ParamArray args As Integer()) As Integer
  overload: DEM.Net.Lib.MathHelper.Max*
  nameWithType.vb: MathHelper.Max(Int32())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: DEM.Net.Lib.MathHelper.Max(System.Int32())
  name.vb: Max(Int32())
- uid: DEM.Net.Lib.MathHelper.Max(System.Nullable{System.Double}[])
  commentId: M:DEM.Net.Lib.MathHelper.Max(System.Nullable{System.Double}[])
  id: Max(System.Nullable{System.Double}[])
  parent: DEM.Net.Lib.MathHelper
  langs:
  - csharp
  - vb
  name: Max(Nullable<Double>[])
  nameWithType: MathHelper.Max(Nullable<Double>[])
  fullName: DEM.Net.Lib.MathHelper.Max(System.Nullable<System.Double>[])
  type: Method
  source:
    remote:
      path: DEM.Net.Lib/Helpers/MathHelper.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: Max
    path: ../DEM.Net.Lib/Helpers/MathHelper.cs
    startLine: 75
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib
  syntax:
    content: public static double? Max(params double? [] args)
    parameters:
    - id: args
      type: System.Nullable{System.Double}[]
    return:
      type: System.Nullable{System.Double}
    content.vb: Public Shared Function Max(ParamArray args As Double?()) As Double?
  overload: DEM.Net.Lib.MathHelper.Max*
  nameWithType.vb: MathHelper.Max(Nullable(Of Double)())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: DEM.Net.Lib.MathHelper.Max(System.Nullable(Of System.Double)())
  name.vb: Max(Nullable(Of Double)())
- uid: DEM.Net.Lib.MathHelper.Max(System.Nullable{System.Decimal}[])
  commentId: M:DEM.Net.Lib.MathHelper.Max(System.Nullable{System.Decimal}[])
  id: Max(System.Nullable{System.Decimal}[])
  parent: DEM.Net.Lib.MathHelper
  langs:
  - csharp
  - vb
  name: Max(Nullable<Decimal>[])
  nameWithType: MathHelper.Max(Nullable<Decimal>[])
  fullName: DEM.Net.Lib.MathHelper.Max(System.Nullable<System.Decimal>[])
  type: Method
  source:
    remote:
      path: DEM.Net.Lib/Helpers/MathHelper.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: Max
    path: ../DEM.Net.Lib/Helpers/MathHelper.cs
    startLine: 79
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib
  syntax:
    content: public static decimal? Max(params decimal? [] args)
    parameters:
    - id: args
      type: System.Nullable{System.Decimal}[]
    return:
      type: System.Nullable{System.Decimal}
    content.vb: Public Shared Function Max(ParamArray args As Decimal?()) As Decimal?
  overload: DEM.Net.Lib.MathHelper.Max*
  nameWithType.vb: MathHelper.Max(Nullable(Of Decimal)())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: DEM.Net.Lib.MathHelper.Max(System.Nullable(Of System.Decimal)())
  name.vb: Max(Nullable(Of Decimal)())
- uid: DEM.Net.Lib.MathHelper.Max(System.Nullable{System.Single}[])
  commentId: M:DEM.Net.Lib.MathHelper.Max(System.Nullable{System.Single}[])
  id: Max(System.Nullable{System.Single}[])
  parent: DEM.Net.Lib.MathHelper
  langs:
  - csharp
  - vb
  name: Max(Nullable<Single>[])
  nameWithType: MathHelper.Max(Nullable<Single>[])
  fullName: DEM.Net.Lib.MathHelper.Max(System.Nullable<System.Single>[])
  type: Method
  source:
    remote:
      path: DEM.Net.Lib/Helpers/MathHelper.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: Max
    path: ../DEM.Net.Lib/Helpers/MathHelper.cs
    startLine: 83
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib
  syntax:
    content: public static float? Max(params float? [] args)
    parameters:
    - id: args
      type: System.Nullable{System.Single}[]
    return:
      type: System.Nullable{System.Single}
    content.vb: Public Shared Function Max(ParamArray args As Single?()) As Single?
  overload: DEM.Net.Lib.MathHelper.Max*
  nameWithType.vb: MathHelper.Max(Nullable(Of Single)())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: DEM.Net.Lib.MathHelper.Max(System.Nullable(Of System.Single)())
  name.vb: Max(Nullable(Of Single)())
- uid: DEM.Net.Lib.MathHelper.Max(System.Nullable{System.Int64}[])
  commentId: M:DEM.Net.Lib.MathHelper.Max(System.Nullable{System.Int64}[])
  id: Max(System.Nullable{System.Int64}[])
  parent: DEM.Net.Lib.MathHelper
  langs:
  - csharp
  - vb
  name: Max(Nullable<Int64>[])
  nameWithType: MathHelper.Max(Nullable<Int64>[])
  fullName: DEM.Net.Lib.MathHelper.Max(System.Nullable<System.Int64>[])
  type: Method
  source:
    remote:
      path: DEM.Net.Lib/Helpers/MathHelper.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: Max
    path: ../DEM.Net.Lib/Helpers/MathHelper.cs
    startLine: 87
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib
  syntax:
    content: public static long? Max(params long? [] args)
    parameters:
    - id: args
      type: System.Nullable{System.Int64}[]
    return:
      type: System.Nullable{System.Int64}
    content.vb: Public Shared Function Max(ParamArray args As Long?()) As Long?
  overload: DEM.Net.Lib.MathHelper.Max*
  nameWithType.vb: MathHelper.Max(Nullable(Of Int64)())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: DEM.Net.Lib.MathHelper.Max(System.Nullable(Of System.Int64)())
  name.vb: Max(Nullable(Of Int64)())
- uid: DEM.Net.Lib.MathHelper.Max(System.Nullable{System.Int32}[])
  commentId: M:DEM.Net.Lib.MathHelper.Max(System.Nullable{System.Int32}[])
  id: Max(System.Nullable{System.Int32}[])
  parent: DEM.Net.Lib.MathHelper
  langs:
  - csharp
  - vb
  name: Max(Nullable<Int32>[])
  nameWithType: MathHelper.Max(Nullable<Int32>[])
  fullName: DEM.Net.Lib.MathHelper.Max(System.Nullable<System.Int32>[])
  type: Method
  source:
    remote:
      path: DEM.Net.Lib/Helpers/MathHelper.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: Max
    path: ../DEM.Net.Lib/Helpers/MathHelper.cs
    startLine: 91
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib
  syntax:
    content: public static int? Max(params int? [] args)
    parameters:
    - id: args
      type: System.Nullable{System.Int32}[]
    return:
      type: System.Nullable{System.Int32}
    content.vb: Public Shared Function Max(ParamArray args As Integer?()) As Integer?
  overload: DEM.Net.Lib.MathHelper.Max*
  nameWithType.vb: MathHelper.Max(Nullable(Of Int32)())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: DEM.Net.Lib.MathHelper.Max(System.Nullable(Of System.Int32)())
  name.vb: Max(Nullable(Of Int32)())
- uid: DEM.Net.Lib.MathHelper.Min(System.Double[])
  commentId: M:DEM.Net.Lib.MathHelper.Min(System.Double[])
  id: Min(System.Double[])
  parent: DEM.Net.Lib.MathHelper
  langs:
  - csharp
  - vb
  name: Min(Double[])
  nameWithType: MathHelper.Min(Double[])
  fullName: DEM.Net.Lib.MathHelper.Min(System.Double[])
  type: Method
  source:
    remote:
      path: DEM.Net.Lib/Helpers/MathHelper.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: Min
    path: ../DEM.Net.Lib/Helpers/MathHelper.cs
    startLine: 100
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib
  syntax:
    content: public static double Min(params double[] args)
    parameters:
    - id: args
      type: System.Double[]
    return:
      type: System.Double
    content.vb: Public Shared Function Min(ParamArray args As Double()) As Double
  overload: DEM.Net.Lib.MathHelper.Min*
  nameWithType.vb: MathHelper.Min(Double())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: DEM.Net.Lib.MathHelper.Min(System.Double())
  name.vb: Min(Double())
- uid: DEM.Net.Lib.MathHelper.Min(System.Decimal[])
  commentId: M:DEM.Net.Lib.MathHelper.Min(System.Decimal[])
  id: Min(System.Decimal[])
  parent: DEM.Net.Lib.MathHelper
  langs:
  - csharp
  - vb
  name: Min(Decimal[])
  nameWithType: MathHelper.Min(Decimal[])
  fullName: DEM.Net.Lib.MathHelper.Min(System.Decimal[])
  type: Method
  source:
    remote:
      path: DEM.Net.Lib/Helpers/MathHelper.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: Min
    path: ../DEM.Net.Lib/Helpers/MathHelper.cs
    startLine: 104
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib
  syntax:
    content: public static decimal Min(params decimal[] args)
    parameters:
    - id: args
      type: System.Decimal[]
    return:
      type: System.Decimal
    content.vb: Public Shared Function Min(ParamArray args As Decimal()) As Decimal
  overload: DEM.Net.Lib.MathHelper.Min*
  nameWithType.vb: MathHelper.Min(Decimal())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: DEM.Net.Lib.MathHelper.Min(System.Decimal())
  name.vb: Min(Decimal())
- uid: DEM.Net.Lib.MathHelper.Min(System.Single[])
  commentId: M:DEM.Net.Lib.MathHelper.Min(System.Single[])
  id: Min(System.Single[])
  parent: DEM.Net.Lib.MathHelper
  langs:
  - csharp
  - vb
  name: Min(Single[])
  nameWithType: MathHelper.Min(Single[])
  fullName: DEM.Net.Lib.MathHelper.Min(System.Single[])
  type: Method
  source:
    remote:
      path: DEM.Net.Lib/Helpers/MathHelper.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: Min
    path: ../DEM.Net.Lib/Helpers/MathHelper.cs
    startLine: 108
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib
  syntax:
    content: public static float Min(params float[] args)
    parameters:
    - id: args
      type: System.Single[]
    return:
      type: System.Single
    content.vb: Public Shared Function Min(ParamArray args As Single()) As Single
  overload: DEM.Net.Lib.MathHelper.Min*
  nameWithType.vb: MathHelper.Min(Single())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: DEM.Net.Lib.MathHelper.Min(System.Single())
  name.vb: Min(Single())
- uid: DEM.Net.Lib.MathHelper.Min(System.Int64[])
  commentId: M:DEM.Net.Lib.MathHelper.Min(System.Int64[])
  id: Min(System.Int64[])
  parent: DEM.Net.Lib.MathHelper
  langs:
  - csharp
  - vb
  name: Min(Int64[])
  nameWithType: MathHelper.Min(Int64[])
  fullName: DEM.Net.Lib.MathHelper.Min(System.Int64[])
  type: Method
  source:
    remote:
      path: DEM.Net.Lib/Helpers/MathHelper.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: Min
    path: ../DEM.Net.Lib/Helpers/MathHelper.cs
    startLine: 112
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib
  syntax:
    content: public static long Min(params long[] args)
    parameters:
    - id: args
      type: System.Int64[]
    return:
      type: System.Int64
    content.vb: Public Shared Function Min(ParamArray args As Long()) As Long
  overload: DEM.Net.Lib.MathHelper.Min*
  nameWithType.vb: MathHelper.Min(Int64())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: DEM.Net.Lib.MathHelper.Min(System.Int64())
  name.vb: Min(Int64())
- uid: DEM.Net.Lib.MathHelper.Min(System.Int32[])
  commentId: M:DEM.Net.Lib.MathHelper.Min(System.Int32[])
  id: Min(System.Int32[])
  parent: DEM.Net.Lib.MathHelper
  langs:
  - csharp
  - vb
  name: Min(Int32[])
  nameWithType: MathHelper.Min(Int32[])
  fullName: DEM.Net.Lib.MathHelper.Min(System.Int32[])
  type: Method
  source:
    remote:
      path: DEM.Net.Lib/Helpers/MathHelper.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: Min
    path: ../DEM.Net.Lib/Helpers/MathHelper.cs
    startLine: 116
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib
  syntax:
    content: public static int Min(params int[] args)
    parameters:
    - id: args
      type: System.Int32[]
    return:
      type: System.Int32
    content.vb: Public Shared Function Min(ParamArray args As Integer()) As Integer
  overload: DEM.Net.Lib.MathHelper.Min*
  nameWithType.vb: MathHelper.Min(Int32())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: DEM.Net.Lib.MathHelper.Min(System.Int32())
  name.vb: Min(Int32())
- uid: DEM.Net.Lib.MathHelper.Min(System.Nullable{System.Double}[])
  commentId: M:DEM.Net.Lib.MathHelper.Min(System.Nullable{System.Double}[])
  id: Min(System.Nullable{System.Double}[])
  parent: DEM.Net.Lib.MathHelper
  langs:
  - csharp
  - vb
  name: Min(Nullable<Double>[])
  nameWithType: MathHelper.Min(Nullable<Double>[])
  fullName: DEM.Net.Lib.MathHelper.Min(System.Nullable<System.Double>[])
  type: Method
  source:
    remote:
      path: DEM.Net.Lib/Helpers/MathHelper.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: Min
    path: ../DEM.Net.Lib/Helpers/MathHelper.cs
    startLine: 120
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib
  syntax:
    content: public static double? Min(params double? [] args)
    parameters:
    - id: args
      type: System.Nullable{System.Double}[]
    return:
      type: System.Nullable{System.Double}
    content.vb: Public Shared Function Min(ParamArray args As Double?()) As Double?
  overload: DEM.Net.Lib.MathHelper.Min*
  nameWithType.vb: MathHelper.Min(Nullable(Of Double)())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: DEM.Net.Lib.MathHelper.Min(System.Nullable(Of System.Double)())
  name.vb: Min(Nullable(Of Double)())
- uid: DEM.Net.Lib.MathHelper.Min(System.Nullable{System.Decimal}[])
  commentId: M:DEM.Net.Lib.MathHelper.Min(System.Nullable{System.Decimal}[])
  id: Min(System.Nullable{System.Decimal}[])
  parent: DEM.Net.Lib.MathHelper
  langs:
  - csharp
  - vb
  name: Min(Nullable<Decimal>[])
  nameWithType: MathHelper.Min(Nullable<Decimal>[])
  fullName: DEM.Net.Lib.MathHelper.Min(System.Nullable<System.Decimal>[])
  type: Method
  source:
    remote:
      path: DEM.Net.Lib/Helpers/MathHelper.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: Min
    path: ../DEM.Net.Lib/Helpers/MathHelper.cs
    startLine: 124
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib
  syntax:
    content: public static decimal? Min(params decimal? [] args)
    parameters:
    - id: args
      type: System.Nullable{System.Decimal}[]
    return:
      type: System.Nullable{System.Decimal}
    content.vb: Public Shared Function Min(ParamArray args As Decimal?()) As Decimal?
  overload: DEM.Net.Lib.MathHelper.Min*
  nameWithType.vb: MathHelper.Min(Nullable(Of Decimal)())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: DEM.Net.Lib.MathHelper.Min(System.Nullable(Of System.Decimal)())
  name.vb: Min(Nullable(Of Decimal)())
- uid: DEM.Net.Lib.MathHelper.Min(System.Nullable{System.Single}[])
  commentId: M:DEM.Net.Lib.MathHelper.Min(System.Nullable{System.Single}[])
  id: Min(System.Nullable{System.Single}[])
  parent: DEM.Net.Lib.MathHelper
  langs:
  - csharp
  - vb
  name: Min(Nullable<Single>[])
  nameWithType: MathHelper.Min(Nullable<Single>[])
  fullName: DEM.Net.Lib.MathHelper.Min(System.Nullable<System.Single>[])
  type: Method
  source:
    remote:
      path: DEM.Net.Lib/Helpers/MathHelper.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: Min
    path: ../DEM.Net.Lib/Helpers/MathHelper.cs
    startLine: 128
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib
  syntax:
    content: public static float? Min(params float? [] args)
    parameters:
    - id: args
      type: System.Nullable{System.Single}[]
    return:
      type: System.Nullable{System.Single}
    content.vb: Public Shared Function Min(ParamArray args As Single?()) As Single?
  overload: DEM.Net.Lib.MathHelper.Min*
  nameWithType.vb: MathHelper.Min(Nullable(Of Single)())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: DEM.Net.Lib.MathHelper.Min(System.Nullable(Of System.Single)())
  name.vb: Min(Nullable(Of Single)())
- uid: DEM.Net.Lib.MathHelper.Min(System.Nullable{System.Int64}[])
  commentId: M:DEM.Net.Lib.MathHelper.Min(System.Nullable{System.Int64}[])
  id: Min(System.Nullable{System.Int64}[])
  parent: DEM.Net.Lib.MathHelper
  langs:
  - csharp
  - vb
  name: Min(Nullable<Int64>[])
  nameWithType: MathHelper.Min(Nullable<Int64>[])
  fullName: DEM.Net.Lib.MathHelper.Min(System.Nullable<System.Int64>[])
  type: Method
  source:
    remote:
      path: DEM.Net.Lib/Helpers/MathHelper.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: Min
    path: ../DEM.Net.Lib/Helpers/MathHelper.cs
    startLine: 132
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib
  syntax:
    content: public static long? Min(params long? [] args)
    parameters:
    - id: args
      type: System.Nullable{System.Int64}[]
    return:
      type: System.Nullable{System.Int64}
    content.vb: Public Shared Function Min(ParamArray args As Long?()) As Long?
  overload: DEM.Net.Lib.MathHelper.Min*
  nameWithType.vb: MathHelper.Min(Nullable(Of Int64)())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: DEM.Net.Lib.MathHelper.Min(System.Nullable(Of System.Int64)())
  name.vb: Min(Nullable(Of Int64)())
- uid: DEM.Net.Lib.MathHelper.Min(System.Nullable{System.Int32}[])
  commentId: M:DEM.Net.Lib.MathHelper.Min(System.Nullable{System.Int32}[])
  id: Min(System.Nullable{System.Int32}[])
  parent: DEM.Net.Lib.MathHelper
  langs:
  - csharp
  - vb
  name: Min(Nullable<Int32>[])
  nameWithType: MathHelper.Min(Nullable<Int32>[])
  fullName: DEM.Net.Lib.MathHelper.Min(System.Nullable<System.Int32>[])
  type: Method
  source:
    remote:
      path: DEM.Net.Lib/Helpers/MathHelper.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: Min
    path: ../DEM.Net.Lib/Helpers/MathHelper.cs
    startLine: 136
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib
  syntax:
    content: public static int? Min(params int? [] args)
    parameters:
    - id: args
      type: System.Nullable{System.Int32}[]
    return:
      type: System.Nullable{System.Int32}
    content.vb: Public Shared Function Min(ParamArray args As Integer?()) As Integer?
  overload: DEM.Net.Lib.MathHelper.Min*
  nameWithType.vb: MathHelper.Min(Nullable(Of Int32)())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: DEM.Net.Lib.MathHelper.Min(System.Nullable(Of System.Int32)())
  name.vb: Min(Nullable(Of Int32)())
- uid: DEM.Net.Lib.MathHelper.Average(System.Double[])
  commentId: M:DEM.Net.Lib.MathHelper.Average(System.Double[])
  id: Average(System.Double[])
  parent: DEM.Net.Lib.MathHelper
  langs:
  - csharp
  - vb
  name: Average(Double[])
  nameWithType: MathHelper.Average(Double[])
  fullName: DEM.Net.Lib.MathHelper.Average(System.Double[])
  type: Method
  source:
    remote:
      path: DEM.Net.Lib/Helpers/MathHelper.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: Average
    path: ../DEM.Net.Lib/Helpers/MathHelper.cs
    startLine: 145
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib
  syntax:
    content: public static double Average(params double[] args)
    parameters:
    - id: args
      type: System.Double[]
    return:
      type: System.Double
    content.vb: Public Shared Function Average(ParamArray args As Double()) As Double
  overload: DEM.Net.Lib.MathHelper.Average*
  nameWithType.vb: MathHelper.Average(Double())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: DEM.Net.Lib.MathHelper.Average(System.Double())
  name.vb: Average(Double())
- uid: DEM.Net.Lib.MathHelper.Average(System.Decimal[])
  commentId: M:DEM.Net.Lib.MathHelper.Average(System.Decimal[])
  id: Average(System.Decimal[])
  parent: DEM.Net.Lib.MathHelper
  langs:
  - csharp
  - vb
  name: Average(Decimal[])
  nameWithType: MathHelper.Average(Decimal[])
  fullName: DEM.Net.Lib.MathHelper.Average(System.Decimal[])
  type: Method
  source:
    remote:
      path: DEM.Net.Lib/Helpers/MathHelper.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: Average
    path: ../DEM.Net.Lib/Helpers/MathHelper.cs
    startLine: 149
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib
  syntax:
    content: public static decimal Average(params decimal[] args)
    parameters:
    - id: args
      type: System.Decimal[]
    return:
      type: System.Decimal
    content.vb: Public Shared Function Average(ParamArray args As Decimal()) As Decimal
  overload: DEM.Net.Lib.MathHelper.Average*
  nameWithType.vb: MathHelper.Average(Decimal())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: DEM.Net.Lib.MathHelper.Average(System.Decimal())
  name.vb: Average(Decimal())
- uid: DEM.Net.Lib.MathHelper.Average(System.Single[])
  commentId: M:DEM.Net.Lib.MathHelper.Average(System.Single[])
  id: Average(System.Single[])
  parent: DEM.Net.Lib.MathHelper
  langs:
  - csharp
  - vb
  name: Average(Single[])
  nameWithType: MathHelper.Average(Single[])
  fullName: DEM.Net.Lib.MathHelper.Average(System.Single[])
  type: Method
  source:
    remote:
      path: DEM.Net.Lib/Helpers/MathHelper.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: Average
    path: ../DEM.Net.Lib/Helpers/MathHelper.cs
    startLine: 153
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib
  syntax:
    content: public static float Average(params float[] args)
    parameters:
    - id: args
      type: System.Single[]
    return:
      type: System.Single
    content.vb: Public Shared Function Average(ParamArray args As Single()) As Single
  overload: DEM.Net.Lib.MathHelper.Average*
  nameWithType.vb: MathHelper.Average(Single())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: DEM.Net.Lib.MathHelper.Average(System.Single())
  name.vb: Average(Single())
- uid: DEM.Net.Lib.MathHelper.Average(System.Nullable{System.Double}[])
  commentId: M:DEM.Net.Lib.MathHelper.Average(System.Nullable{System.Double}[])
  id: Average(System.Nullable{System.Double}[])
  parent: DEM.Net.Lib.MathHelper
  langs:
  - csharp
  - vb
  name: Average(Nullable<Double>[])
  nameWithType: MathHelper.Average(Nullable<Double>[])
  fullName: DEM.Net.Lib.MathHelper.Average(System.Nullable<System.Double>[])
  type: Method
  source:
    remote:
      path: DEM.Net.Lib/Helpers/MathHelper.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: Average
    path: ../DEM.Net.Lib/Helpers/MathHelper.cs
    startLine: 157
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib
  syntax:
    content: public static double? Average(params double? [] args)
    parameters:
    - id: args
      type: System.Nullable{System.Double}[]
    return:
      type: System.Nullable{System.Double}
    content.vb: Public Shared Function Average(ParamArray args As Double?()) As Double?
  overload: DEM.Net.Lib.MathHelper.Average*
  nameWithType.vb: MathHelper.Average(Nullable(Of Double)())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: DEM.Net.Lib.MathHelper.Average(System.Nullable(Of System.Double)())
  name.vb: Average(Nullable(Of Double)())
- uid: DEM.Net.Lib.MathHelper.Average(System.Nullable{System.Decimal}[])
  commentId: M:DEM.Net.Lib.MathHelper.Average(System.Nullable{System.Decimal}[])
  id: Average(System.Nullable{System.Decimal}[])
  parent: DEM.Net.Lib.MathHelper
  langs:
  - csharp
  - vb
  name: Average(Nullable<Decimal>[])
  nameWithType: MathHelper.Average(Nullable<Decimal>[])
  fullName: DEM.Net.Lib.MathHelper.Average(System.Nullable<System.Decimal>[])
  type: Method
  source:
    remote:
      path: DEM.Net.Lib/Helpers/MathHelper.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: Average
    path: ../DEM.Net.Lib/Helpers/MathHelper.cs
    startLine: 161
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib
  syntax:
    content: public static decimal? Average(params decimal? [] args)
    parameters:
    - id: args
      type: System.Nullable{System.Decimal}[]
    return:
      type: System.Nullable{System.Decimal}
    content.vb: Public Shared Function Average(ParamArray args As Decimal?()) As Decimal?
  overload: DEM.Net.Lib.MathHelper.Average*
  nameWithType.vb: MathHelper.Average(Nullable(Of Decimal)())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: DEM.Net.Lib.MathHelper.Average(System.Nullable(Of System.Decimal)())
  name.vb: Average(Nullable(Of Decimal)())
- uid: DEM.Net.Lib.MathHelper.Average(System.Nullable{System.Single}[])
  commentId: M:DEM.Net.Lib.MathHelper.Average(System.Nullable{System.Single}[])
  id: Average(System.Nullable{System.Single}[])
  parent: DEM.Net.Lib.MathHelper
  langs:
  - csharp
  - vb
  name: Average(Nullable<Single>[])
  nameWithType: MathHelper.Average(Nullable<Single>[])
  fullName: DEM.Net.Lib.MathHelper.Average(System.Nullable<System.Single>[])
  type: Method
  source:
    remote:
      path: DEM.Net.Lib/Helpers/MathHelper.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: Average
    path: ../DEM.Net.Lib/Helpers/MathHelper.cs
    startLine: 165
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib
  syntax:
    content: public static float? Average(params float? [] args)
    parameters:
    - id: args
      type: System.Nullable{System.Single}[]
    return:
      type: System.Nullable{System.Single}
    content.vb: Public Shared Function Average(ParamArray args As Single?()) As Single?
  overload: DEM.Net.Lib.MathHelper.Average*
  nameWithType.vb: MathHelper.Average(Nullable(Of Single)())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: DEM.Net.Lib.MathHelper.Average(System.Nullable(Of System.Single)())
  name.vb: Average(Nullable(Of Single)())
references:
- uid: DEM.Net.Lib
  commentId: N:DEM.Net.Lib
  name: DEM.Net.Lib
  nameWithType: DEM.Net.Lib
  fullName: DEM.Net.Lib
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: DEM.Net.Lib.MathHelper.Lerp*
  commentId: Overload:DEM.Net.Lib.MathHelper.Lerp
  name: Lerp
  nameWithType: MathHelper.Lerp
  fullName: DEM.Net.Lib.MathHelper.Lerp
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: DEM.Net.Lib.MathHelper.Map*
  commentId: Overload:DEM.Net.Lib.MathHelper.Map
  name: Map
  nameWithType: MathHelper.Map
  fullName: DEM.Net.Lib.MathHelper.Map
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: DEM.Net.Lib.MathHelper.Clamp*
  commentId: Overload:DEM.Net.Lib.MathHelper.Clamp
  name: Clamp
  nameWithType: MathHelper.Clamp
  fullName: DEM.Net.Lib.MathHelper.Clamp
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: DEM.Net.Lib.MathHelper.Max*
  commentId: Overload:DEM.Net.Lib.MathHelper.Max
  name: Max
  nameWithType: MathHelper.Max
  fullName: DEM.Net.Lib.MathHelper.Max
- uid: System.Double[]
  isExternal: true
  name: Double[]
  nameWithType: Double[]
  fullName: System.Double[]
  nameWithType.vb: Double()
  fullName.vb: System.Double()
  name.vb: Double()
  spec.csharp:
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Decimal[]
  isExternal: true
  name: Decimal[]
  nameWithType: Decimal[]
  fullName: System.Decimal[]
  nameWithType.vb: Decimal()
  fullName.vb: System.Decimal()
  name.vb: Decimal()
  spec.csharp:
  - uid: System.Decimal
    name: Decimal
    nameWithType: Decimal
    fullName: System.Decimal
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Decimal
    name: Decimal
    nameWithType: Decimal
    fullName: System.Decimal
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Decimal
  commentId: T:System.Decimal
  parent: System
  isExternal: true
  name: Decimal
  nameWithType: Decimal
  fullName: System.Decimal
- uid: System.Single[]
  isExternal: true
  name: Single[]
  nameWithType: Single[]
  fullName: System.Single[]
  nameWithType.vb: Single()
  fullName.vb: System.Single()
  name.vb: Single()
  spec.csharp:
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Int64[]
  isExternal: true
  name: Int64[]
  nameWithType: Int64[]
  fullName: System.Int64[]
  nameWithType.vb: Int64()
  fullName.vb: System.Int64()
  name.vb: Int64()
  spec.csharp:
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Int32[]
  isExternal: true
  name: Int32[]
  nameWithType: Int32[]
  fullName: System.Int32[]
  nameWithType.vb: Int32()
  fullName.vb: System.Int32()
  name.vb: Int32()
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Nullable{System.Double}[]
  isExternal: true
  name: Nullable<Double>[]
  nameWithType: Nullable<Double>[]
  fullName: System.Nullable<System.Double>[]
  nameWithType.vb: Nullable(Of Double)()
  fullName.vb: System.Nullable(Of System.Double)()
  name.vb: Nullable(Of Double)()
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Nullable{System.Double}
  commentId: T:System.Nullable{System.Double}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Double>
  nameWithType: Nullable<Double>
  fullName: System.Nullable<System.Double>
  nameWithType.vb: Nullable(Of Double)
  fullName.vb: System.Nullable(Of System.Double)
  name.vb: Nullable(Of Double)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{System.Decimal}[]
  isExternal: true
  name: Nullable<Decimal>[]
  nameWithType: Nullable<Decimal>[]
  fullName: System.Nullable<System.Decimal>[]
  nameWithType.vb: Nullable(Of Decimal)()
  fullName.vb: System.Nullable(Of System.Decimal)()
  name.vb: Nullable(Of Decimal)()
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Decimal
    name: Decimal
    nameWithType: Decimal
    fullName: System.Decimal
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Decimal
    name: Decimal
    nameWithType: Decimal
    fullName: System.Decimal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Nullable{System.Decimal}
  commentId: T:System.Nullable{System.Decimal}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Decimal>
  nameWithType: Nullable<Decimal>
  fullName: System.Nullable<System.Decimal>
  nameWithType.vb: Nullable(Of Decimal)
  fullName.vb: System.Nullable(Of System.Decimal)
  name.vb: Nullable(Of Decimal)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Decimal
    name: Decimal
    nameWithType: Decimal
    fullName: System.Decimal
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Decimal
    name: Decimal
    nameWithType: Decimal
    fullName: System.Decimal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{System.Single}[]
  isExternal: true
  name: Nullable<Single>[]
  nameWithType: Nullable<Single>[]
  fullName: System.Nullable<System.Single>[]
  nameWithType.vb: Nullable(Of Single)()
  fullName.vb: System.Nullable(Of System.Single)()
  name.vb: Nullable(Of Single)()
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Nullable{System.Single}
  commentId: T:System.Nullable{System.Single}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Single>
  nameWithType: Nullable<Single>
  fullName: System.Nullable<System.Single>
  nameWithType.vb: Nullable(Of Single)
  fullName.vb: System.Nullable(Of System.Single)
  name.vb: Nullable(Of Single)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{System.Int64}[]
  isExternal: true
  name: Nullable<Int64>[]
  nameWithType: Nullable<Int64>[]
  fullName: System.Nullable<System.Int64>[]
  nameWithType.vb: Nullable(Of Int64)()
  fullName.vb: System.Nullable(Of System.Int64)()
  name.vb: Nullable(Of Int64)()
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Nullable{System.Int64}
  commentId: T:System.Nullable{System.Int64}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int64>
  nameWithType: Nullable<Int64>
  fullName: System.Nullable<System.Int64>
  nameWithType.vb: Nullable(Of Int64)
  fullName.vb: System.Nullable(Of System.Int64)
  name.vb: Nullable(Of Int64)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{System.Int32}[]
  isExternal: true
  name: Nullable<Int32>[]
  nameWithType: Nullable<Int32>[]
  fullName: System.Nullable<System.Int32>[]
  nameWithType.vb: Nullable(Of Int32)()
  fullName.vb: System.Nullable(Of System.Int32)()
  name.vb: Nullable(Of Int32)()
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DEM.Net.Lib.MathHelper.Min*
  commentId: Overload:DEM.Net.Lib.MathHelper.Min
  name: Min
  nameWithType: MathHelper.Min
  fullName: DEM.Net.Lib.MathHelper.Min
- uid: DEM.Net.Lib.MathHelper.Average*
  commentId: Overload:DEM.Net.Lib.MathHelper.Average
  name: Average
  nameWithType: MathHelper.Average
  fullName: DEM.Net.Lib.MathHelper.Average
