### YamlMime:ManagedReference
items:
- uid: DEM.Net.Lib.GeometryService
  commentId: T:DEM.Net.Lib.GeometryService
  id: GeometryService
  parent: DEM.Net.Lib
  children:
  - DEM.Net.Lib.GeometryService.ComputeMetrics(System.Collections.Generic.List{DEM.Net.Lib.GeoPoint})
  - DEM.Net.Lib.GeometryService.DistanceTo(DEM.Net.Lib.GeoPoint,DEM.Net.Lib.GeoPoint)
  - DEM.Net.Lib.GeometryService.Geometries(GeoAPI.Geometries.IGeometry)
  - DEM.Net.Lib.GeometryService.GetBoundingBox(DEM.Net.Lib.GeoSegment)
  - DEM.Net.Lib.GeometryService.GetBoundingBox(GeoAPI.Geometries.IGeometry)
  - DEM.Net.Lib.GeometryService.GetBoundingBox(System.Collections.Generic.IEnumerable{DEM.Net.Lib.GeoPoint})
  - DEM.Net.Lib.GeometryService.GetBoundingBox(System.String)
  - DEM.Net.Lib.GeometryService.GetLength(System.String)
  - DEM.Net.Lib.GeometryService.GetLineLength_Meters(System.Collections.Generic.List{DEM.Net.Lib.GeoPoint})
  - DEM.Net.Lib.GeometryService.LineLineIntersection(DEM.Net.Lib.GeoPoint@,DEM.Net.Lib.GeoSegment,DEM.Net.Lib.GeoSegment)
  - DEM.Net.Lib.GeometryService.ParseGeoPointAsGeometryLine(System.Collections.Generic.IEnumerable{DEM.Net.Lib.GeoPoint})
  - DEM.Net.Lib.GeometryService.ParseWKTAsGeometry(System.String)
  - DEM.Net.Lib.GeometryService.Segments(GeoAPI.Geometries.IGeometry)
  - DEM.Net.Lib.GeometryService.ToGeoPoint(GeoAPI.Geometries.Coordinate)
  langs:
  - csharp
  - vb
  name: GeometryService
  nameWithType: GeometryService
  fullName: DEM.Net.Lib.GeometryService
  type: Class
  source:
    remote:
      path: DEM.Net.Lib/Services/GeometryService.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: GeometryService
    path: ../DEM.Net.Lib/Services/GeometryService.cs
    startLine: 11
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib
  syntax:
    content: public static class GeometryService
    content.vb: Public Module GeometryService
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: DEM.Net.Lib.GeometryService.ParseWKTAsGeometry(System.String)
  commentId: M:DEM.Net.Lib.GeometryService.ParseWKTAsGeometry(System.String)
  id: ParseWKTAsGeometry(System.String)
  parent: DEM.Net.Lib.GeometryService
  langs:
  - csharp
  - vb
  name: ParseWKTAsGeometry(String)
  nameWithType: GeometryService.ParseWKTAsGeometry(String)
  fullName: DEM.Net.Lib.GeometryService.ParseWKTAsGeometry(System.String)
  type: Method
  source:
    remote:
      path: DEM.Net.Lib/Services/GeometryService.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: ParseWKTAsGeometry
    path: ../DEM.Net.Lib/Services/GeometryService.cs
    startLine: 24
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib
  syntax:
    content: public static IGeometry ParseWKTAsGeometry(string geomWKT)
    parameters:
    - id: geomWKT
      type: System.String
    return:
      type: GeoAPI.Geometries.IGeometry
    content.vb: Public Shared Function ParseWKTAsGeometry(geomWKT As String) As IGeometry
  overload: DEM.Net.Lib.GeometryService.ParseWKTAsGeometry*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DEM.Net.Lib.GeometryService.GetBoundingBox(System.String)
  commentId: M:DEM.Net.Lib.GeometryService.GetBoundingBox(System.String)
  id: GetBoundingBox(System.String)
  parent: DEM.Net.Lib.GeometryService
  langs:
  - csharp
  - vb
  name: GetBoundingBox(String)
  nameWithType: GeometryService.GetBoundingBox(String)
  fullName: DEM.Net.Lib.GeometryService.GetBoundingBox(System.String)
  type: Method
  source:
    remote:
      path: DEM.Net.Lib/Services/GeometryService.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: GetBoundingBox
    path: ../DEM.Net.Lib/Services/GeometryService.cs
    startLine: 29
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib
  syntax:
    content: public static BoundingBox GetBoundingBox(string geomWKT)
    parameters:
    - id: geomWKT
      type: System.String
    return:
      type: DEM.Net.Lib.BoundingBox
    content.vb: Public Shared Function GetBoundingBox(geomWKT As String) As BoundingBox
  overload: DEM.Net.Lib.GeometryService.GetBoundingBox*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DEM.Net.Lib.GeometryService.GetBoundingBox(GeoAPI.Geometries.IGeometry)
  commentId: M:DEM.Net.Lib.GeometryService.GetBoundingBox(GeoAPI.Geometries.IGeometry)
  id: GetBoundingBox(GeoAPI.Geometries.IGeometry)
  isExtensionMethod: true
  parent: DEM.Net.Lib.GeometryService
  langs:
  - csharp
  - vb
  name: GetBoundingBox(IGeometry)
  nameWithType: GeometryService.GetBoundingBox(IGeometry)
  fullName: DEM.Net.Lib.GeometryService.GetBoundingBox(GeoAPI.Geometries.IGeometry)
  type: Method
  source:
    remote:
      path: DEM.Net.Lib/Services/GeometryService.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: GetBoundingBox
    path: ../DEM.Net.Lib/Services/GeometryService.cs
    startLine: 34
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib
  syntax:
    content: public static BoundingBox GetBoundingBox(this IGeometry geom)
    parameters:
    - id: geom
      type: GeoAPI.Geometries.IGeometry
    return:
      type: DEM.Net.Lib.BoundingBox
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetBoundingBox(geom As IGeometry) As BoundingBox
  overload: DEM.Net.Lib.GeometryService.GetBoundingBox*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DEM.Net.Lib.GeometryService.ParseGeoPointAsGeometryLine(System.Collections.Generic.IEnumerable{DEM.Net.Lib.GeoPoint})
  commentId: M:DEM.Net.Lib.GeometryService.ParseGeoPointAsGeometryLine(System.Collections.Generic.IEnumerable{DEM.Net.Lib.GeoPoint})
  id: ParseGeoPointAsGeometryLine(System.Collections.Generic.IEnumerable{DEM.Net.Lib.GeoPoint})
  parent: DEM.Net.Lib.GeometryService
  langs:
  - csharp
  - vb
  name: ParseGeoPointAsGeometryLine(IEnumerable<GeoPoint>)
  nameWithType: GeometryService.ParseGeoPointAsGeometryLine(IEnumerable<GeoPoint>)
  fullName: DEM.Net.Lib.GeometryService.ParseGeoPointAsGeometryLine(System.Collections.Generic.IEnumerable<DEM.Net.Lib.GeoPoint>)
  type: Method
  source:
    remote:
      path: DEM.Net.Lib/Services/GeometryService.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: ParseGeoPointAsGeometryLine
    path: ../DEM.Net.Lib/Services/GeometryService.cs
    startLine: 47
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib
  summary: "\nProblem here : self intersecting lines are not supported. Not ideal for GPS tracks...\n"
  example: []
  syntax:
    content: public static IGeometry ParseGeoPointAsGeometryLine(IEnumerable<GeoPoint> points)
    parameters:
    - id: points
      type: System.Collections.Generic.IEnumerable{DEM.Net.Lib.GeoPoint}
      description: ''
    return:
      type: GeoAPI.Geometries.IGeometry
      description: ''
    content.vb: Public Shared Function ParseGeoPointAsGeometryLine(points As IEnumerable(Of GeoPoint)) As IGeometry
  overload: DEM.Net.Lib.GeometryService.ParseGeoPointAsGeometryLine*
  nameWithType.vb: GeometryService.ParseGeoPointAsGeometryLine(IEnumerable(Of GeoPoint))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: DEM.Net.Lib.GeometryService.ParseGeoPointAsGeometryLine(System.Collections.Generic.IEnumerable(Of DEM.Net.Lib.GeoPoint))
  name.vb: ParseGeoPointAsGeometryLine(IEnumerable(Of GeoPoint))
- uid: DEM.Net.Lib.GeometryService.LineLineIntersection(DEM.Net.Lib.GeoPoint@,DEM.Net.Lib.GeoSegment,DEM.Net.Lib.GeoSegment)
  commentId: M:DEM.Net.Lib.GeometryService.LineLineIntersection(DEM.Net.Lib.GeoPoint@,DEM.Net.Lib.GeoSegment,DEM.Net.Lib.GeoSegment)
  id: LineLineIntersection(DEM.Net.Lib.GeoPoint@,DEM.Net.Lib.GeoSegment,DEM.Net.Lib.GeoSegment)
  parent: DEM.Net.Lib.GeometryService
  langs:
  - csharp
  - vb
  name: LineLineIntersection(out GeoPoint, GeoSegment, GeoSegment)
  nameWithType: GeometryService.LineLineIntersection(out GeoPoint, GeoSegment, GeoSegment)
  fullName: DEM.Net.Lib.GeometryService.LineLineIntersection(out DEM.Net.Lib.GeoPoint, DEM.Net.Lib.GeoSegment, DEM.Net.Lib.GeoSegment)
  type: Method
  source:
    remote:
      path: DEM.Net.Lib/Services/GeometryService.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: LineLineIntersection
    path: ../DEM.Net.Lib/Services/GeometryService.cs
    startLine: 55
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib
  syntax:
    content: public static bool LineLineIntersection(out GeoPoint intersection, GeoSegment line1, GeoSegment line2)
    parameters:
    - id: intersection
      type: DEM.Net.Lib.GeoPoint
    - id: line1
      type: DEM.Net.Lib.GeoSegment
    - id: line2
      type: DEM.Net.Lib.GeoSegment
    return:
      type: System.Boolean
    content.vb: Public Shared Function LineLineIntersection(ByRef intersection As GeoPoint, line1 As GeoSegment, line2 As GeoSegment) As Boolean
  overload: DEM.Net.Lib.GeometryService.LineLineIntersection*
  nameWithType.vb: GeometryService.LineLineIntersection(ByRef GeoPoint, GeoSegment, GeoSegment)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: DEM.Net.Lib.GeometryService.LineLineIntersection(ByRef DEM.Net.Lib.GeoPoint, DEM.Net.Lib.GeoSegment, DEM.Net.Lib.GeoSegment)
  name.vb: LineLineIntersection(ByRef GeoPoint, GeoSegment, GeoSegment)
- uid: DEM.Net.Lib.GeometryService.ComputeMetrics(System.Collections.Generic.List{DEM.Net.Lib.GeoPoint})
  commentId: M:DEM.Net.Lib.GeometryService.ComputeMetrics(System.Collections.Generic.List{DEM.Net.Lib.GeoPoint})
  id: ComputeMetrics(System.Collections.Generic.List{DEM.Net.Lib.GeoPoint})
  parent: DEM.Net.Lib.GeometryService
  langs:
  - csharp
  - vb
  name: ComputeMetrics(List<GeoPoint>)
  nameWithType: GeometryService.ComputeMetrics(List<GeoPoint>)
  fullName: DEM.Net.Lib.GeometryService.ComputeMetrics(System.Collections.Generic.List<DEM.Net.Lib.GeoPoint>)
  type: Method
  source:
    remote:
      path: DEM.Net.Lib/Services/GeometryService.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: ComputeMetrics
    path: ../DEM.Net.Lib/Services/GeometryService.cs
    startLine: 90
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib
  syntax:
    content: public static ElevationMetrics ComputeMetrics(List<GeoPoint> points)
    parameters:
    - id: points
      type: System.Collections.Generic.List{DEM.Net.Lib.GeoPoint}
    return:
      type: DEM.Net.Lib.ElevationMetrics
    content.vb: Public Shared Function ComputeMetrics(points As List(Of GeoPoint)) As ElevationMetrics
  overload: DEM.Net.Lib.GeometryService.ComputeMetrics*
  nameWithType.vb: GeometryService.ComputeMetrics(List(Of GeoPoint))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: DEM.Net.Lib.GeometryService.ComputeMetrics(System.Collections.Generic.List(Of DEM.Net.Lib.GeoPoint))
  name.vb: ComputeMetrics(List(Of GeoPoint))
- uid: DEM.Net.Lib.GeometryService.GetLength(System.String)
  commentId: M:DEM.Net.Lib.GeometryService.GetLength(System.String)
  id: GetLength(System.String)
  parent: DEM.Net.Lib.GeometryService
  langs:
  - csharp
  - vb
  name: GetLength(String)
  nameWithType: GeometryService.GetLength(String)
  fullName: DEM.Net.Lib.GeometryService.GetLength(System.String)
  type: Method
  source:
    remote:
      path: DEM.Net.Lib/Services/GeometryService.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: GetLength
    path: ../DEM.Net.Lib/Services/GeometryService.cs
    startLine: 135
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib
  syntax:
    content: public static double GetLength(string lineWKT)
    parameters:
    - id: lineWKT
      type: System.String
    return:
      type: System.Double
    content.vb: Public Shared Function GetLength(lineWKT As String) As Double
  overload: DEM.Net.Lib.GeometryService.GetLength*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DEM.Net.Lib.GeometryService.DistanceTo(DEM.Net.Lib.GeoPoint,DEM.Net.Lib.GeoPoint)
  commentId: M:DEM.Net.Lib.GeometryService.DistanceTo(DEM.Net.Lib.GeoPoint,DEM.Net.Lib.GeoPoint)
  id: DistanceTo(DEM.Net.Lib.GeoPoint,DEM.Net.Lib.GeoPoint)
  isExtensionMethod: true
  parent: DEM.Net.Lib.GeometryService
  langs:
  - csharp
  - vb
  name: DistanceTo(GeoPoint, GeoPoint)
  nameWithType: GeometryService.DistanceTo(GeoPoint, GeoPoint)
  fullName: DEM.Net.Lib.GeometryService.DistanceTo(DEM.Net.Lib.GeoPoint, DEM.Net.Lib.GeoPoint)
  type: Method
  source:
    remote:
      path: DEM.Net.Lib/Services/GeometryService.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: DistanceTo
    path: ../DEM.Net.Lib/Services/GeometryService.cs
    startLine: 140
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib
  syntax:
    content: public static double DistanceTo(this GeoPoint pt1, GeoPoint pt2)
    parameters:
    - id: pt1
      type: DEM.Net.Lib.GeoPoint
    - id: pt2
      type: DEM.Net.Lib.GeoPoint
    return:
      type: System.Double
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function DistanceTo(pt1 As GeoPoint, pt2 As GeoPoint) As Double
  overload: DEM.Net.Lib.GeometryService.DistanceTo*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DEM.Net.Lib.GeometryService.GetLineLength_Meters(System.Collections.Generic.List{DEM.Net.Lib.GeoPoint})
  commentId: M:DEM.Net.Lib.GeometryService.GetLineLength_Meters(System.Collections.Generic.List{DEM.Net.Lib.GeoPoint})
  id: GetLineLength_Meters(System.Collections.Generic.List{DEM.Net.Lib.GeoPoint})
  parent: DEM.Net.Lib.GeometryService
  langs:
  - csharp
  - vb
  name: GetLineLength_Meters(List<GeoPoint>)
  nameWithType: GeometryService.GetLineLength_Meters(List<GeoPoint>)
  fullName: DEM.Net.Lib.GeometryService.GetLineLength_Meters(System.Collections.Generic.List<DEM.Net.Lib.GeoPoint>)
  type: Method
  source:
    remote:
      path: DEM.Net.Lib/Services/GeometryService.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: GetLineLength_Meters
    path: ../DEM.Net.Lib/Services/GeometryService.cs
    startLine: 173
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib
  syntax:
    content: public static double GetLineLength_Meters(List<GeoPoint> points)
    parameters:
    - id: points
      type: System.Collections.Generic.List{DEM.Net.Lib.GeoPoint}
    return:
      type: System.Double
    content.vb: Public Shared Function GetLineLength_Meters(points As List(Of GeoPoint)) As Double
  overload: DEM.Net.Lib.GeometryService.GetLineLength_Meters*
  nameWithType.vb: GeometryService.GetLineLength_Meters(List(Of GeoPoint))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: DEM.Net.Lib.GeometryService.GetLineLength_Meters(System.Collections.Generic.List(Of DEM.Net.Lib.GeoPoint))
  name.vb: GetLineLength_Meters(List(Of GeoPoint))
- uid: DEM.Net.Lib.GeometryService.Geometries(GeoAPI.Geometries.IGeometry)
  commentId: M:DEM.Net.Lib.GeometryService.Geometries(GeoAPI.Geometries.IGeometry)
  id: Geometries(GeoAPI.Geometries.IGeometry)
  isExtensionMethod: true
  parent: DEM.Net.Lib.GeometryService
  langs:
  - csharp
  - vb
  name: Geometries(IGeometry)
  nameWithType: GeometryService.Geometries(IGeometry)
  fullName: DEM.Net.Lib.GeometryService.Geometries(GeoAPI.Geometries.IGeometry)
  type: Method
  source:
    remote:
      path: DEM.Net.Lib/Services/GeometryService.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: Geometries
    path: ../DEM.Net.Lib/Services/GeometryService.cs
    startLine: 197
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib
  syntax:
    content: public static IEnumerable<IGeometry> Geometries(this IGeometry geom)
    parameters:
    - id: geom
      type: GeoAPI.Geometries.IGeometry
    return:
      type: System.Collections.Generic.IEnumerable{GeoAPI.Geometries.IGeometry}
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Geometries(geom As IGeometry) As IEnumerable(Of IGeometry)
  overload: DEM.Net.Lib.GeometryService.Geometries*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DEM.Net.Lib.GeometryService.Segments(GeoAPI.Geometries.IGeometry)
  commentId: M:DEM.Net.Lib.GeometryService.Segments(GeoAPI.Geometries.IGeometry)
  id: Segments(GeoAPI.Geometries.IGeometry)
  isExtensionMethod: true
  parent: DEM.Net.Lib.GeometryService
  langs:
  - csharp
  - vb
  name: Segments(IGeometry)
  nameWithType: GeometryService.Segments(IGeometry)
  fullName: DEM.Net.Lib.GeometryService.Segments(GeoAPI.Geometries.IGeometry)
  type: Method
  source:
    remote:
      path: DEM.Net.Lib/Services/GeometryService.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: Segments
    path: ../DEM.Net.Lib/Services/GeometryService.cs
    startLine: 205
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib
  syntax:
    content: public static IEnumerable<GeoSegment> Segments(this IGeometry lineGeom)
    parameters:
    - id: lineGeom
      type: GeoAPI.Geometries.IGeometry
    return:
      type: System.Collections.Generic.IEnumerable{DEM.Net.Lib.GeoSegment}
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Segments(lineGeom As IGeometry) As IEnumerable(Of GeoSegment)
  overload: DEM.Net.Lib.GeometryService.Segments*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DEM.Net.Lib.GeometryService.ToGeoPoint(GeoAPI.Geometries.Coordinate)
  commentId: M:DEM.Net.Lib.GeometryService.ToGeoPoint(GeoAPI.Geometries.Coordinate)
  id: ToGeoPoint(GeoAPI.Geometries.Coordinate)
  isExtensionMethod: true
  parent: DEM.Net.Lib.GeometryService
  langs:
  - csharp
  - vb
  name: ToGeoPoint(Coordinate)
  nameWithType: GeometryService.ToGeoPoint(Coordinate)
  fullName: DEM.Net.Lib.GeometryService.ToGeoPoint(GeoAPI.Geometries.Coordinate)
  type: Method
  source:
    remote:
      path: DEM.Net.Lib/Services/GeometryService.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: ToGeoPoint
    path: ../DEM.Net.Lib/Services/GeometryService.cs
    startLine: 233
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib
  syntax:
    content: public static GeoPoint ToGeoPoint(this Coordinate coord)
    parameters:
    - id: coord
      type: GeoAPI.Geometries.Coordinate
    return:
      type: DEM.Net.Lib.GeoPoint
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ToGeoPoint(coord As Coordinate) As GeoPoint
  overload: DEM.Net.Lib.GeometryService.ToGeoPoint*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DEM.Net.Lib.GeometryService.GetBoundingBox(System.Collections.Generic.IEnumerable{DEM.Net.Lib.GeoPoint})
  commentId: M:DEM.Net.Lib.GeometryService.GetBoundingBox(System.Collections.Generic.IEnumerable{DEM.Net.Lib.GeoPoint})
  id: GetBoundingBox(System.Collections.Generic.IEnumerable{DEM.Net.Lib.GeoPoint})
  isExtensionMethod: true
  parent: DEM.Net.Lib.GeometryService
  langs:
  - csharp
  - vb
  name: GetBoundingBox(IEnumerable<GeoPoint>)
  nameWithType: GeometryService.GetBoundingBox(IEnumerable<GeoPoint>)
  fullName: DEM.Net.Lib.GeometryService.GetBoundingBox(System.Collections.Generic.IEnumerable<DEM.Net.Lib.GeoPoint>)
  type: Method
  source:
    remote:
      path: DEM.Net.Lib/Services/GeometryService.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: GetBoundingBox
    path: ../DEM.Net.Lib/Services/GeometryService.cs
    startLine: 243
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib
  syntax:
    content: public static BoundingBox GetBoundingBox(this IEnumerable<GeoPoint> points)
    parameters:
    - id: points
      type: System.Collections.Generic.IEnumerable{DEM.Net.Lib.GeoPoint}
    return:
      type: DEM.Net.Lib.BoundingBox
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetBoundingBox(points As IEnumerable(Of GeoPoint)) As BoundingBox
  overload: DEM.Net.Lib.GeometryService.GetBoundingBox*
  nameWithType.vb: GeometryService.GetBoundingBox(IEnumerable(Of GeoPoint))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: DEM.Net.Lib.GeometryService.GetBoundingBox(System.Collections.Generic.IEnumerable(Of DEM.Net.Lib.GeoPoint))
  name.vb: GetBoundingBox(IEnumerable(Of GeoPoint))
- uid: DEM.Net.Lib.GeometryService.GetBoundingBox(DEM.Net.Lib.GeoSegment)
  commentId: M:DEM.Net.Lib.GeometryService.GetBoundingBox(DEM.Net.Lib.GeoSegment)
  id: GetBoundingBox(DEM.Net.Lib.GeoSegment)
  isExtensionMethod: true
  parent: DEM.Net.Lib.GeometryService
  langs:
  - csharp
  - vb
  name: GetBoundingBox(GeoSegment)
  nameWithType: GeometryService.GetBoundingBox(GeoSegment)
  fullName: DEM.Net.Lib.GeometryService.GetBoundingBox(DEM.Net.Lib.GeoSegment)
  type: Method
  source:
    remote:
      path: DEM.Net.Lib/Services/GeometryService.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: GetBoundingBox
    path: ../DEM.Net.Lib/Services/GeometryService.cs
    startLine: 257
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib
  syntax:
    content: public static BoundingBox GetBoundingBox(this GeoSegment segment)
    parameters:
    - id: segment
      type: DEM.Net.Lib.GeoSegment
    return:
      type: DEM.Net.Lib.BoundingBox
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetBoundingBox(segment As GeoSegment) As BoundingBox
  overload: DEM.Net.Lib.GeometryService.GetBoundingBox*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: DEM.Net.Lib
  commentId: N:DEM.Net.Lib
  name: DEM.Net.Lib
  nameWithType: DEM.Net.Lib
  fullName: DEM.Net.Lib
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: DEM.Net.Lib.GeometryService.ParseWKTAsGeometry*
  commentId: Overload:DEM.Net.Lib.GeometryService.ParseWKTAsGeometry
  name: ParseWKTAsGeometry
  nameWithType: GeometryService.ParseWKTAsGeometry
  fullName: DEM.Net.Lib.GeometryService.ParseWKTAsGeometry
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: GeoAPI.Geometries.IGeometry
  commentId: T:GeoAPI.Geometries.IGeometry
  parent: GeoAPI.Geometries
  isExternal: true
  name: IGeometry
  nameWithType: IGeometry
  fullName: GeoAPI.Geometries.IGeometry
- uid: GeoAPI.Geometries
  commentId: N:GeoAPI.Geometries
  isExternal: true
  name: GeoAPI.Geometries
  nameWithType: GeoAPI.Geometries
  fullName: GeoAPI.Geometries
- uid: DEM.Net.Lib.GeometryService.GetBoundingBox*
  commentId: Overload:DEM.Net.Lib.GeometryService.GetBoundingBox
  name: GetBoundingBox
  nameWithType: GeometryService.GetBoundingBox
  fullName: DEM.Net.Lib.GeometryService.GetBoundingBox
- uid: DEM.Net.Lib.BoundingBox
  commentId: T:DEM.Net.Lib.BoundingBox
  parent: DEM.Net.Lib
  name: BoundingBox
  nameWithType: BoundingBox
  fullName: DEM.Net.Lib.BoundingBox
- uid: DEM.Net.Lib.GeometryService.ParseGeoPointAsGeometryLine*
  commentId: Overload:DEM.Net.Lib.GeometryService.ParseGeoPointAsGeometryLine
  name: ParseGeoPointAsGeometryLine
  nameWithType: GeometryService.ParseGeoPointAsGeometryLine
  fullName: DEM.Net.Lib.GeometryService.ParseGeoPointAsGeometryLine
- uid: System.Collections.Generic.IEnumerable{DEM.Net.Lib.GeoPoint}
  commentId: T:System.Collections.Generic.IEnumerable{DEM.Net.Lib.GeoPoint}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<GeoPoint>
  nameWithType: IEnumerable<GeoPoint>
  fullName: System.Collections.Generic.IEnumerable<DEM.Net.Lib.GeoPoint>
  nameWithType.vb: IEnumerable(Of GeoPoint)
  fullName.vb: System.Collections.Generic.IEnumerable(Of DEM.Net.Lib.GeoPoint)
  name.vb: IEnumerable(Of GeoPoint)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: DEM.Net.Lib.GeoPoint
    name: GeoPoint
    nameWithType: GeoPoint
    fullName: DEM.Net.Lib.GeoPoint
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: DEM.Net.Lib.GeoPoint
    name: GeoPoint
    nameWithType: GeoPoint
    fullName: DEM.Net.Lib.GeoPoint
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: DEM.Net.Lib.GeometryService.LineLineIntersection*
  commentId: Overload:DEM.Net.Lib.GeometryService.LineLineIntersection
  name: LineLineIntersection
  nameWithType: GeometryService.LineLineIntersection
  fullName: DEM.Net.Lib.GeometryService.LineLineIntersection
- uid: DEM.Net.Lib.GeoPoint
  commentId: T:DEM.Net.Lib.GeoPoint
  parent: DEM.Net.Lib
  name: GeoPoint
  nameWithType: GeoPoint
  fullName: DEM.Net.Lib.GeoPoint
- uid: DEM.Net.Lib.GeoSegment
  commentId: T:DEM.Net.Lib.GeoSegment
  parent: DEM.Net.Lib
  name: GeoSegment
  nameWithType: GeoSegment
  fullName: DEM.Net.Lib.GeoSegment
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: DEM.Net.Lib.GeometryService.ComputeMetrics*
  commentId: Overload:DEM.Net.Lib.GeometryService.ComputeMetrics
  name: ComputeMetrics
  nameWithType: GeometryService.ComputeMetrics
  fullName: DEM.Net.Lib.GeometryService.ComputeMetrics
- uid: System.Collections.Generic.List{DEM.Net.Lib.GeoPoint}
  commentId: T:System.Collections.Generic.List{DEM.Net.Lib.GeoPoint}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<GeoPoint>
  nameWithType: List<GeoPoint>
  fullName: System.Collections.Generic.List<DEM.Net.Lib.GeoPoint>
  nameWithType.vb: List(Of GeoPoint)
  fullName.vb: System.Collections.Generic.List(Of DEM.Net.Lib.GeoPoint)
  name.vb: List(Of GeoPoint)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: DEM.Net.Lib.GeoPoint
    name: GeoPoint
    nameWithType: GeoPoint
    fullName: DEM.Net.Lib.GeoPoint
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: DEM.Net.Lib.GeoPoint
    name: GeoPoint
    nameWithType: GeoPoint
    fullName: DEM.Net.Lib.GeoPoint
  - name: )
    nameWithType: )
    fullName: )
- uid: DEM.Net.Lib.ElevationMetrics
  commentId: T:DEM.Net.Lib.ElevationMetrics
  parent: DEM.Net.Lib
  name: ElevationMetrics
  nameWithType: ElevationMetrics
  fullName: DEM.Net.Lib.ElevationMetrics
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: DEM.Net.Lib.GeometryService.GetLength*
  commentId: Overload:DEM.Net.Lib.GeometryService.GetLength
  name: GetLength
  nameWithType: GeometryService.GetLength
  fullName: DEM.Net.Lib.GeometryService.GetLength
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: DEM.Net.Lib.GeometryService.DistanceTo*
  commentId: Overload:DEM.Net.Lib.GeometryService.DistanceTo
  name: DistanceTo
  nameWithType: GeometryService.DistanceTo
  fullName: DEM.Net.Lib.GeometryService.DistanceTo
- uid: DEM.Net.Lib.GeometryService.GetLineLength_Meters*
  commentId: Overload:DEM.Net.Lib.GeometryService.GetLineLength_Meters
  name: GetLineLength_Meters
  nameWithType: GeometryService.GetLineLength_Meters
  fullName: DEM.Net.Lib.GeometryService.GetLineLength_Meters
- uid: DEM.Net.Lib.GeometryService.Geometries*
  commentId: Overload:DEM.Net.Lib.GeometryService.Geometries
  name: Geometries
  nameWithType: GeometryService.Geometries
  fullName: DEM.Net.Lib.GeometryService.Geometries
- uid: System.Collections.Generic.IEnumerable{GeoAPI.Geometries.IGeometry}
  commentId: T:System.Collections.Generic.IEnumerable{GeoAPI.Geometries.IGeometry}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<IGeometry>
  nameWithType: IEnumerable<IGeometry>
  fullName: System.Collections.Generic.IEnumerable<GeoAPI.Geometries.IGeometry>
  nameWithType.vb: IEnumerable(Of IGeometry)
  fullName.vb: System.Collections.Generic.IEnumerable(Of GeoAPI.Geometries.IGeometry)
  name.vb: IEnumerable(Of IGeometry)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: GeoAPI.Geometries.IGeometry
    name: IGeometry
    nameWithType: IGeometry
    fullName: GeoAPI.Geometries.IGeometry
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: GeoAPI.Geometries.IGeometry
    name: IGeometry
    nameWithType: IGeometry
    fullName: GeoAPI.Geometries.IGeometry
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DEM.Net.Lib.GeometryService.Segments*
  commentId: Overload:DEM.Net.Lib.GeometryService.Segments
  name: Segments
  nameWithType: GeometryService.Segments
  fullName: DEM.Net.Lib.GeometryService.Segments
- uid: System.Collections.Generic.IEnumerable{DEM.Net.Lib.GeoSegment}
  commentId: T:System.Collections.Generic.IEnumerable{DEM.Net.Lib.GeoSegment}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<GeoSegment>
  nameWithType: IEnumerable<GeoSegment>
  fullName: System.Collections.Generic.IEnumerable<DEM.Net.Lib.GeoSegment>
  nameWithType.vb: IEnumerable(Of GeoSegment)
  fullName.vb: System.Collections.Generic.IEnumerable(Of DEM.Net.Lib.GeoSegment)
  name.vb: IEnumerable(Of GeoSegment)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: DEM.Net.Lib.GeoSegment
    name: GeoSegment
    nameWithType: GeoSegment
    fullName: DEM.Net.Lib.GeoSegment
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: DEM.Net.Lib.GeoSegment
    name: GeoSegment
    nameWithType: GeoSegment
    fullName: DEM.Net.Lib.GeoSegment
  - name: )
    nameWithType: )
    fullName: )
- uid: DEM.Net.Lib.GeometryService.ToGeoPoint*
  commentId: Overload:DEM.Net.Lib.GeometryService.ToGeoPoint
  name: ToGeoPoint
  nameWithType: GeometryService.ToGeoPoint
  fullName: DEM.Net.Lib.GeometryService.ToGeoPoint
- uid: GeoAPI.Geometries.Coordinate
  commentId: T:GeoAPI.Geometries.Coordinate
  parent: GeoAPI.Geometries
  isExternal: true
  name: Coordinate
  nameWithType: Coordinate
  fullName: GeoAPI.Geometries.Coordinate
