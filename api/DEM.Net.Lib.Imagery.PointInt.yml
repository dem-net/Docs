### YamlMime:ManagedReference
items:
- uid: DEM.Net.Lib.Imagery.PointInt
  commentId: T:DEM.Net.Lib.Imagery.PointInt
  id: PointInt
  parent: DEM.Net.Lib.Imagery
  children:
  - DEM.Net.Lib.Imagery.PointInt.#ctor(System.Int32,System.Int32)
  - DEM.Net.Lib.Imagery.PointInt.ToString
  - DEM.Net.Lib.Imagery.PointInt.X
  - DEM.Net.Lib.Imagery.PointInt.Y
  langs:
  - csharp
  - vb
  name: PointInt
  nameWithType: PointInt
  fullName: DEM.Net.Lib.Imagery.PointInt
  type: Struct
  source:
    remote:
      path: DEM.Net.Lib/Imagery/Structs/PointInt.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: PointInt
    path: ../DEM.Net.Lib/Imagery/Structs/PointInt.cs
    startLine: 8
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib.Imagery
  syntax:
    content: public struct PointInt
    content.vb: Public Structure PointInt
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: DEM.Net.Lib.Imagery.PointInt.X
  commentId: F:DEM.Net.Lib.Imagery.PointInt.X
  id: X
  parent: DEM.Net.Lib.Imagery.PointInt
  langs:
  - csharp
  - vb
  name: X
  nameWithType: PointInt.X
  fullName: DEM.Net.Lib.Imagery.PointInt.X
  type: Field
  source:
    remote:
      path: DEM.Net.Lib/Imagery/Structs/PointInt.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: X
    path: ../DEM.Net.Lib/Imagery/Structs/PointInt.cs
    startLine: 10
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib.Imagery
  syntax:
    content: public int X
    return:
      type: System.Int32
    content.vb: Public X As Integer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DEM.Net.Lib.Imagery.PointInt.Y
  commentId: F:DEM.Net.Lib.Imagery.PointInt.Y
  id: Y
  parent: DEM.Net.Lib.Imagery.PointInt
  langs:
  - csharp
  - vb
  name: Y
  nameWithType: PointInt.Y
  fullName: DEM.Net.Lib.Imagery.PointInt.Y
  type: Field
  source:
    remote:
      path: DEM.Net.Lib/Imagery/Structs/PointInt.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: Y
    path: ../DEM.Net.Lib/Imagery/Structs/PointInt.cs
    startLine: 11
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib.Imagery
  syntax:
    content: public int Y
    return:
      type: System.Int32
    content.vb: Public Y As Integer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DEM.Net.Lib.Imagery.PointInt.#ctor(System.Int32,System.Int32)
  commentId: M:DEM.Net.Lib.Imagery.PointInt.#ctor(System.Int32,System.Int32)
  id: '#ctor(System.Int32,System.Int32)'
  parent: DEM.Net.Lib.Imagery.PointInt
  langs:
  - csharp
  - vb
  name: PointInt(Int32, Int32)
  nameWithType: PointInt.PointInt(Int32, Int32)
  fullName: DEM.Net.Lib.Imagery.PointInt.PointInt(System.Int32, System.Int32)
  type: Constructor
  source:
    remote:
      path: DEM.Net.Lib/Imagery/Structs/PointInt.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: .ctor
    path: ../DEM.Net.Lib/Imagery/Structs/PointInt.cs
    startLine: 14
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib.Imagery
  syntax:
    content: public PointInt(int x, int y)
    parameters:
    - id: x
      type: System.Int32
    - id: y
      type: System.Int32
    content.vb: Public Sub New(x As Integer, y As Integer)
  overload: DEM.Net.Lib.Imagery.PointInt.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DEM.Net.Lib.Imagery.PointInt.ToString
  commentId: M:DEM.Net.Lib.Imagery.PointInt.ToString
  id: ToString
  parent: DEM.Net.Lib.Imagery.PointInt
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: PointInt.ToString()
  fullName: DEM.Net.Lib.Imagery.PointInt.ToString()
  type: Method
  source:
    remote:
      path: DEM.Net.Lib/Imagery/Structs/PointInt.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: ToString
    path: ../DEM.Net.Lib/Imagery/Structs/PointInt.cs
    startLine: 19
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib.Imagery
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.ValueType.ToString
  overload: DEM.Net.Lib.Imagery.PointInt.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: DEM.Net.Lib.Imagery
  commentId: N:DEM.Net.Lib.Imagery
  name: DEM.Net.Lib.Imagery
  nameWithType: DEM.Net.Lib.Imagery
  fullName: DEM.Net.Lib.Imagery
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: DEM.Net.Lib.Imagery.PointInt.#ctor*
  commentId: Overload:DEM.Net.Lib.Imagery.PointInt.#ctor
  name: PointInt
  nameWithType: PointInt.PointInt
  fullName: DEM.Net.Lib.Imagery.PointInt.PointInt
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: DEM.Net.Lib.Imagery.PointInt.ToString*
  commentId: Overload:DEM.Net.Lib.Imagery.PointInt.ToString
  name: ToString
  nameWithType: PointInt.ToString
  fullName: DEM.Net.Lib.Imagery.PointInt.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
