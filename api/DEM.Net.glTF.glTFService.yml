### YamlMime:ManagedReference
items:
- uid: DEM.Net.glTF.glTFService
  commentId: T:DEM.Net.glTF.glTFService
  id: glTFService
  parent: DEM.Net.glTF
  children:
  - DEM.Net.glTF.glTFService.Export(AssetGenerator.Model,System.String,System.String,System.Boolean,System.Boolean)
  - DEM.Net.glTF.glTFService.GenerateLine(System.Collections.Generic.IEnumerable{DEM.Net.Lib.GeoPoint},System.Numerics.Vector4,System.Single)
  - DEM.Net.glTF.glTFService.GenerateModel(AssetGenerator.Runtime.MeshPrimitive,System.String)
  - DEM.Net.glTF.glTFService.GenerateModel(System.Collections.Generic.IEnumerable{AssetGenerator.Runtime.MeshPrimitive},System.String)
  - DEM.Net.glTF.glTFService.GeneratePointMesh(System.Collections.Generic.IEnumerable{DEM.Net.Lib.GeoPoint},System.Numerics.Vector4,System.Single)
  - DEM.Net.glTF.glTFService.GenerateTriangleMesh(DEM.Net.Lib.HeightMap,System.Collections.Generic.IEnumerable{System.Numerics.Vector4},DEM.Net.Lib.Imagery.PBRTexture)
  - DEM.Net.glTF.glTFService.GenerateTriangleMesh(System.Collections.Generic.IEnumerable{DEM.Net.Lib.GeoPoint},System.Collections.Generic.List{System.Int32},System.Collections.Generic.IEnumerable{System.Numerics.Vector4},DEM.Net.Lib.Imagery.PBRTexture)
  - DEM.Net.glTF.glTFService.GenerateTriangleMesh(System.Collections.Generic.IEnumerable{System.Numerics.Vector3},System.Collections.Generic.List{System.Int32},System.Collections.Generic.IEnumerable{System.Numerics.Vector4},DEM.Net.Lib.Imagery.PBRTexture)
  - DEM.Net.glTF.glTFService.GetHeightPlanes
  - DEM.Net.glTF.glTFService.Import(System.String)
  langs:
  - csharp
  - vb
  name: glTFService
  nameWithType: glTFService
  fullName: DEM.Net.glTF.glTFService
  type: Class
  source:
    remote:
      path: DEM.Net.glTF/glTFService.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: glTFService
    path: ../DEM.Net.glTF/glTFService.cs
    startLine: 17
  assemblies:
  - DEM.Net.glTF
  namespace: DEM.Net.glTF
  syntax:
    content: 'public class glTFService : IglTFService'
    content.vb: >-
      Public Class glTFService
          Implements IglTFService
  inheritance:
  - System.Object
  implements:
  - DEM.Net.glTF.IglTFService
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: DEM.Net.glTF.glTFService.Export(AssetGenerator.Model,System.String,System.String,System.Boolean,System.Boolean)
  commentId: M:DEM.Net.glTF.glTFService.Export(AssetGenerator.Model,System.String,System.String,System.Boolean,System.Boolean)
  id: Export(AssetGenerator.Model,System.String,System.String,System.Boolean,System.Boolean)
  parent: DEM.Net.glTF.glTFService
  langs:
  - csharp
  - vb
  name: Export(Model, String, String, Boolean, Boolean)
  nameWithType: glTFService.Export(Model, String, String, Boolean, Boolean)
  fullName: DEM.Net.glTF.glTFService.Export(AssetGenerator.Model, System.String, System.String, System.Boolean, System.Boolean)
  type: Method
  source:
    remote:
      path: DEM.Net.glTF/glTFService.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: Export
    path: ../DEM.Net.glTF/glTFService.cs
    startLine: 19
  assemblies:
  - DEM.Net.glTF
  namespace: DEM.Net.glTF
  syntax:
    content: public void Export(Model model, string outputFolder, string modelName, bool exportglTF = true, bool exportGLB = true)
    parameters:
    - id: model
      type: AssetGenerator.Model
    - id: outputFolder
      type: System.String
    - id: modelName
      type: System.String
    - id: exportglTF
      type: System.Boolean
    - id: exportGLB
      type: System.Boolean
    content.vb: Public Sub Export(model As Model, outputFolder As String, modelName As String, exportglTF As Boolean = True, exportGLB As Boolean = True)
  overload: DEM.Net.glTF.glTFService.Export*
  implements:
  - DEM.Net.glTF.IglTFService.Export(AssetGenerator.Model,System.String,System.String,System.Boolean,System.Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DEM.Net.glTF.glTFService.Import(System.String)
  commentId: M:DEM.Net.glTF.glTFService.Import(System.String)
  id: Import(System.String)
  parent: DEM.Net.glTF.glTFService
  langs:
  - csharp
  - vb
  name: Import(String)
  nameWithType: glTFService.Import(String)
  fullName: DEM.Net.glTF.glTFService.Import(System.String)
  type: Method
  source:
    remote:
      path: DEM.Net.glTF/glTFService.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: Import
    path: ../DEM.Net.glTF/glTFService.cs
    startLine: 79
  assemblies:
  - DEM.Net.glTF
  namespace: DEM.Net.glTF
  syntax:
    content: public Gltf Import(string path)
    parameters:
    - id: path
      type: System.String
    return:
      type: glTFLoader.Schema.Gltf
    content.vb: Public Function Import(path As String) As Gltf
  overload: DEM.Net.glTF.glTFService.Import*
  implements:
  - DEM.Net.glTF.IglTFService.Import(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DEM.Net.glTF.glTFService.GenerateModel(AssetGenerator.Runtime.MeshPrimitive,System.String)
  commentId: M:DEM.Net.glTF.glTFService.GenerateModel(AssetGenerator.Runtime.MeshPrimitive,System.String)
  id: GenerateModel(AssetGenerator.Runtime.MeshPrimitive,System.String)
  parent: DEM.Net.glTF.glTFService
  langs:
  - csharp
  - vb
  name: GenerateModel(MeshPrimitive, String)
  nameWithType: glTFService.GenerateModel(MeshPrimitive, String)
  fullName: DEM.Net.glTF.glTFService.GenerateModel(AssetGenerator.Runtime.MeshPrimitive, System.String)
  type: Method
  source:
    remote:
      path: DEM.Net.glTF/glTFService.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: GenerateModel
    path: ../DEM.Net.glTF/glTFService.cs
    startLine: 84
  assemblies:
  - DEM.Net.glTF
  namespace: DEM.Net.glTF
  syntax:
    content: public Model GenerateModel(MeshPrimitive meshPrimitive, string name)
    parameters:
    - id: meshPrimitive
      type: AssetGenerator.Runtime.MeshPrimitive
    - id: name
      type: System.String
    return:
      type: AssetGenerator.Model
    content.vb: Public Function GenerateModel(meshPrimitive As MeshPrimitive, name As String) As Model
  overload: DEM.Net.glTF.glTFService.GenerateModel*
  implements:
  - DEM.Net.glTF.IglTFService.GenerateModel(AssetGenerator.Runtime.MeshPrimitive,System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DEM.Net.glTF.glTFService.GenerateModel(System.Collections.Generic.IEnumerable{AssetGenerator.Runtime.MeshPrimitive},System.String)
  commentId: M:DEM.Net.glTF.glTFService.GenerateModel(System.Collections.Generic.IEnumerable{AssetGenerator.Runtime.MeshPrimitive},System.String)
  id: GenerateModel(System.Collections.Generic.IEnumerable{AssetGenerator.Runtime.MeshPrimitive},System.String)
  parent: DEM.Net.glTF.glTFService
  langs:
  - csharp
  - vb
  name: GenerateModel(IEnumerable<MeshPrimitive>, String)
  nameWithType: glTFService.GenerateModel(IEnumerable<MeshPrimitive>, String)
  fullName: DEM.Net.glTF.glTFService.GenerateModel(System.Collections.Generic.IEnumerable<AssetGenerator.Runtime.MeshPrimitive>, System.String)
  type: Method
  source:
    remote:
      path: DEM.Net.glTF/glTFService.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: GenerateModel
    path: ../DEM.Net.glTF/glTFService.cs
    startLine: 120
  assemblies:
  - DEM.Net.glTF
  namespace: DEM.Net.glTF
  syntax:
    content: public Model GenerateModel(IEnumerable<MeshPrimitive> meshPrimitives, string name)
    parameters:
    - id: meshPrimitives
      type: System.Collections.Generic.IEnumerable{AssetGenerator.Runtime.MeshPrimitive}
    - id: name
      type: System.String
    return:
      type: AssetGenerator.Model
    content.vb: Public Function GenerateModel(meshPrimitives As IEnumerable(Of MeshPrimitive), name As String) As Model
  overload: DEM.Net.glTF.glTFService.GenerateModel*
  implements:
  - DEM.Net.glTF.IglTFService.GenerateModel(System.Collections.Generic.IEnumerable{AssetGenerator.Runtime.MeshPrimitive},System.String)
  nameWithType.vb: glTFService.GenerateModel(IEnumerable(Of MeshPrimitive), String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: DEM.Net.glTF.glTFService.GenerateModel(System.Collections.Generic.IEnumerable(Of AssetGenerator.Runtime.MeshPrimitive), System.String)
  name.vb: GenerateModel(IEnumerable(Of MeshPrimitive), String)
- uid: DEM.Net.glTF.glTFService.GetHeightPlanes
  commentId: M:DEM.Net.glTF.glTFService.GetHeightPlanes
  id: GetHeightPlanes
  parent: DEM.Net.glTF.glTFService
  langs:
  - csharp
  - vb
  name: GetHeightPlanes()
  nameWithType: glTFService.GetHeightPlanes()
  fullName: DEM.Net.glTF.glTFService.GetHeightPlanes()
  type: Method
  source:
    remote:
      path: DEM.Net.glTF/glTFService.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: GetHeightPlanes
    path: ../DEM.Net.glTF/glTFService.cs
    startLine: 155
  assemblies:
  - DEM.Net.glTF
  namespace: DEM.Net.glTF
  syntax:
    content: public IEnumerable<MeshPrimitive> GetHeightPlanes()
    return:
      type: System.Collections.Generic.IEnumerable{AssetGenerator.Runtime.MeshPrimitive}
    content.vb: Public Function GetHeightPlanes As IEnumerable(Of MeshPrimitive)
  overload: DEM.Net.glTF.glTFService.GetHeightPlanes*
  implements:
  - DEM.Net.glTF.IglTFService.GetHeightPlanes
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DEM.Net.glTF.glTFService.GenerateTriangleMesh(DEM.Net.Lib.HeightMap,System.Collections.Generic.IEnumerable{System.Numerics.Vector4},DEM.Net.Lib.Imagery.PBRTexture)
  commentId: M:DEM.Net.glTF.glTFService.GenerateTriangleMesh(DEM.Net.Lib.HeightMap,System.Collections.Generic.IEnumerable{System.Numerics.Vector4},DEM.Net.Lib.Imagery.PBRTexture)
  id: GenerateTriangleMesh(DEM.Net.Lib.HeightMap,System.Collections.Generic.IEnumerable{System.Numerics.Vector4},DEM.Net.Lib.Imagery.PBRTexture)
  parent: DEM.Net.glTF.glTFService
  langs:
  - csharp
  - vb
  name: GenerateTriangleMesh(HeightMap, IEnumerable<Vector4>, PBRTexture)
  nameWithType: glTFService.GenerateTriangleMesh(HeightMap, IEnumerable<Vector4>, PBRTexture)
  fullName: DEM.Net.glTF.glTFService.GenerateTriangleMesh(DEM.Net.Lib.HeightMap, System.Collections.Generic.IEnumerable<System.Numerics.Vector4>, DEM.Net.Lib.Imagery.PBRTexture)
  type: Method
  source:
    remote:
      path: DEM.Net.glTF/glTFService.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: GenerateTriangleMesh
    path: ../DEM.Net.glTF/glTFService.cs
    startLine: 231
  assemblies:
  - DEM.Net.glTF
  namespace: DEM.Net.glTF
  summary: "\nGenerate a triangle mesh from supplied height map, triangulating and optionaly mapping UVs\n"
  example: []
  syntax:
    content: public MeshPrimitive GenerateTriangleMesh(HeightMap heightMap, IEnumerable<Vector4> colors = null, PBRTexture texture = null)
    parameters:
    - id: heightMap
      type: DEM.Net.Lib.HeightMap
      description: ''
    - id: colors
      type: System.Collections.Generic.IEnumerable{System.Numerics.Vector4}
      description: ''
    - id: texture
      type: DEM.Net.Lib.Imagery.PBRTexture
      description: Texture path relative from the model
    return:
      type: AssetGenerator.Runtime.MeshPrimitive
      description: ''
    content.vb: Public Function GenerateTriangleMesh(heightMap As HeightMap, colors As IEnumerable(Of Vector4) = Nothing, texture As PBRTexture = Nothing) As MeshPrimitive
  overload: DEM.Net.glTF.glTFService.GenerateTriangleMesh*
  implements:
  - DEM.Net.glTF.IglTFService.GenerateTriangleMesh(DEM.Net.Lib.HeightMap,System.Collections.Generic.IEnumerable{System.Numerics.Vector4},DEM.Net.Lib.Imagery.PBRTexture)
  nameWithType.vb: glTFService.GenerateTriangleMesh(HeightMap, IEnumerable(Of Vector4), PBRTexture)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: DEM.Net.glTF.glTFService.GenerateTriangleMesh(DEM.Net.Lib.HeightMap, System.Collections.Generic.IEnumerable(Of System.Numerics.Vector4), DEM.Net.Lib.Imagery.PBRTexture)
  name.vb: GenerateTriangleMesh(HeightMap, IEnumerable(Of Vector4), PBRTexture)
- uid: DEM.Net.glTF.glTFService.GenerateLine(System.Collections.Generic.IEnumerable{DEM.Net.Lib.GeoPoint},System.Numerics.Vector4,System.Single)
  commentId: M:DEM.Net.glTF.glTFService.GenerateLine(System.Collections.Generic.IEnumerable{DEM.Net.Lib.GeoPoint},System.Numerics.Vector4,System.Single)
  id: GenerateLine(System.Collections.Generic.IEnumerable{DEM.Net.Lib.GeoPoint},System.Numerics.Vector4,System.Single)
  parent: DEM.Net.glTF.glTFService
  langs:
  - csharp
  - vb
  name: GenerateLine(IEnumerable<GeoPoint>, Vector4, Single)
  nameWithType: glTFService.GenerateLine(IEnumerable<GeoPoint>, Vector4, Single)
  fullName: DEM.Net.glTF.glTFService.GenerateLine(System.Collections.Generic.IEnumerable<DEM.Net.Lib.GeoPoint>, System.Numerics.Vector4, System.Single)
  type: Method
  source:
    remote:
      path: DEM.Net.glTF/glTFService.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: GenerateLine
    path: ../DEM.Net.glTF/glTFService.cs
    startLine: 237
  assemblies:
  - DEM.Net.glTF
  namespace: DEM.Net.glTF
  syntax:
    content: public MeshPrimitive GenerateLine(IEnumerable<GeoPoint> points, Vector4 color, float width)
    parameters:
    - id: points
      type: System.Collections.Generic.IEnumerable{DEM.Net.Lib.GeoPoint}
    - id: color
      type: System.Numerics.Vector4
    - id: width
      type: System.Single
    return:
      type: AssetGenerator.Runtime.MeshPrimitive
    content.vb: Public Function GenerateLine(points As IEnumerable(Of GeoPoint), color As Vector4, width As Single) As MeshPrimitive
  overload: DEM.Net.glTF.glTFService.GenerateLine*
  implements:
  - DEM.Net.glTF.IglTFService.GenerateLine(System.Collections.Generic.IEnumerable{DEM.Net.Lib.GeoPoint},System.Numerics.Vector4,System.Single)
  nameWithType.vb: glTFService.GenerateLine(IEnumerable(Of GeoPoint), Vector4, Single)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: DEM.Net.glTF.glTFService.GenerateLine(System.Collections.Generic.IEnumerable(Of DEM.Net.Lib.GeoPoint), System.Numerics.Vector4, System.Single)
  name.vb: GenerateLine(IEnumerable(Of GeoPoint), Vector4, Single)
- uid: DEM.Net.glTF.glTFService.GenerateTriangleMesh(System.Collections.Generic.IEnumerable{DEM.Net.Lib.GeoPoint},System.Collections.Generic.List{System.Int32},System.Collections.Generic.IEnumerable{System.Numerics.Vector4},DEM.Net.Lib.Imagery.PBRTexture)
  commentId: M:DEM.Net.glTF.glTFService.GenerateTriangleMesh(System.Collections.Generic.IEnumerable{DEM.Net.Lib.GeoPoint},System.Collections.Generic.List{System.Int32},System.Collections.Generic.IEnumerable{System.Numerics.Vector4},DEM.Net.Lib.Imagery.PBRTexture)
  id: GenerateTriangleMesh(System.Collections.Generic.IEnumerable{DEM.Net.Lib.GeoPoint},System.Collections.Generic.List{System.Int32},System.Collections.Generic.IEnumerable{System.Numerics.Vector4},DEM.Net.Lib.Imagery.PBRTexture)
  parent: DEM.Net.glTF.glTFService
  langs:
  - csharp
  - vb
  name: GenerateTriangleMesh(IEnumerable<GeoPoint>, List<Int32>, IEnumerable<Vector4>, PBRTexture)
  nameWithType: glTFService.GenerateTriangleMesh(IEnumerable<GeoPoint>, List<Int32>, IEnumerable<Vector4>, PBRTexture)
  fullName: DEM.Net.glTF.glTFService.GenerateTriangleMesh(System.Collections.Generic.IEnumerable<DEM.Net.Lib.GeoPoint>, System.Collections.Generic.List<System.Int32>, System.Collections.Generic.IEnumerable<System.Numerics.Vector4>, DEM.Net.Lib.Imagery.PBRTexture)
  type: Method
  source:
    remote:
      path: DEM.Net.glTF/glTFService.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: GenerateTriangleMesh
    path: ../DEM.Net.glTF/glTFService.cs
    startLine: 356
  assemblies:
  - DEM.Net.glTF
  namespace: DEM.Net.glTF
  syntax:
    content: public MeshPrimitive GenerateTriangleMesh(IEnumerable<GeoPoint> points, List<int> indices, IEnumerable<Vector4> colors = null, PBRTexture texture = null)
    parameters:
    - id: points
      type: System.Collections.Generic.IEnumerable{DEM.Net.Lib.GeoPoint}
    - id: indices
      type: System.Collections.Generic.List{System.Int32}
    - id: colors
      type: System.Collections.Generic.IEnumerable{System.Numerics.Vector4}
    - id: texture
      type: DEM.Net.Lib.Imagery.PBRTexture
    return:
      type: AssetGenerator.Runtime.MeshPrimitive
    content.vb: Public Function GenerateTriangleMesh(points As IEnumerable(Of GeoPoint), indices As List(Of Integer), colors As IEnumerable(Of Vector4) = Nothing, texture As PBRTexture = Nothing) As MeshPrimitive
  overload: DEM.Net.glTF.glTFService.GenerateTriangleMesh*
  implements:
  - DEM.Net.glTF.IglTFService.GenerateTriangleMesh(System.Collections.Generic.IEnumerable{DEM.Net.Lib.GeoPoint},System.Collections.Generic.List{System.Int32},System.Collections.Generic.IEnumerable{System.Numerics.Vector4},DEM.Net.Lib.Imagery.PBRTexture)
  nameWithType.vb: glTFService.GenerateTriangleMesh(IEnumerable(Of GeoPoint), List(Of Int32), IEnumerable(Of Vector4), PBRTexture)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: DEM.Net.glTF.glTFService.GenerateTriangleMesh(System.Collections.Generic.IEnumerable(Of DEM.Net.Lib.GeoPoint), System.Collections.Generic.List(Of System.Int32), System.Collections.Generic.IEnumerable(Of System.Numerics.Vector4), DEM.Net.Lib.Imagery.PBRTexture)
  name.vb: GenerateTriangleMesh(IEnumerable(Of GeoPoint), List(Of Int32), IEnumerable(Of Vector4), PBRTexture)
- uid: DEM.Net.glTF.glTFService.GenerateTriangleMesh(System.Collections.Generic.IEnumerable{System.Numerics.Vector3},System.Collections.Generic.List{System.Int32},System.Collections.Generic.IEnumerable{System.Numerics.Vector4},DEM.Net.Lib.Imagery.PBRTexture)
  commentId: M:DEM.Net.glTF.glTFService.GenerateTriangleMesh(System.Collections.Generic.IEnumerable{System.Numerics.Vector3},System.Collections.Generic.List{System.Int32},System.Collections.Generic.IEnumerable{System.Numerics.Vector4},DEM.Net.Lib.Imagery.PBRTexture)
  id: GenerateTriangleMesh(System.Collections.Generic.IEnumerable{System.Numerics.Vector3},System.Collections.Generic.List{System.Int32},System.Collections.Generic.IEnumerable{System.Numerics.Vector4},DEM.Net.Lib.Imagery.PBRTexture)
  parent: DEM.Net.glTF.glTFService
  langs:
  - csharp
  - vb
  name: GenerateTriangleMesh(IEnumerable<Vector3>, List<Int32>, IEnumerable<Vector4>, PBRTexture)
  nameWithType: glTFService.GenerateTriangleMesh(IEnumerable<Vector3>, List<Int32>, IEnumerable<Vector4>, PBRTexture)
  fullName: DEM.Net.glTF.glTFService.GenerateTriangleMesh(System.Collections.Generic.IEnumerable<System.Numerics.Vector3>, System.Collections.Generic.List<System.Int32>, System.Collections.Generic.IEnumerable<System.Numerics.Vector4>, DEM.Net.Lib.Imagery.PBRTexture)
  type: Method
  source:
    remote:
      path: DEM.Net.glTF/glTFService.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: GenerateTriangleMesh
    path: ../DEM.Net.glTF/glTFService.cs
    startLine: 360
  assemblies:
  - DEM.Net.glTF
  namespace: DEM.Net.glTF
  syntax:
    content: public MeshPrimitive GenerateTriangleMesh(IEnumerable<Vector3> points, List<int> indices, IEnumerable<Vector4> colors = null, PBRTexture texture = null)
    parameters:
    - id: points
      type: System.Collections.Generic.IEnumerable{System.Numerics.Vector3}
    - id: indices
      type: System.Collections.Generic.List{System.Int32}
    - id: colors
      type: System.Collections.Generic.IEnumerable{System.Numerics.Vector4}
    - id: texture
      type: DEM.Net.Lib.Imagery.PBRTexture
    return:
      type: AssetGenerator.Runtime.MeshPrimitive
    content.vb: Public Function GenerateTriangleMesh(points As IEnumerable(Of Vector3), indices As List(Of Integer), colors As IEnumerable(Of Vector4) = Nothing, texture As PBRTexture = Nothing) As MeshPrimitive
  overload: DEM.Net.glTF.glTFService.GenerateTriangleMesh*
  implements:
  - DEM.Net.glTF.IglTFService.GenerateTriangleMesh(System.Collections.Generic.IEnumerable{System.Numerics.Vector3},System.Collections.Generic.List{System.Int32},System.Collections.Generic.IEnumerable{System.Numerics.Vector4},DEM.Net.Lib.Imagery.PBRTexture)
  nameWithType.vb: glTFService.GenerateTriangleMesh(IEnumerable(Of Vector3), List(Of Int32), IEnumerable(Of Vector4), PBRTexture)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: DEM.Net.glTF.glTFService.GenerateTriangleMesh(System.Collections.Generic.IEnumerable(Of System.Numerics.Vector3), System.Collections.Generic.List(Of System.Int32), System.Collections.Generic.IEnumerable(Of System.Numerics.Vector4), DEM.Net.Lib.Imagery.PBRTexture)
  name.vb: GenerateTriangleMesh(IEnumerable(Of Vector3), List(Of Int32), IEnumerable(Of Vector4), PBRTexture)
- uid: DEM.Net.glTF.glTFService.GeneratePointMesh(System.Collections.Generic.IEnumerable{DEM.Net.Lib.GeoPoint},System.Numerics.Vector4,System.Single)
  commentId: M:DEM.Net.glTF.glTFService.GeneratePointMesh(System.Collections.Generic.IEnumerable{DEM.Net.Lib.GeoPoint},System.Numerics.Vector4,System.Single)
  id: GeneratePointMesh(System.Collections.Generic.IEnumerable{DEM.Net.Lib.GeoPoint},System.Numerics.Vector4,System.Single)
  parent: DEM.Net.glTF.glTFService
  langs:
  - csharp
  - vb
  name: GeneratePointMesh(IEnumerable<GeoPoint>, Vector4, Single)
  nameWithType: glTFService.GeneratePointMesh(IEnumerable<GeoPoint>, Vector4, Single)
  fullName: DEM.Net.glTF.glTFService.GeneratePointMesh(System.Collections.Generic.IEnumerable<DEM.Net.Lib.GeoPoint>, System.Numerics.Vector4, System.Single)
  type: Method
  source:
    remote:
      path: DEM.Net.glTF/glTFService.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: GeneratePointMesh
    path: ../DEM.Net.glTF/glTFService.cs
    startLine: 502
  assemblies:
  - DEM.Net.glTF
  namespace: DEM.Net.glTF
  syntax:
    content: public MeshPrimitive GeneratePointMesh(IEnumerable<GeoPoint> points, Vector4 color, float pointSize)
    parameters:
    - id: points
      type: System.Collections.Generic.IEnumerable{DEM.Net.Lib.GeoPoint}
    - id: color
      type: System.Numerics.Vector4
    - id: pointSize
      type: System.Single
    return:
      type: AssetGenerator.Runtime.MeshPrimitive
    content.vb: Public Function GeneratePointMesh(points As IEnumerable(Of GeoPoint), color As Vector4, pointSize As Single) As MeshPrimitive
  overload: DEM.Net.glTF.glTFService.GeneratePointMesh*
  implements:
  - DEM.Net.glTF.IglTFService.GeneratePointMesh(System.Collections.Generic.IEnumerable{DEM.Net.Lib.GeoPoint},System.Numerics.Vector4,System.Single)
  nameWithType.vb: glTFService.GeneratePointMesh(IEnumerable(Of GeoPoint), Vector4, Single)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: DEM.Net.glTF.glTFService.GeneratePointMesh(System.Collections.Generic.IEnumerable(Of DEM.Net.Lib.GeoPoint), System.Numerics.Vector4, System.Single)
  name.vb: GeneratePointMesh(IEnumerable(Of GeoPoint), Vector4, Single)
references:
- uid: DEM.Net.glTF
  commentId: N:DEM.Net.glTF
  name: DEM.Net.glTF
  nameWithType: DEM.Net.glTF
  fullName: DEM.Net.glTF
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: DEM.Net.glTF.IglTFService
  commentId: T:DEM.Net.glTF.IglTFService
  parent: DEM.Net.glTF
  name: IglTFService
  nameWithType: IglTFService
  fullName: DEM.Net.glTF.IglTFService
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: DEM.Net.glTF.glTFService.Export*
  commentId: Overload:DEM.Net.glTF.glTFService.Export
  name: Export
  nameWithType: glTFService.Export
  fullName: DEM.Net.glTF.glTFService.Export
- uid: DEM.Net.glTF.IglTFService.Export(AssetGenerator.Model,System.String,System.String,System.Boolean,System.Boolean)
  commentId: M:DEM.Net.glTF.IglTFService.Export(AssetGenerator.Model,System.String,System.String,System.Boolean,System.Boolean)
  parent: DEM.Net.glTF.IglTFService
  isExternal: true
  name: Export(Model, String, String, Boolean, Boolean)
  nameWithType: IglTFService.Export(Model, String, String, Boolean, Boolean)
  fullName: DEM.Net.glTF.IglTFService.Export(AssetGenerator.Model, System.String, System.String, System.Boolean, System.Boolean)
  spec.csharp:
  - uid: DEM.Net.glTF.IglTFService.Export(AssetGenerator.Model,System.String,System.String,System.Boolean,System.Boolean)
    name: Export
    nameWithType: IglTFService.Export
    fullName: DEM.Net.glTF.IglTFService.Export
  - name: (
    nameWithType: (
    fullName: (
  - uid: AssetGenerator.Model
    name: Model
    nameWithType: Model
    fullName: AssetGenerator.Model
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DEM.Net.glTF.IglTFService.Export(AssetGenerator.Model,System.String,System.String,System.Boolean,System.Boolean)
    name: Export
    nameWithType: IglTFService.Export
    fullName: DEM.Net.glTF.IglTFService.Export
  - name: (
    nameWithType: (
    fullName: (
  - uid: AssetGenerator.Model
    name: Model
    nameWithType: Model
    fullName: AssetGenerator.Model
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: AssetGenerator.Model
  commentId: T:AssetGenerator.Model
  parent: AssetGenerator
  name: Model
  nameWithType: Model
  fullName: AssetGenerator.Model
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: AssetGenerator
  commentId: N:AssetGenerator
  name: AssetGenerator
  nameWithType: AssetGenerator
  fullName: AssetGenerator
- uid: DEM.Net.glTF.glTFService.Import*
  commentId: Overload:DEM.Net.glTF.glTFService.Import
  name: Import
  nameWithType: glTFService.Import
  fullName: DEM.Net.glTF.glTFService.Import
- uid: DEM.Net.glTF.IglTFService.Import(System.String)
  commentId: M:DEM.Net.glTF.IglTFService.Import(System.String)
  parent: DEM.Net.glTF.IglTFService
  isExternal: true
  name: Import(String)
  nameWithType: IglTFService.Import(String)
  fullName: DEM.Net.glTF.IglTFService.Import(System.String)
  spec.csharp:
  - uid: DEM.Net.glTF.IglTFService.Import(System.String)
    name: Import
    nameWithType: IglTFService.Import
    fullName: DEM.Net.glTF.IglTFService.Import
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DEM.Net.glTF.IglTFService.Import(System.String)
    name: Import
    nameWithType: IglTFService.Import
    fullName: DEM.Net.glTF.IglTFService.Import
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: glTFLoader.Schema.Gltf
  commentId: T:glTFLoader.Schema.Gltf
  parent: glTFLoader.Schema
  isExternal: true
  name: Gltf
  nameWithType: Gltf
  fullName: glTFLoader.Schema.Gltf
- uid: glTFLoader.Schema
  commentId: N:glTFLoader.Schema
  isExternal: true
  name: glTFLoader.Schema
  nameWithType: glTFLoader.Schema
  fullName: glTFLoader.Schema
- uid: DEM.Net.glTF.glTFService.GenerateModel*
  commentId: Overload:DEM.Net.glTF.glTFService.GenerateModel
  name: GenerateModel
  nameWithType: glTFService.GenerateModel
  fullName: DEM.Net.glTF.glTFService.GenerateModel
- uid: DEM.Net.glTF.IglTFService.GenerateModel(AssetGenerator.Runtime.MeshPrimitive,System.String)
  commentId: M:DEM.Net.glTF.IglTFService.GenerateModel(AssetGenerator.Runtime.MeshPrimitive,System.String)
  parent: DEM.Net.glTF.IglTFService
  isExternal: true
  name: GenerateModel(MeshPrimitive, String)
  nameWithType: IglTFService.GenerateModel(MeshPrimitive, String)
  fullName: DEM.Net.glTF.IglTFService.GenerateModel(AssetGenerator.Runtime.MeshPrimitive, System.String)
  spec.csharp:
  - uid: DEM.Net.glTF.IglTFService.GenerateModel(AssetGenerator.Runtime.MeshPrimitive,System.String)
    name: GenerateModel
    nameWithType: IglTFService.GenerateModel
    fullName: DEM.Net.glTF.IglTFService.GenerateModel
  - name: (
    nameWithType: (
    fullName: (
  - uid: AssetGenerator.Runtime.MeshPrimitive
    name: MeshPrimitive
    nameWithType: MeshPrimitive
    fullName: AssetGenerator.Runtime.MeshPrimitive
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DEM.Net.glTF.IglTFService.GenerateModel(AssetGenerator.Runtime.MeshPrimitive,System.String)
    name: GenerateModel
    nameWithType: IglTFService.GenerateModel
    fullName: DEM.Net.glTF.IglTFService.GenerateModel
  - name: (
    nameWithType: (
    fullName: (
  - uid: AssetGenerator.Runtime.MeshPrimitive
    name: MeshPrimitive
    nameWithType: MeshPrimitive
    fullName: AssetGenerator.Runtime.MeshPrimitive
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: AssetGenerator.Runtime.MeshPrimitive
  commentId: T:AssetGenerator.Runtime.MeshPrimitive
  parent: AssetGenerator.Runtime
  name: MeshPrimitive
  nameWithType: MeshPrimitive
  fullName: AssetGenerator.Runtime.MeshPrimitive
- uid: AssetGenerator.Runtime
  commentId: N:AssetGenerator.Runtime
  name: AssetGenerator.Runtime
  nameWithType: AssetGenerator.Runtime
  fullName: AssetGenerator.Runtime
- uid: DEM.Net.glTF.IglTFService.GenerateModel(System.Collections.Generic.IEnumerable{AssetGenerator.Runtime.MeshPrimitive},System.String)
  commentId: M:DEM.Net.glTF.IglTFService.GenerateModel(System.Collections.Generic.IEnumerable{AssetGenerator.Runtime.MeshPrimitive},System.String)
  parent: DEM.Net.glTF.IglTFService
  isExternal: true
  name: GenerateModel(IEnumerable<MeshPrimitive>, String)
  nameWithType: IglTFService.GenerateModel(IEnumerable<MeshPrimitive>, String)
  fullName: DEM.Net.glTF.IglTFService.GenerateModel(System.Collections.Generic.IEnumerable<AssetGenerator.Runtime.MeshPrimitive>, System.String)
  nameWithType.vb: IglTFService.GenerateModel(IEnumerable(Of MeshPrimitive), String)
  fullName.vb: DEM.Net.glTF.IglTFService.GenerateModel(System.Collections.Generic.IEnumerable(Of AssetGenerator.Runtime.MeshPrimitive), System.String)
  name.vb: GenerateModel(IEnumerable(Of MeshPrimitive), String)
  spec.csharp:
  - uid: DEM.Net.glTF.IglTFService.GenerateModel(System.Collections.Generic.IEnumerable{AssetGenerator.Runtime.MeshPrimitive},System.String)
    name: GenerateModel
    nameWithType: IglTFService.GenerateModel
    fullName: DEM.Net.glTF.IglTFService.GenerateModel
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: AssetGenerator.Runtime.MeshPrimitive
    name: MeshPrimitive
    nameWithType: MeshPrimitive
    fullName: AssetGenerator.Runtime.MeshPrimitive
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DEM.Net.glTF.IglTFService.GenerateModel(System.Collections.Generic.IEnumerable{AssetGenerator.Runtime.MeshPrimitive},System.String)
    name: GenerateModel
    nameWithType: IglTFService.GenerateModel
    fullName: DEM.Net.glTF.IglTFService.GenerateModel
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AssetGenerator.Runtime.MeshPrimitive
    name: MeshPrimitive
    nameWithType: MeshPrimitive
    fullName: AssetGenerator.Runtime.MeshPrimitive
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{AssetGenerator.Runtime.MeshPrimitive}
  commentId: T:System.Collections.Generic.IEnumerable{AssetGenerator.Runtime.MeshPrimitive}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<MeshPrimitive>
  nameWithType: IEnumerable<MeshPrimitive>
  fullName: System.Collections.Generic.IEnumerable<AssetGenerator.Runtime.MeshPrimitive>
  nameWithType.vb: IEnumerable(Of MeshPrimitive)
  fullName.vb: System.Collections.Generic.IEnumerable(Of AssetGenerator.Runtime.MeshPrimitive)
  name.vb: IEnumerable(Of MeshPrimitive)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: AssetGenerator.Runtime.MeshPrimitive
    name: MeshPrimitive
    nameWithType: MeshPrimitive
    fullName: AssetGenerator.Runtime.MeshPrimitive
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AssetGenerator.Runtime.MeshPrimitive
    name: MeshPrimitive
    nameWithType: MeshPrimitive
    fullName: AssetGenerator.Runtime.MeshPrimitive
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: DEM.Net.glTF.glTFService.GetHeightPlanes*
  commentId: Overload:DEM.Net.glTF.glTFService.GetHeightPlanes
  name: GetHeightPlanes
  nameWithType: glTFService.GetHeightPlanes
  fullName: DEM.Net.glTF.glTFService.GetHeightPlanes
- uid: DEM.Net.glTF.IglTFService.GetHeightPlanes
  commentId: M:DEM.Net.glTF.IglTFService.GetHeightPlanes
  parent: DEM.Net.glTF.IglTFService
  name: GetHeightPlanes()
  nameWithType: IglTFService.GetHeightPlanes()
  fullName: DEM.Net.glTF.IglTFService.GetHeightPlanes()
  spec.csharp:
  - uid: DEM.Net.glTF.IglTFService.GetHeightPlanes
    name: GetHeightPlanes
    nameWithType: IglTFService.GetHeightPlanes
    fullName: DEM.Net.glTF.IglTFService.GetHeightPlanes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DEM.Net.glTF.IglTFService.GetHeightPlanes
    name: GetHeightPlanes
    nameWithType: IglTFService.GetHeightPlanes
    fullName: DEM.Net.glTF.IglTFService.GetHeightPlanes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: DEM.Net.glTF.glTFService.GenerateTriangleMesh*
  commentId: Overload:DEM.Net.glTF.glTFService.GenerateTriangleMesh
  name: GenerateTriangleMesh
  nameWithType: glTFService.GenerateTriangleMesh
  fullName: DEM.Net.glTF.glTFService.GenerateTriangleMesh
- uid: DEM.Net.glTF.IglTFService.GenerateTriangleMesh(DEM.Net.Lib.HeightMap,System.Collections.Generic.IEnumerable{System.Numerics.Vector4},DEM.Net.Lib.Imagery.PBRTexture)
  commentId: M:DEM.Net.glTF.IglTFService.GenerateTriangleMesh(DEM.Net.Lib.HeightMap,System.Collections.Generic.IEnumerable{System.Numerics.Vector4},DEM.Net.Lib.Imagery.PBRTexture)
  parent: DEM.Net.glTF.IglTFService
  isExternal: true
  name: GenerateTriangleMesh(HeightMap, IEnumerable<Vector4>, PBRTexture)
  nameWithType: IglTFService.GenerateTriangleMesh(HeightMap, IEnumerable<Vector4>, PBRTexture)
  fullName: DEM.Net.glTF.IglTFService.GenerateTriangleMesh(DEM.Net.Lib.HeightMap, System.Collections.Generic.IEnumerable<System.Numerics.Vector4>, DEM.Net.Lib.Imagery.PBRTexture)
  nameWithType.vb: IglTFService.GenerateTriangleMesh(HeightMap, IEnumerable(Of Vector4), PBRTexture)
  fullName.vb: DEM.Net.glTF.IglTFService.GenerateTriangleMesh(DEM.Net.Lib.HeightMap, System.Collections.Generic.IEnumerable(Of System.Numerics.Vector4), DEM.Net.Lib.Imagery.PBRTexture)
  name.vb: GenerateTriangleMesh(HeightMap, IEnumerable(Of Vector4), PBRTexture)
  spec.csharp:
  - uid: DEM.Net.glTF.IglTFService.GenerateTriangleMesh(DEM.Net.Lib.HeightMap,System.Collections.Generic.IEnumerable{System.Numerics.Vector4},DEM.Net.Lib.Imagery.PBRTexture)
    name: GenerateTriangleMesh
    nameWithType: IglTFService.GenerateTriangleMesh
    fullName: DEM.Net.glTF.IglTFService.GenerateTriangleMesh
  - name: (
    nameWithType: (
    fullName: (
  - uid: DEM.Net.Lib.HeightMap
    name: HeightMap
    nameWithType: HeightMap
    fullName: DEM.Net.Lib.HeightMap
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Numerics.Vector4
    name: Vector4
    nameWithType: Vector4
    fullName: System.Numerics.Vector4
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DEM.Net.Lib.Imagery.PBRTexture
    name: PBRTexture
    nameWithType: PBRTexture
    fullName: DEM.Net.Lib.Imagery.PBRTexture
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DEM.Net.glTF.IglTFService.GenerateTriangleMesh(DEM.Net.Lib.HeightMap,System.Collections.Generic.IEnumerable{System.Numerics.Vector4},DEM.Net.Lib.Imagery.PBRTexture)
    name: GenerateTriangleMesh
    nameWithType: IglTFService.GenerateTriangleMesh
    fullName: DEM.Net.glTF.IglTFService.GenerateTriangleMesh
  - name: (
    nameWithType: (
    fullName: (
  - uid: DEM.Net.Lib.HeightMap
    name: HeightMap
    nameWithType: HeightMap
    fullName: DEM.Net.Lib.HeightMap
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Numerics.Vector4
    name: Vector4
    nameWithType: Vector4
    fullName: System.Numerics.Vector4
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DEM.Net.Lib.Imagery.PBRTexture
    name: PBRTexture
    nameWithType: PBRTexture
    fullName: DEM.Net.Lib.Imagery.PBRTexture
  - name: )
    nameWithType: )
    fullName: )
- uid: DEM.Net.Lib.HeightMap
  commentId: T:DEM.Net.Lib.HeightMap
  parent: DEM.Net.Lib
  name: HeightMap
  nameWithType: HeightMap
  fullName: DEM.Net.Lib.HeightMap
- uid: System.Collections.Generic.IEnumerable{System.Numerics.Vector4}
  commentId: T:System.Collections.Generic.IEnumerable{System.Numerics.Vector4}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Vector4>
  nameWithType: IEnumerable<Vector4>
  fullName: System.Collections.Generic.IEnumerable<System.Numerics.Vector4>
  nameWithType.vb: IEnumerable(Of Vector4)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Numerics.Vector4)
  name.vb: IEnumerable(Of Vector4)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Numerics.Vector4
    name: Vector4
    nameWithType: Vector4
    fullName: System.Numerics.Vector4
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Numerics.Vector4
    name: Vector4
    nameWithType: Vector4
    fullName: System.Numerics.Vector4
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DEM.Net.Lib.Imagery.PBRTexture
  commentId: T:DEM.Net.Lib.Imagery.PBRTexture
  parent: DEM.Net.Lib.Imagery
  name: PBRTexture
  nameWithType: PBRTexture
  fullName: DEM.Net.Lib.Imagery.PBRTexture
- uid: DEM.Net.Lib
  commentId: N:DEM.Net.Lib
  name: DEM.Net.Lib
  nameWithType: DEM.Net.Lib
  fullName: DEM.Net.Lib
- uid: DEM.Net.Lib.Imagery
  commentId: N:DEM.Net.Lib.Imagery
  name: DEM.Net.Lib.Imagery
  nameWithType: DEM.Net.Lib.Imagery
  fullName: DEM.Net.Lib.Imagery
- uid: DEM.Net.glTF.glTFService.GenerateLine*
  commentId: Overload:DEM.Net.glTF.glTFService.GenerateLine
  name: GenerateLine
  nameWithType: glTFService.GenerateLine
  fullName: DEM.Net.glTF.glTFService.GenerateLine
- uid: DEM.Net.glTF.IglTFService.GenerateLine(System.Collections.Generic.IEnumerable{DEM.Net.Lib.GeoPoint},System.Numerics.Vector4,System.Single)
  commentId: M:DEM.Net.glTF.IglTFService.GenerateLine(System.Collections.Generic.IEnumerable{DEM.Net.Lib.GeoPoint},System.Numerics.Vector4,System.Single)
  parent: DEM.Net.glTF.IglTFService
  isExternal: true
  name: GenerateLine(IEnumerable<GeoPoint>, Vector4, Single)
  nameWithType: IglTFService.GenerateLine(IEnumerable<GeoPoint>, Vector4, Single)
  fullName: DEM.Net.glTF.IglTFService.GenerateLine(System.Collections.Generic.IEnumerable<DEM.Net.Lib.GeoPoint>, System.Numerics.Vector4, System.Single)
  nameWithType.vb: IglTFService.GenerateLine(IEnumerable(Of GeoPoint), Vector4, Single)
  fullName.vb: DEM.Net.glTF.IglTFService.GenerateLine(System.Collections.Generic.IEnumerable(Of DEM.Net.Lib.GeoPoint), System.Numerics.Vector4, System.Single)
  name.vb: GenerateLine(IEnumerable(Of GeoPoint), Vector4, Single)
  spec.csharp:
  - uid: DEM.Net.glTF.IglTFService.GenerateLine(System.Collections.Generic.IEnumerable{DEM.Net.Lib.GeoPoint},System.Numerics.Vector4,System.Single)
    name: GenerateLine
    nameWithType: IglTFService.GenerateLine
    fullName: DEM.Net.glTF.IglTFService.GenerateLine
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: DEM.Net.Lib.GeoPoint
    name: GeoPoint
    nameWithType: GeoPoint
    fullName: DEM.Net.Lib.GeoPoint
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Numerics.Vector4
    name: Vector4
    nameWithType: Vector4
    fullName: System.Numerics.Vector4
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DEM.Net.glTF.IglTFService.GenerateLine(System.Collections.Generic.IEnumerable{DEM.Net.Lib.GeoPoint},System.Numerics.Vector4,System.Single)
    name: GenerateLine
    nameWithType: IglTFService.GenerateLine
    fullName: DEM.Net.glTF.IglTFService.GenerateLine
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: DEM.Net.Lib.GeoPoint
    name: GeoPoint
    nameWithType: GeoPoint
    fullName: DEM.Net.Lib.GeoPoint
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Numerics.Vector4
    name: Vector4
    nameWithType: Vector4
    fullName: System.Numerics.Vector4
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{DEM.Net.Lib.GeoPoint}
  commentId: T:System.Collections.Generic.IEnumerable{DEM.Net.Lib.GeoPoint}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<GeoPoint>
  nameWithType: IEnumerable<GeoPoint>
  fullName: System.Collections.Generic.IEnumerable<DEM.Net.Lib.GeoPoint>
  nameWithType.vb: IEnumerable(Of GeoPoint)
  fullName.vb: System.Collections.Generic.IEnumerable(Of DEM.Net.Lib.GeoPoint)
  name.vb: IEnumerable(Of GeoPoint)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: DEM.Net.Lib.GeoPoint
    name: GeoPoint
    nameWithType: GeoPoint
    fullName: DEM.Net.Lib.GeoPoint
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: DEM.Net.Lib.GeoPoint
    name: GeoPoint
    nameWithType: GeoPoint
    fullName: DEM.Net.Lib.GeoPoint
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Numerics.Vector4
  commentId: T:System.Numerics.Vector4
  parent: System.Numerics
  isExternal: true
  name: Vector4
  nameWithType: Vector4
  fullName: System.Numerics.Vector4
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Numerics
  commentId: N:System.Numerics
  isExternal: true
  name: System.Numerics
  nameWithType: System.Numerics
  fullName: System.Numerics
- uid: DEM.Net.glTF.IglTFService.GenerateTriangleMesh(System.Collections.Generic.IEnumerable{DEM.Net.Lib.GeoPoint},System.Collections.Generic.List{System.Int32},System.Collections.Generic.IEnumerable{System.Numerics.Vector4},DEM.Net.Lib.Imagery.PBRTexture)
  commentId: M:DEM.Net.glTF.IglTFService.GenerateTriangleMesh(System.Collections.Generic.IEnumerable{DEM.Net.Lib.GeoPoint},System.Collections.Generic.List{System.Int32},System.Collections.Generic.IEnumerable{System.Numerics.Vector4},DEM.Net.Lib.Imagery.PBRTexture)
  parent: DEM.Net.glTF.IglTFService
  isExternal: true
  name: GenerateTriangleMesh(IEnumerable<GeoPoint>, List<Int32>, IEnumerable<Vector4>, PBRTexture)
  nameWithType: IglTFService.GenerateTriangleMesh(IEnumerable<GeoPoint>, List<Int32>, IEnumerable<Vector4>, PBRTexture)
  fullName: DEM.Net.glTF.IglTFService.GenerateTriangleMesh(System.Collections.Generic.IEnumerable<DEM.Net.Lib.GeoPoint>, System.Collections.Generic.List<System.Int32>, System.Collections.Generic.IEnumerable<System.Numerics.Vector4>, DEM.Net.Lib.Imagery.PBRTexture)
  nameWithType.vb: IglTFService.GenerateTriangleMesh(IEnumerable(Of GeoPoint), List(Of Int32), IEnumerable(Of Vector4), PBRTexture)
  fullName.vb: DEM.Net.glTF.IglTFService.GenerateTriangleMesh(System.Collections.Generic.IEnumerable(Of DEM.Net.Lib.GeoPoint), System.Collections.Generic.List(Of System.Int32), System.Collections.Generic.IEnumerable(Of System.Numerics.Vector4), DEM.Net.Lib.Imagery.PBRTexture)
  name.vb: GenerateTriangleMesh(IEnumerable(Of GeoPoint), List(Of Int32), IEnumerable(Of Vector4), PBRTexture)
  spec.csharp:
  - uid: DEM.Net.glTF.IglTFService.GenerateTriangleMesh(System.Collections.Generic.IEnumerable{DEM.Net.Lib.GeoPoint},System.Collections.Generic.List{System.Int32},System.Collections.Generic.IEnumerable{System.Numerics.Vector4},DEM.Net.Lib.Imagery.PBRTexture)
    name: GenerateTriangleMesh
    nameWithType: IglTFService.GenerateTriangleMesh
    fullName: DEM.Net.glTF.IglTFService.GenerateTriangleMesh
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: DEM.Net.Lib.GeoPoint
    name: GeoPoint
    nameWithType: GeoPoint
    fullName: DEM.Net.Lib.GeoPoint
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Numerics.Vector4
    name: Vector4
    nameWithType: Vector4
    fullName: System.Numerics.Vector4
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DEM.Net.Lib.Imagery.PBRTexture
    name: PBRTexture
    nameWithType: PBRTexture
    fullName: DEM.Net.Lib.Imagery.PBRTexture
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DEM.Net.glTF.IglTFService.GenerateTriangleMesh(System.Collections.Generic.IEnumerable{DEM.Net.Lib.GeoPoint},System.Collections.Generic.List{System.Int32},System.Collections.Generic.IEnumerable{System.Numerics.Vector4},DEM.Net.Lib.Imagery.PBRTexture)
    name: GenerateTriangleMesh
    nameWithType: IglTFService.GenerateTriangleMesh
    fullName: DEM.Net.glTF.IglTFService.GenerateTriangleMesh
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: DEM.Net.Lib.GeoPoint
    name: GeoPoint
    nameWithType: GeoPoint
    fullName: DEM.Net.Lib.GeoPoint
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Numerics.Vector4
    name: Vector4
    nameWithType: Vector4
    fullName: System.Numerics.Vector4
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DEM.Net.Lib.Imagery.PBRTexture
    name: PBRTexture
    nameWithType: PBRTexture
    fullName: DEM.Net.Lib.Imagery.PBRTexture
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{System.Int32}
  commentId: T:System.Collections.Generic.List{System.Int32}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Int32>
  nameWithType: List<Int32>
  fullName: System.Collections.Generic.List<System.Int32>
  nameWithType.vb: List(Of Int32)
  fullName.vb: System.Collections.Generic.List(Of System.Int32)
  name.vb: List(Of Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: DEM.Net.glTF.IglTFService.GenerateTriangleMesh(System.Collections.Generic.IEnumerable{System.Numerics.Vector3},System.Collections.Generic.List{System.Int32},System.Collections.Generic.IEnumerable{System.Numerics.Vector4},DEM.Net.Lib.Imagery.PBRTexture)
  commentId: M:DEM.Net.glTF.IglTFService.GenerateTriangleMesh(System.Collections.Generic.IEnumerable{System.Numerics.Vector3},System.Collections.Generic.List{System.Int32},System.Collections.Generic.IEnumerable{System.Numerics.Vector4},DEM.Net.Lib.Imagery.PBRTexture)
  parent: DEM.Net.glTF.IglTFService
  isExternal: true
  name: GenerateTriangleMesh(IEnumerable<Vector3>, List<Int32>, IEnumerable<Vector4>, PBRTexture)
  nameWithType: IglTFService.GenerateTriangleMesh(IEnumerable<Vector3>, List<Int32>, IEnumerable<Vector4>, PBRTexture)
  fullName: DEM.Net.glTF.IglTFService.GenerateTriangleMesh(System.Collections.Generic.IEnumerable<System.Numerics.Vector3>, System.Collections.Generic.List<System.Int32>, System.Collections.Generic.IEnumerable<System.Numerics.Vector4>, DEM.Net.Lib.Imagery.PBRTexture)
  nameWithType.vb: IglTFService.GenerateTriangleMesh(IEnumerable(Of Vector3), List(Of Int32), IEnumerable(Of Vector4), PBRTexture)
  fullName.vb: DEM.Net.glTF.IglTFService.GenerateTriangleMesh(System.Collections.Generic.IEnumerable(Of System.Numerics.Vector3), System.Collections.Generic.List(Of System.Int32), System.Collections.Generic.IEnumerable(Of System.Numerics.Vector4), DEM.Net.Lib.Imagery.PBRTexture)
  name.vb: GenerateTriangleMesh(IEnumerable(Of Vector3), List(Of Int32), IEnumerable(Of Vector4), PBRTexture)
  spec.csharp:
  - uid: DEM.Net.glTF.IglTFService.GenerateTriangleMesh(System.Collections.Generic.IEnumerable{System.Numerics.Vector3},System.Collections.Generic.List{System.Int32},System.Collections.Generic.IEnumerable{System.Numerics.Vector4},DEM.Net.Lib.Imagery.PBRTexture)
    name: GenerateTriangleMesh
    nameWithType: IglTFService.GenerateTriangleMesh
    fullName: DEM.Net.glTF.IglTFService.GenerateTriangleMesh
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Numerics.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: System.Numerics.Vector3
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Numerics.Vector4
    name: Vector4
    nameWithType: Vector4
    fullName: System.Numerics.Vector4
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DEM.Net.Lib.Imagery.PBRTexture
    name: PBRTexture
    nameWithType: PBRTexture
    fullName: DEM.Net.Lib.Imagery.PBRTexture
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DEM.Net.glTF.IglTFService.GenerateTriangleMesh(System.Collections.Generic.IEnumerable{System.Numerics.Vector3},System.Collections.Generic.List{System.Int32},System.Collections.Generic.IEnumerable{System.Numerics.Vector4},DEM.Net.Lib.Imagery.PBRTexture)
    name: GenerateTriangleMesh
    nameWithType: IglTFService.GenerateTriangleMesh
    fullName: DEM.Net.glTF.IglTFService.GenerateTriangleMesh
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Numerics.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: System.Numerics.Vector3
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Numerics.Vector4
    name: Vector4
    nameWithType: Vector4
    fullName: System.Numerics.Vector4
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DEM.Net.Lib.Imagery.PBRTexture
    name: PBRTexture
    nameWithType: PBRTexture
    fullName: DEM.Net.Lib.Imagery.PBRTexture
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{System.Numerics.Vector3}
  commentId: T:System.Collections.Generic.IEnumerable{System.Numerics.Vector3}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Vector3>
  nameWithType: IEnumerable<Vector3>
  fullName: System.Collections.Generic.IEnumerable<System.Numerics.Vector3>
  nameWithType.vb: IEnumerable(Of Vector3)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Numerics.Vector3)
  name.vb: IEnumerable(Of Vector3)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Numerics.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: System.Numerics.Vector3
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Numerics.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: System.Numerics.Vector3
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DEM.Net.glTF.glTFService.GeneratePointMesh*
  commentId: Overload:DEM.Net.glTF.glTFService.GeneratePointMesh
  name: GeneratePointMesh
  nameWithType: glTFService.GeneratePointMesh
  fullName: DEM.Net.glTF.glTFService.GeneratePointMesh
- uid: DEM.Net.glTF.IglTFService.GeneratePointMesh(System.Collections.Generic.IEnumerable{DEM.Net.Lib.GeoPoint},System.Numerics.Vector4,System.Single)
  commentId: M:DEM.Net.glTF.IglTFService.GeneratePointMesh(System.Collections.Generic.IEnumerable{DEM.Net.Lib.GeoPoint},System.Numerics.Vector4,System.Single)
  parent: DEM.Net.glTF.IglTFService
  isExternal: true
  name: GeneratePointMesh(IEnumerable<GeoPoint>, Vector4, Single)
  nameWithType: IglTFService.GeneratePointMesh(IEnumerable<GeoPoint>, Vector4, Single)
  fullName: DEM.Net.glTF.IglTFService.GeneratePointMesh(System.Collections.Generic.IEnumerable<DEM.Net.Lib.GeoPoint>, System.Numerics.Vector4, System.Single)
  nameWithType.vb: IglTFService.GeneratePointMesh(IEnumerable(Of GeoPoint), Vector4, Single)
  fullName.vb: DEM.Net.glTF.IglTFService.GeneratePointMesh(System.Collections.Generic.IEnumerable(Of DEM.Net.Lib.GeoPoint), System.Numerics.Vector4, System.Single)
  name.vb: GeneratePointMesh(IEnumerable(Of GeoPoint), Vector4, Single)
  spec.csharp:
  - uid: DEM.Net.glTF.IglTFService.GeneratePointMesh(System.Collections.Generic.IEnumerable{DEM.Net.Lib.GeoPoint},System.Numerics.Vector4,System.Single)
    name: GeneratePointMesh
    nameWithType: IglTFService.GeneratePointMesh
    fullName: DEM.Net.glTF.IglTFService.GeneratePointMesh
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: DEM.Net.Lib.GeoPoint
    name: GeoPoint
    nameWithType: GeoPoint
    fullName: DEM.Net.Lib.GeoPoint
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Numerics.Vector4
    name: Vector4
    nameWithType: Vector4
    fullName: System.Numerics.Vector4
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DEM.Net.glTF.IglTFService.GeneratePointMesh(System.Collections.Generic.IEnumerable{DEM.Net.Lib.GeoPoint},System.Numerics.Vector4,System.Single)
    name: GeneratePointMesh
    nameWithType: IglTFService.GeneratePointMesh
    fullName: DEM.Net.glTF.IglTFService.GeneratePointMesh
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: DEM.Net.Lib.GeoPoint
    name: GeoPoint
    nameWithType: GeoPoint
    fullName: DEM.Net.Lib.GeoPoint
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Numerics.Vector4
    name: Vector4
    nameWithType: Vector4
    fullName: System.Numerics.Vector4
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
