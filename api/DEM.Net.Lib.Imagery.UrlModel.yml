### YamlMime:ManagedReference
items:
- uid: DEM.Net.Lib.Imagery.UrlModel
  commentId: T:DEM.Net.Lib.Imagery.UrlModel
  id: UrlModel
  parent: DEM.Net.Lib.Imagery
  children:
  - DEM.Net.Lib.Imagery.UrlModel.#ctor(System.String,System.String[])
  - DEM.Net.Lib.Imagery.UrlModel.Servers
  - DEM.Net.Lib.Imagery.UrlModel.UrlFormat
  langs:
  - csharp
  - vb
  name: UrlModel
  nameWithType: UrlModel
  fullName: DEM.Net.Lib.Imagery.UrlModel
  type: Class
  source:
    remote:
      path: DEM.Net.Lib/Imagery/UrlModel.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: UrlModel
    path: ../DEM.Net.Lib/Imagery/UrlModel.cs
    startLine: 2
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib.Imagery
  syntax:
    content: public class UrlModel
    content.vb: Public Class UrlModel
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: DEM.Net.Lib.Imagery.UrlModel.UrlFormat
  commentId: F:DEM.Net.Lib.Imagery.UrlModel.UrlFormat
  id: UrlFormat
  parent: DEM.Net.Lib.Imagery.UrlModel
  langs:
  - csharp
  - vb
  name: UrlFormat
  nameWithType: UrlModel.UrlFormat
  fullName: DEM.Net.Lib.Imagery.UrlModel.UrlFormat
  type: Field
  source:
    remote:
      path: DEM.Net.Lib/Imagery/UrlModel.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: UrlFormat
    path: ../DEM.Net.Lib/Imagery/UrlModel.cs
    startLine: 4
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib.Imagery
  syntax:
    content: public string UrlFormat
    return:
      type: System.String
    content.vb: Public UrlFormat As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DEM.Net.Lib.Imagery.UrlModel.Servers
  commentId: F:DEM.Net.Lib.Imagery.UrlModel.Servers
  id: Servers
  parent: DEM.Net.Lib.Imagery.UrlModel
  langs:
  - csharp
  - vb
  name: Servers
  nameWithType: UrlModel.Servers
  fullName: DEM.Net.Lib.Imagery.UrlModel.Servers
  type: Field
  source:
    remote:
      path: DEM.Net.Lib/Imagery/UrlModel.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: Servers
    path: ../DEM.Net.Lib/Imagery/UrlModel.cs
    startLine: 5
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib.Imagery
  syntax:
    content: public string[] Servers
    return:
      type: System.String[]
    content.vb: Public Servers As String()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DEM.Net.Lib.Imagery.UrlModel.#ctor(System.String,System.String[])
  commentId: M:DEM.Net.Lib.Imagery.UrlModel.#ctor(System.String,System.String[])
  id: '#ctor(System.String,System.String[])'
  parent: DEM.Net.Lib.Imagery.UrlModel
  langs:
  - csharp
  - vb
  name: UrlModel(String, String[])
  nameWithType: UrlModel.UrlModel(String, String[])
  fullName: DEM.Net.Lib.Imagery.UrlModel.UrlModel(System.String, System.String[])
  type: Constructor
  source:
    remote:
      path: DEM.Net.Lib/Imagery/UrlModel.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: .ctor
    path: ../DEM.Net.Lib/Imagery/UrlModel.cs
    startLine: 7
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib.Imagery
  syntax:
    content: public UrlModel(string urlFormat, string[] servers)
    parameters:
    - id: urlFormat
      type: System.String
    - id: servers
      type: System.String[]
    content.vb: Public Sub New(urlFormat As String, servers As String())
  overload: DEM.Net.Lib.Imagery.UrlModel.#ctor*
  nameWithType.vb: UrlModel.UrlModel(String, String())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: DEM.Net.Lib.Imagery.UrlModel.UrlModel(System.String, System.String())
  name.vb: UrlModel(String, String())
references:
- uid: DEM.Net.Lib.Imagery
  commentId: N:DEM.Net.Lib.Imagery
  name: DEM.Net.Lib.Imagery
  nameWithType: DEM.Net.Lib.Imagery
  fullName: DEM.Net.Lib.Imagery
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: DEM.Net.Lib.Imagery.UrlModel.#ctor*
  commentId: Overload:DEM.Net.Lib.Imagery.UrlModel.#ctor
  name: UrlModel
  nameWithType: UrlModel.UrlModel
  fullName: DEM.Net.Lib.Imagery.UrlModel.UrlModel
