### YamlMime:ManagedReference
items:
- uid: SampleApp.GpxImport
  commentId: T:SampleApp.GpxImport
  id: GpxImport
  parent: SampleApp
  children:
  - SampleApp.GpxImport.ReadGPX(System.String)
  - SampleApp.GpxImport.ReadGPX_Segments(System.String)
  langs:
  - csharp
  - vb
  name: GpxImport
  nameWithType: GpxImport
  fullName: SampleApp.GpxImport
  type: Class
  source:
    remote:
      path: DEM.Net.Lib/IO/gpx/GpxImport.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: GpxImport
    path: ../DEM.Net.Lib/IO/gpx/GpxImport.cs
    startLine: 11
  assemblies:
  - DEM.Net.Lib
  namespace: SampleApp
  syntax:
    content: public static class GpxImport
    content.vb: Public Module GpxImport
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: SampleApp.GpxImport.ReadGPX(System.String)
  commentId: M:SampleApp.GpxImport.ReadGPX(System.String)
  id: ReadGPX(System.String)
  parent: SampleApp.GpxImport
  langs:
  - csharp
  - vb
  name: ReadGPX(String)
  nameWithType: GpxImport.ReadGPX(String)
  fullName: SampleApp.GpxImport.ReadGPX(System.String)
  type: Method
  source:
    remote:
      path: DEM.Net.Lib/IO/gpx/GpxImport.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: ReadGPX
    path: ../DEM.Net.Lib/IO/gpx/GpxImport.cs
    startLine: 13
  assemblies:
  - DEM.Net.Lib
  namespace: SampleApp
  syntax:
    content: public static void ReadGPX(string fileName)
    parameters:
    - id: fileName
      type: System.String
    content.vb: Public Shared Sub ReadGPX(fileName As String)
  overload: SampleApp.GpxImport.ReadGPX*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SampleApp.GpxImport.ReadGPX_Segments(System.String)
  commentId: M:SampleApp.GpxImport.ReadGPX_Segments(System.String)
  id: ReadGPX_Segments(System.String)
  parent: SampleApp.GpxImport
  langs:
  - csharp
  - vb
  name: ReadGPX_Segments(String)
  nameWithType: GpxImport.ReadGPX_Segments(String)
  fullName: SampleApp.GpxImport.ReadGPX_Segments(System.String)
  type: Method
  source:
    remote:
      path: DEM.Net.Lib/IO/gpx/GpxImport.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: ReadGPX_Segments
    path: ../DEM.Net.Lib/IO/gpx/GpxImport.cs
    startLine: 45
  assemblies:
  - DEM.Net.Lib
  namespace: SampleApp
  syntax:
    content: public static IEnumerable<IEnumerable<GeoPoint>> ReadGPX_Segments(string fileName)
    parameters:
    - id: fileName
      type: System.String
    return:
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{DEM.Net.Lib.GeoPoint}}
    content.vb: Public Shared Function ReadGPX_Segments(fileName As String) As IEnumerable(Of IEnumerable(Of GeoPoint))
  overload: SampleApp.GpxImport.ReadGPX_Segments*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: SampleApp
  commentId: N:SampleApp
  name: SampleApp
  nameWithType: SampleApp
  fullName: SampleApp
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SampleApp.GpxImport.ReadGPX*
  commentId: Overload:SampleApp.GpxImport.ReadGPX
  name: ReadGPX
  nameWithType: GpxImport.ReadGPX
  fullName: SampleApp.GpxImport.ReadGPX
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: SampleApp.GpxImport.ReadGPX_Segments*
  commentId: Overload:SampleApp.GpxImport.ReadGPX_Segments
  name: ReadGPX_Segments
  nameWithType: GpxImport.ReadGPX_Segments
  fullName: SampleApp.GpxImport.ReadGPX_Segments
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{DEM.Net.Lib.GeoPoint}}
  commentId: T:System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{DEM.Net.Lib.GeoPoint}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<IEnumerable<GeoPoint>>
  nameWithType: IEnumerable<IEnumerable<GeoPoint>>
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.IEnumerable<DEM.Net.Lib.GeoPoint>>
  nameWithType.vb: IEnumerable(Of IEnumerable(Of GeoPoint))
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.IEnumerable(Of DEM.Net.Lib.GeoPoint))
  name.vb: IEnumerable(Of IEnumerable(Of GeoPoint))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: DEM.Net.Lib.GeoPoint
    name: GeoPoint
    nameWithType: GeoPoint
    fullName: DEM.Net.Lib.GeoPoint
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: DEM.Net.Lib.GeoPoint
    name: GeoPoint
    nameWithType: GeoPoint
    fullName: DEM.Net.Lib.GeoPoint
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
