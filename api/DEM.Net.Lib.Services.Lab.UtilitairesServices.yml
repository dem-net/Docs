### YamlMime:ManagedReference
items:
- uid: DEM.Net.Lib.Services.Lab.UtilitairesServices
  commentId: T:DEM.Net.Lib.Services.Lab.UtilitairesServices
  id: UtilitairesServices
  parent: DEM.Net.Lib.Services.Lab
  children:
  - DEM.Net.Lib.Services.Lab.UtilitairesServices.ConstructPoint(System.Double,System.Double,System.Int32)
  - DEM.Net.Lib.Services.Lab.UtilitairesServices.GetGeometryArc(DEM.Net.Lib.Services.Lab.BeanArc_internal,System.Boolean)
  - DEM.Net.Lib.Services.Lab.UtilitairesServices.GetGeometryLine(System.Double[],System.Double[],System.Int32,System.Boolean)
  - DEM.Net.Lib.Services.Lab.UtilitairesServices.GetGeometryPolygon(System.Collections.Generic.List{System.Double[]},System.Int32)
  - DEM.Net.Lib.Services.Lab.UtilitairesServices.GethCodeGeogObjet(System.Collections.Generic.List{System.Double[]},System.Int32,System.Char)
  - DEM.Net.Lib.Services.Lab.UtilitairesServices.GethCodeGeogPoint(System.Double[],System.Int32,System.Char)
  - DEM.Net.Lib.Services.Lab.UtilitairesServices.GethCodeGeogSegment(System.Double[],System.Double[],System.Int32,System.Char)
  langs:
  - csharp
  - vb
  name: UtilitairesServices
  nameWithType: UtilitairesServices
  fullName: DEM.Net.Lib.Services.Lab.UtilitairesServices
  type: Class
  source:
    remote:
      path: DEM.Net.Lib/Services/Lab/UtilitairesServices.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: UtilitairesServices
    path: ../DEM.Net.Lib/Services/Lab/UtilitairesServices.cs
    startLine: 10
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib.Services.Lab
  syntax:
    content: 'public class UtilitairesServices : IUtilitairesServices'
    content.vb: >-
      Public Class UtilitairesServices
          Implements IUtilitairesServices
  inheritance:
  - System.Object
  implements:
  - DEM.Net.Lib.Services.Lab.IUtilitairesServices
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: DEM.Net.Lib.Services.Lab.UtilitairesServices.ConstructPoint(System.Double,System.Double,System.Int32)
  commentId: M:DEM.Net.Lib.Services.Lab.UtilitairesServices.ConstructPoint(System.Double,System.Double,System.Int32)
  id: ConstructPoint(System.Double,System.Double,System.Int32)
  parent: DEM.Net.Lib.Services.Lab.UtilitairesServices
  langs:
  - csharp
  - vb
  name: ConstructPoint(Double, Double, Int32)
  nameWithType: UtilitairesServices.ConstructPoint(Double, Double, Int32)
  fullName: DEM.Net.Lib.Services.Lab.UtilitairesServices.ConstructPoint(System.Double, System.Double, System.Int32)
  type: Method
  source:
    remote:
      path: DEM.Net.Lib/Services/Lab/UtilitairesServices.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: ConstructPoint
    path: ../DEM.Net.Lib/Services/Lab/UtilitairesServices.cs
    startLine: 12
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib.Services.Lab
  syntax:
    content: public Point ConstructPoint(double x, double y, int srid)
    parameters:
    - id: x
      type: System.Double
    - id: y
      type: System.Double
    - id: srid
      type: System.Int32
    return:
      type: NetTopologySuite.Geometries.Point
    content.vb: Public Function ConstructPoint(x As Double, y As Double, srid As Integer) As Point
  overload: DEM.Net.Lib.Services.Lab.UtilitairesServices.ConstructPoint*
  implements:
  - DEM.Net.Lib.Services.Lab.IUtilitairesServices.ConstructPoint(System.Double,System.Double,System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DEM.Net.Lib.Services.Lab.UtilitairesServices.GethCodeGeogPoint(System.Double[],System.Int32,System.Char)
  commentId: M:DEM.Net.Lib.Services.Lab.UtilitairesServices.GethCodeGeogPoint(System.Double[],System.Int32,System.Char)
  id: GethCodeGeogPoint(System.Double[],System.Int32,System.Char)
  parent: DEM.Net.Lib.Services.Lab.UtilitairesServices
  langs:
  - csharp
  - vb
  name: GethCodeGeogPoint(Double[], Int32, Char)
  nameWithType: UtilitairesServices.GethCodeGeogPoint(Double[], Int32, Char)
  fullName: DEM.Net.Lib.Services.Lab.UtilitairesServices.GethCodeGeogPoint(System.Double[], System.Int32, System.Char)
  type: Method
  source:
    remote:
      path: DEM.Net.Lib/Services/Lab/UtilitairesServices.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: GethCodeGeogPoint
    path: ../DEM.Net.Lib/Services/Lab/UtilitairesServices.cs
    startLine: 16
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib.Services.Lab
  syntax:
    content: public string GethCodeGeogPoint(double[] p_coord, int p_nbreDecimalesMoins1SiToutes, char p_separateur)
    parameters:
    - id: p_coord
      type: System.Double[]
    - id: p_nbreDecimalesMoins1SiToutes
      type: System.Int32
    - id: p_separateur
      type: System.Char
    return:
      type: System.String
    content.vb: Public Function GethCodeGeogPoint(p_coord As Double(), p_nbreDecimalesMoins1SiToutes As Integer, p_separateur As Char) As String
  overload: DEM.Net.Lib.Services.Lab.UtilitairesServices.GethCodeGeogPoint*
  implements:
  - DEM.Net.Lib.Services.Lab.IUtilitairesServices.GethCodeGeogPoint(System.Double[],System.Int32,System.Char)
  nameWithType.vb: UtilitairesServices.GethCodeGeogPoint(Double(), Int32, Char)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: DEM.Net.Lib.Services.Lab.UtilitairesServices.GethCodeGeogPoint(System.Double(), System.Int32, System.Char)
  name.vb: GethCodeGeogPoint(Double(), Int32, Char)
- uid: DEM.Net.Lib.Services.Lab.UtilitairesServices.GethCodeGeogObjet(System.Collections.Generic.List{System.Double[]},System.Int32,System.Char)
  commentId: M:DEM.Net.Lib.Services.Lab.UtilitairesServices.GethCodeGeogObjet(System.Collections.Generic.List{System.Double[]},System.Int32,System.Char)
  id: GethCodeGeogObjet(System.Collections.Generic.List{System.Double[]},System.Int32,System.Char)
  parent: DEM.Net.Lib.Services.Lab.UtilitairesServices
  langs:
  - csharp
  - vb
  name: GethCodeGeogObjet(List<Double[]>, Int32, Char)
  nameWithType: UtilitairesServices.GethCodeGeogObjet(List<Double[]>, Int32, Char)
  fullName: DEM.Net.Lib.Services.Lab.UtilitairesServices.GethCodeGeogObjet(System.Collections.Generic.List<System.Double[]>, System.Int32, System.Char)
  type: Method
  source:
    remote:
      path: DEM.Net.Lib/Services/Lab/UtilitairesServices.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: GethCodeGeogObjet
    path: ../DEM.Net.Lib/Services/Lab/UtilitairesServices.cs
    startLine: 44
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib.Services.Lab
  syntax:
    content: public string GethCodeGeogObjet(List<double[]> p_points, int p_nbreDecimalesMoins1SiToutes, char p_separateur)
    parameters:
    - id: p_points
      type: System.Collections.Generic.List{System.Double[]}
    - id: p_nbreDecimalesMoins1SiToutes
      type: System.Int32
    - id: p_separateur
      type: System.Char
    return:
      type: System.String
    content.vb: Public Function GethCodeGeogObjet(p_points As List(Of Double()), p_nbreDecimalesMoins1SiToutes As Integer, p_separateur As Char) As String
  overload: DEM.Net.Lib.Services.Lab.UtilitairesServices.GethCodeGeogObjet*
  implements:
  - DEM.Net.Lib.Services.Lab.IUtilitairesServices.GethCodeGeogObjet(System.Collections.Generic.List{System.Double[]},System.Int32,System.Char)
  nameWithType.vb: UtilitairesServices.GethCodeGeogObjet(List(Of Double()), Int32, Char)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: DEM.Net.Lib.Services.Lab.UtilitairesServices.GethCodeGeogObjet(System.Collections.Generic.List(Of System.Double()), System.Int32, System.Char)
  name.vb: GethCodeGeogObjet(List(Of Double()), Int32, Char)
- uid: DEM.Net.Lib.Services.Lab.UtilitairesServices.GethCodeGeogSegment(System.Double[],System.Double[],System.Int32,System.Char)
  commentId: M:DEM.Net.Lib.Services.Lab.UtilitairesServices.GethCodeGeogSegment(System.Double[],System.Double[],System.Int32,System.Char)
  id: GethCodeGeogSegment(System.Double[],System.Double[],System.Int32,System.Char)
  parent: DEM.Net.Lib.Services.Lab.UtilitairesServices
  langs:
  - csharp
  - vb
  name: GethCodeGeogSegment(Double[], Double[], Int32, Char)
  nameWithType: UtilitairesServices.GethCodeGeogSegment(Double[], Double[], Int32, Char)
  fullName: DEM.Net.Lib.Services.Lab.UtilitairesServices.GethCodeGeogSegment(System.Double[], System.Double[], System.Int32, System.Char)
  type: Method
  source:
    remote:
      path: DEM.Net.Lib/Services/Lab/UtilitairesServices.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: GethCodeGeogSegment
    path: ../DEM.Net.Lib/Services/Lab/UtilitairesServices.cs
    startLine: 64
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib.Services.Lab
  syntax:
    content: public string GethCodeGeogSegment(double[] p_coord1, double[] p_coord2, int p_nbreDecimalesMoins1SiToutes, char p_separateur)
    parameters:
    - id: p_coord1
      type: System.Double[]
    - id: p_coord2
      type: System.Double[]
    - id: p_nbreDecimalesMoins1SiToutes
      type: System.Int32
    - id: p_separateur
      type: System.Char
    return:
      type: System.String
    content.vb: Public Function GethCodeGeogSegment(p_coord1 As Double(), p_coord2 As Double(), p_nbreDecimalesMoins1SiToutes As Integer, p_separateur As Char) As String
  overload: DEM.Net.Lib.Services.Lab.UtilitairesServices.GethCodeGeogSegment*
  implements:
  - DEM.Net.Lib.Services.Lab.IUtilitairesServices.GethCodeGeogSegment(System.Double[],System.Double[],System.Int32,System.Char)
  nameWithType.vb: UtilitairesServices.GethCodeGeogSegment(Double(), Double(), Int32, Char)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: DEM.Net.Lib.Services.Lab.UtilitairesServices.GethCodeGeogSegment(System.Double(), System.Double(), System.Int32, System.Char)
  name.vb: GethCodeGeogSegment(Double(), Double(), Int32, Char)
- uid: DEM.Net.Lib.Services.Lab.UtilitairesServices.GetGeometryArc(DEM.Net.Lib.Services.Lab.BeanArc_internal,System.Boolean)
  commentId: M:DEM.Net.Lib.Services.Lab.UtilitairesServices.GetGeometryArc(DEM.Net.Lib.Services.Lab.BeanArc_internal,System.Boolean)
  id: GetGeometryArc(DEM.Net.Lib.Services.Lab.BeanArc_internal,System.Boolean)
  parent: DEM.Net.Lib.Services.Lab.UtilitairesServices
  langs:
  - csharp
  - vb
  name: GetGeometryArc(BeanArc_internal, Boolean)
  nameWithType: UtilitairesServices.GetGeometryArc(BeanArc_internal, Boolean)
  fullName: DEM.Net.Lib.Services.Lab.UtilitairesServices.GetGeometryArc(DEM.Net.Lib.Services.Lab.BeanArc_internal, System.Boolean)
  type: Method
  source:
    remote:
      path: DEM.Net.Lib/Services/Lab/UtilitairesServices.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: GetGeometryArc
    path: ../DEM.Net.Lib/Services/Lab/UtilitairesServices.cs
    startLine: 83
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib.Services.Lab
  syntax:
    content: public IGeometry GetGeometryArc(BeanArc_internal p_arc, bool ifPt1AndPt2IqualReturnPointElseNull)
    parameters:
    - id: p_arc
      type: DEM.Net.Lib.Services.Lab.BeanArc_internal
    - id: ifPt1AndPt2IqualReturnPointElseNull
      type: System.Boolean
    return:
      type: GeoAPI.Geometries.IGeometry
    content.vb: Public Function GetGeometryArc(p_arc As BeanArc_internal, ifPt1AndPt2IqualReturnPointElseNull As Boolean) As IGeometry
  overload: DEM.Net.Lib.Services.Lab.UtilitairesServices.GetGeometryArc*
  implements:
  - DEM.Net.Lib.Services.Lab.IUtilitairesServices.GetGeometryArc(DEM.Net.Lib.Services.Lab.BeanArc_internal,System.Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DEM.Net.Lib.Services.Lab.UtilitairesServices.GetGeometryLine(System.Double[],System.Double[],System.Int32,System.Boolean)
  commentId: M:DEM.Net.Lib.Services.Lab.UtilitairesServices.GetGeometryLine(System.Double[],System.Double[],System.Int32,System.Boolean)
  id: GetGeometryLine(System.Double[],System.Double[],System.Int32,System.Boolean)
  parent: DEM.Net.Lib.Services.Lab.UtilitairesServices
  langs:
  - csharp
  - vb
  name: GetGeometryLine(Double[], Double[], Int32, Boolean)
  nameWithType: UtilitairesServices.GetGeometryLine(Double[], Double[], Int32, Boolean)
  fullName: DEM.Net.Lib.Services.Lab.UtilitairesServices.GetGeometryLine(System.Double[], System.Double[], System.Int32, System.Boolean)
  type: Method
  source:
    remote:
      path: DEM.Net.Lib/Services/Lab/UtilitairesServices.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: GetGeometryLine
    path: ../DEM.Net.Lib/Services/Lab/UtilitairesServices.cs
    startLine: 87
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib.Services.Lab
  syntax:
    content: public IGeometry GetGeometryLine(double[] p_coordPoint1, double[] p_coordPoint2, int p_srid, bool ifPt1AndPt2IqualReturnPointElseNull)
    parameters:
    - id: p_coordPoint1
      type: System.Double[]
    - id: p_coordPoint2
      type: System.Double[]
    - id: p_srid
      type: System.Int32
    - id: ifPt1AndPt2IqualReturnPointElseNull
      type: System.Boolean
    return:
      type: GeoAPI.Geometries.IGeometry
    content.vb: Public Function GetGeometryLine(p_coordPoint1 As Double(), p_coordPoint2 As Double(), p_srid As Integer, ifPt1AndPt2IqualReturnPointElseNull As Boolean) As IGeometry
  overload: DEM.Net.Lib.Services.Lab.UtilitairesServices.GetGeometryLine*
  implements:
  - DEM.Net.Lib.Services.Lab.IUtilitairesServices.GetGeometryLine(System.Double[],System.Double[],System.Int32,System.Boolean)
  nameWithType.vb: UtilitairesServices.GetGeometryLine(Double(), Double(), Int32, Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: DEM.Net.Lib.Services.Lab.UtilitairesServices.GetGeometryLine(System.Double(), System.Double(), System.Int32, System.Boolean)
  name.vb: GetGeometryLine(Double(), Double(), Int32, Boolean)
- uid: DEM.Net.Lib.Services.Lab.UtilitairesServices.GetGeometryPolygon(System.Collections.Generic.List{System.Double[]},System.Int32)
  commentId: M:DEM.Net.Lib.Services.Lab.UtilitairesServices.GetGeometryPolygon(System.Collections.Generic.List{System.Double[]},System.Int32)
  id: GetGeometryPolygon(System.Collections.Generic.List{System.Double[]},System.Int32)
  parent: DEM.Net.Lib.Services.Lab.UtilitairesServices
  langs:
  - csharp
  - vb
  name: GetGeometryPolygon(List<Double[]>, Int32)
  nameWithType: UtilitairesServices.GetGeometryPolygon(List<Double[]>, Int32)
  fullName: DEM.Net.Lib.Services.Lab.UtilitairesServices.GetGeometryPolygon(System.Collections.Generic.List<System.Double[]>, System.Int32)
  type: Method
  source:
    remote:
      path: DEM.Net.Lib/Services/Lab/UtilitairesServices.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: GetGeometryPolygon
    path: ../DEM.Net.Lib/Services/Lab/UtilitairesServices.cs
    startLine: 116
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib.Services.Lab
  syntax:
    content: public IGeometry GetGeometryPolygon(List<double[]> p_coordPointsDuContour, int p_srid)
    parameters:
    - id: p_coordPointsDuContour
      type: System.Collections.Generic.List{System.Double[]}
    - id: p_srid
      type: System.Int32
    return:
      type: GeoAPI.Geometries.IGeometry
    content.vb: Public Function GetGeometryPolygon(p_coordPointsDuContour As List(Of Double()), p_srid As Integer) As IGeometry
  overload: DEM.Net.Lib.Services.Lab.UtilitairesServices.GetGeometryPolygon*
  implements:
  - DEM.Net.Lib.Services.Lab.IUtilitairesServices.GetGeometryPolygon(System.Collections.Generic.List{System.Double[]},System.Int32)
  nameWithType.vb: UtilitairesServices.GetGeometryPolygon(List(Of Double()), Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: DEM.Net.Lib.Services.Lab.UtilitairesServices.GetGeometryPolygon(System.Collections.Generic.List(Of System.Double()), System.Int32)
  name.vb: GetGeometryPolygon(List(Of Double()), Int32)
references:
- uid: DEM.Net.Lib.Services.Lab
  commentId: N:DEM.Net.Lib.Services.Lab
  name: DEM.Net.Lib.Services.Lab
  nameWithType: DEM.Net.Lib.Services.Lab
  fullName: DEM.Net.Lib.Services.Lab
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: DEM.Net.Lib.Services.Lab.IUtilitairesServices
  commentId: T:DEM.Net.Lib.Services.Lab.IUtilitairesServices
  parent: DEM.Net.Lib.Services.Lab
  name: IUtilitairesServices
  nameWithType: IUtilitairesServices
  fullName: DEM.Net.Lib.Services.Lab.IUtilitairesServices
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: DEM.Net.Lib.Services.Lab.UtilitairesServices.ConstructPoint*
  commentId: Overload:DEM.Net.Lib.Services.Lab.UtilitairesServices.ConstructPoint
  name: ConstructPoint
  nameWithType: UtilitairesServices.ConstructPoint
  fullName: DEM.Net.Lib.Services.Lab.UtilitairesServices.ConstructPoint
- uid: DEM.Net.Lib.Services.Lab.IUtilitairesServices.ConstructPoint(System.Double,System.Double,System.Int32)
  commentId: M:DEM.Net.Lib.Services.Lab.IUtilitairesServices.ConstructPoint(System.Double,System.Double,System.Int32)
  parent: DEM.Net.Lib.Services.Lab.IUtilitairesServices
  isExternal: true
  name: ConstructPoint(Double, Double, Int32)
  nameWithType: IUtilitairesServices.ConstructPoint(Double, Double, Int32)
  fullName: DEM.Net.Lib.Services.Lab.IUtilitairesServices.ConstructPoint(System.Double, System.Double, System.Int32)
  spec.csharp:
  - uid: DEM.Net.Lib.Services.Lab.IUtilitairesServices.ConstructPoint(System.Double,System.Double,System.Int32)
    name: ConstructPoint
    nameWithType: IUtilitairesServices.ConstructPoint
    fullName: DEM.Net.Lib.Services.Lab.IUtilitairesServices.ConstructPoint
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DEM.Net.Lib.Services.Lab.IUtilitairesServices.ConstructPoint(System.Double,System.Double,System.Int32)
    name: ConstructPoint
    nameWithType: IUtilitairesServices.ConstructPoint
    fullName: DEM.Net.Lib.Services.Lab.IUtilitairesServices.ConstructPoint
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: NetTopologySuite.Geometries.Point
  commentId: T:NetTopologySuite.Geometries.Point
  parent: NetTopologySuite.Geometries
  isExternal: true
  name: Point
  nameWithType: Point
  fullName: NetTopologySuite.Geometries.Point
- uid: NetTopologySuite.Geometries
  commentId: N:NetTopologySuite.Geometries
  isExternal: true
  name: NetTopologySuite.Geometries
  nameWithType: NetTopologySuite.Geometries
  fullName: NetTopologySuite.Geometries
- uid: DEM.Net.Lib.Services.Lab.UtilitairesServices.GethCodeGeogPoint*
  commentId: Overload:DEM.Net.Lib.Services.Lab.UtilitairesServices.GethCodeGeogPoint
  name: GethCodeGeogPoint
  nameWithType: UtilitairesServices.GethCodeGeogPoint
  fullName: DEM.Net.Lib.Services.Lab.UtilitairesServices.GethCodeGeogPoint
- uid: DEM.Net.Lib.Services.Lab.IUtilitairesServices.GethCodeGeogPoint(System.Double[],System.Int32,System.Char)
  commentId: M:DEM.Net.Lib.Services.Lab.IUtilitairesServices.GethCodeGeogPoint(System.Double[],System.Int32,System.Char)
  parent: DEM.Net.Lib.Services.Lab.IUtilitairesServices
  isExternal: true
  name: GethCodeGeogPoint(Double[], Int32, Char)
  nameWithType: IUtilitairesServices.GethCodeGeogPoint(Double[], Int32, Char)
  fullName: DEM.Net.Lib.Services.Lab.IUtilitairesServices.GethCodeGeogPoint(System.Double[], System.Int32, System.Char)
  nameWithType.vb: IUtilitairesServices.GethCodeGeogPoint(Double(), Int32, Char)
  fullName.vb: DEM.Net.Lib.Services.Lab.IUtilitairesServices.GethCodeGeogPoint(System.Double(), System.Int32, System.Char)
  name.vb: GethCodeGeogPoint(Double(), Int32, Char)
  spec.csharp:
  - uid: DEM.Net.Lib.Services.Lab.IUtilitairesServices.GethCodeGeogPoint(System.Double[],System.Int32,System.Char)
    name: GethCodeGeogPoint
    nameWithType: IUtilitairesServices.GethCodeGeogPoint
    fullName: DEM.Net.Lib.Services.Lab.IUtilitairesServices.GethCodeGeogPoint
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DEM.Net.Lib.Services.Lab.IUtilitairesServices.GethCodeGeogPoint(System.Double[],System.Int32,System.Char)
    name: GethCodeGeogPoint
    nameWithType: IUtilitairesServices.GethCodeGeogPoint
    fullName: DEM.Net.Lib.Services.Lab.IUtilitairesServices.GethCodeGeogPoint
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Double[]
  isExternal: true
  name: Double[]
  nameWithType: Double[]
  fullName: System.Double[]
  nameWithType.vb: Double()
  fullName.vb: System.Double()
  name.vb: Double()
  spec.csharp:
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Char
  commentId: T:System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: DEM.Net.Lib.Services.Lab.UtilitairesServices.GethCodeGeogObjet*
  commentId: Overload:DEM.Net.Lib.Services.Lab.UtilitairesServices.GethCodeGeogObjet
  name: GethCodeGeogObjet
  nameWithType: UtilitairesServices.GethCodeGeogObjet
  fullName: DEM.Net.Lib.Services.Lab.UtilitairesServices.GethCodeGeogObjet
- uid: DEM.Net.Lib.Services.Lab.IUtilitairesServices.GethCodeGeogObjet(System.Collections.Generic.List{System.Double[]},System.Int32,System.Char)
  commentId: M:DEM.Net.Lib.Services.Lab.IUtilitairesServices.GethCodeGeogObjet(System.Collections.Generic.List{System.Double[]},System.Int32,System.Char)
  parent: DEM.Net.Lib.Services.Lab.IUtilitairesServices
  isExternal: true
  name: GethCodeGeogObjet(List<Double[]>, Int32, Char)
  nameWithType: IUtilitairesServices.GethCodeGeogObjet(List<Double[]>, Int32, Char)
  fullName: DEM.Net.Lib.Services.Lab.IUtilitairesServices.GethCodeGeogObjet(System.Collections.Generic.List<System.Double[]>, System.Int32, System.Char)
  nameWithType.vb: IUtilitairesServices.GethCodeGeogObjet(List(Of Double()), Int32, Char)
  fullName.vb: DEM.Net.Lib.Services.Lab.IUtilitairesServices.GethCodeGeogObjet(System.Collections.Generic.List(Of System.Double()), System.Int32, System.Char)
  name.vb: GethCodeGeogObjet(List(Of Double()), Int32, Char)
  spec.csharp:
  - uid: DEM.Net.Lib.Services.Lab.IUtilitairesServices.GethCodeGeogObjet(System.Collections.Generic.List{System.Double[]},System.Int32,System.Char)
    name: GethCodeGeogObjet
    nameWithType: IUtilitairesServices.GethCodeGeogObjet
    fullName: DEM.Net.Lib.Services.Lab.IUtilitairesServices.GethCodeGeogObjet
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DEM.Net.Lib.Services.Lab.IUtilitairesServices.GethCodeGeogObjet(System.Collections.Generic.List{System.Double[]},System.Int32,System.Char)
    name: GethCodeGeogObjet
    nameWithType: IUtilitairesServices.GethCodeGeogObjet
    fullName: DEM.Net.Lib.Services.Lab.IUtilitairesServices.GethCodeGeogObjet
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{System.Double[]}
  commentId: T:System.Collections.Generic.List{System.Double[]}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Double[]>
  nameWithType: List<Double[]>
  fullName: System.Collections.Generic.List<System.Double[]>
  nameWithType.vb: List(Of Double())
  fullName.vb: System.Collections.Generic.List(Of System.Double())
  name.vb: List(Of Double())
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: DEM.Net.Lib.Services.Lab.UtilitairesServices.GethCodeGeogSegment*
  commentId: Overload:DEM.Net.Lib.Services.Lab.UtilitairesServices.GethCodeGeogSegment
  name: GethCodeGeogSegment
  nameWithType: UtilitairesServices.GethCodeGeogSegment
  fullName: DEM.Net.Lib.Services.Lab.UtilitairesServices.GethCodeGeogSegment
- uid: DEM.Net.Lib.Services.Lab.IUtilitairesServices.GethCodeGeogSegment(System.Double[],System.Double[],System.Int32,System.Char)
  commentId: M:DEM.Net.Lib.Services.Lab.IUtilitairesServices.GethCodeGeogSegment(System.Double[],System.Double[],System.Int32,System.Char)
  parent: DEM.Net.Lib.Services.Lab.IUtilitairesServices
  isExternal: true
  name: GethCodeGeogSegment(Double[], Double[], Int32, Char)
  nameWithType: IUtilitairesServices.GethCodeGeogSegment(Double[], Double[], Int32, Char)
  fullName: DEM.Net.Lib.Services.Lab.IUtilitairesServices.GethCodeGeogSegment(System.Double[], System.Double[], System.Int32, System.Char)
  nameWithType.vb: IUtilitairesServices.GethCodeGeogSegment(Double(), Double(), Int32, Char)
  fullName.vb: DEM.Net.Lib.Services.Lab.IUtilitairesServices.GethCodeGeogSegment(System.Double(), System.Double(), System.Int32, System.Char)
  name.vb: GethCodeGeogSegment(Double(), Double(), Int32, Char)
  spec.csharp:
  - uid: DEM.Net.Lib.Services.Lab.IUtilitairesServices.GethCodeGeogSegment(System.Double[],System.Double[],System.Int32,System.Char)
    name: GethCodeGeogSegment
    nameWithType: IUtilitairesServices.GethCodeGeogSegment
    fullName: DEM.Net.Lib.Services.Lab.IUtilitairesServices.GethCodeGeogSegment
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DEM.Net.Lib.Services.Lab.IUtilitairesServices.GethCodeGeogSegment(System.Double[],System.Double[],System.Int32,System.Char)
    name: GethCodeGeogSegment
    nameWithType: IUtilitairesServices.GethCodeGeogSegment
    fullName: DEM.Net.Lib.Services.Lab.IUtilitairesServices.GethCodeGeogSegment
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DEM.Net.Lib.Services.Lab.UtilitairesServices.GetGeometryArc*
  commentId: Overload:DEM.Net.Lib.Services.Lab.UtilitairesServices.GetGeometryArc
  name: GetGeometryArc
  nameWithType: UtilitairesServices.GetGeometryArc
  fullName: DEM.Net.Lib.Services.Lab.UtilitairesServices.GetGeometryArc
- uid: DEM.Net.Lib.Services.Lab.IUtilitairesServices.GetGeometryArc(DEM.Net.Lib.Services.Lab.BeanArc_internal,System.Boolean)
  commentId: M:DEM.Net.Lib.Services.Lab.IUtilitairesServices.GetGeometryArc(DEM.Net.Lib.Services.Lab.BeanArc_internal,System.Boolean)
  parent: DEM.Net.Lib.Services.Lab.IUtilitairesServices
  isExternal: true
  name: GetGeometryArc(BeanArc_internal, Boolean)
  nameWithType: IUtilitairesServices.GetGeometryArc(BeanArc_internal, Boolean)
  fullName: DEM.Net.Lib.Services.Lab.IUtilitairesServices.GetGeometryArc(DEM.Net.Lib.Services.Lab.BeanArc_internal, System.Boolean)
  spec.csharp:
  - uid: DEM.Net.Lib.Services.Lab.IUtilitairesServices.GetGeometryArc(DEM.Net.Lib.Services.Lab.BeanArc_internal,System.Boolean)
    name: GetGeometryArc
    nameWithType: IUtilitairesServices.GetGeometryArc
    fullName: DEM.Net.Lib.Services.Lab.IUtilitairesServices.GetGeometryArc
  - name: (
    nameWithType: (
    fullName: (
  - uid: DEM.Net.Lib.Services.Lab.BeanArc_internal
    name: BeanArc_internal
    nameWithType: BeanArc_internal
    fullName: DEM.Net.Lib.Services.Lab.BeanArc_internal
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DEM.Net.Lib.Services.Lab.IUtilitairesServices.GetGeometryArc(DEM.Net.Lib.Services.Lab.BeanArc_internal,System.Boolean)
    name: GetGeometryArc
    nameWithType: IUtilitairesServices.GetGeometryArc
    fullName: DEM.Net.Lib.Services.Lab.IUtilitairesServices.GetGeometryArc
  - name: (
    nameWithType: (
    fullName: (
  - uid: DEM.Net.Lib.Services.Lab.BeanArc_internal
    name: BeanArc_internal
    nameWithType: BeanArc_internal
    fullName: DEM.Net.Lib.Services.Lab.BeanArc_internal
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DEM.Net.Lib.Services.Lab.BeanArc_internal
  commentId: T:DEM.Net.Lib.Services.Lab.BeanArc_internal
  parent: DEM.Net.Lib.Services.Lab
  name: BeanArc_internal
  nameWithType: BeanArc_internal
  fullName: DEM.Net.Lib.Services.Lab.BeanArc_internal
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: GeoAPI.Geometries.IGeometry
  commentId: T:GeoAPI.Geometries.IGeometry
  parent: GeoAPI.Geometries
  isExternal: true
  name: IGeometry
  nameWithType: IGeometry
  fullName: GeoAPI.Geometries.IGeometry
- uid: GeoAPI.Geometries
  commentId: N:GeoAPI.Geometries
  isExternal: true
  name: GeoAPI.Geometries
  nameWithType: GeoAPI.Geometries
  fullName: GeoAPI.Geometries
- uid: DEM.Net.Lib.Services.Lab.UtilitairesServices.GetGeometryLine*
  commentId: Overload:DEM.Net.Lib.Services.Lab.UtilitairesServices.GetGeometryLine
  name: GetGeometryLine
  nameWithType: UtilitairesServices.GetGeometryLine
  fullName: DEM.Net.Lib.Services.Lab.UtilitairesServices.GetGeometryLine
- uid: DEM.Net.Lib.Services.Lab.IUtilitairesServices.GetGeometryLine(System.Double[],System.Double[],System.Int32,System.Boolean)
  commentId: M:DEM.Net.Lib.Services.Lab.IUtilitairesServices.GetGeometryLine(System.Double[],System.Double[],System.Int32,System.Boolean)
  parent: DEM.Net.Lib.Services.Lab.IUtilitairesServices
  isExternal: true
  name: GetGeometryLine(Double[], Double[], Int32, Boolean)
  nameWithType: IUtilitairesServices.GetGeometryLine(Double[], Double[], Int32, Boolean)
  fullName: DEM.Net.Lib.Services.Lab.IUtilitairesServices.GetGeometryLine(System.Double[], System.Double[], System.Int32, System.Boolean)
  nameWithType.vb: IUtilitairesServices.GetGeometryLine(Double(), Double(), Int32, Boolean)
  fullName.vb: DEM.Net.Lib.Services.Lab.IUtilitairesServices.GetGeometryLine(System.Double(), System.Double(), System.Int32, System.Boolean)
  name.vb: GetGeometryLine(Double(), Double(), Int32, Boolean)
  spec.csharp:
  - uid: DEM.Net.Lib.Services.Lab.IUtilitairesServices.GetGeometryLine(System.Double[],System.Double[],System.Int32,System.Boolean)
    name: GetGeometryLine
    nameWithType: IUtilitairesServices.GetGeometryLine
    fullName: DEM.Net.Lib.Services.Lab.IUtilitairesServices.GetGeometryLine
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DEM.Net.Lib.Services.Lab.IUtilitairesServices.GetGeometryLine(System.Double[],System.Double[],System.Int32,System.Boolean)
    name: GetGeometryLine
    nameWithType: IUtilitairesServices.GetGeometryLine
    fullName: DEM.Net.Lib.Services.Lab.IUtilitairesServices.GetGeometryLine
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DEM.Net.Lib.Services.Lab.UtilitairesServices.GetGeometryPolygon*
  commentId: Overload:DEM.Net.Lib.Services.Lab.UtilitairesServices.GetGeometryPolygon
  name: GetGeometryPolygon
  nameWithType: UtilitairesServices.GetGeometryPolygon
  fullName: DEM.Net.Lib.Services.Lab.UtilitairesServices.GetGeometryPolygon
- uid: DEM.Net.Lib.Services.Lab.IUtilitairesServices.GetGeometryPolygon(System.Collections.Generic.List{System.Double[]},System.Int32)
  commentId: M:DEM.Net.Lib.Services.Lab.IUtilitairesServices.GetGeometryPolygon(System.Collections.Generic.List{System.Double[]},System.Int32)
  parent: DEM.Net.Lib.Services.Lab.IUtilitairesServices
  isExternal: true
  name: GetGeometryPolygon(List<Double[]>, Int32)
  nameWithType: IUtilitairesServices.GetGeometryPolygon(List<Double[]>, Int32)
  fullName: DEM.Net.Lib.Services.Lab.IUtilitairesServices.GetGeometryPolygon(System.Collections.Generic.List<System.Double[]>, System.Int32)
  nameWithType.vb: IUtilitairesServices.GetGeometryPolygon(List(Of Double()), Int32)
  fullName.vb: DEM.Net.Lib.Services.Lab.IUtilitairesServices.GetGeometryPolygon(System.Collections.Generic.List(Of System.Double()), System.Int32)
  name.vb: GetGeometryPolygon(List(Of Double()), Int32)
  spec.csharp:
  - uid: DEM.Net.Lib.Services.Lab.IUtilitairesServices.GetGeometryPolygon(System.Collections.Generic.List{System.Double[]},System.Int32)
    name: GetGeometryPolygon
    nameWithType: IUtilitairesServices.GetGeometryPolygon
    fullName: DEM.Net.Lib.Services.Lab.IUtilitairesServices.GetGeometryPolygon
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DEM.Net.Lib.Services.Lab.IUtilitairesServices.GetGeometryPolygon(System.Collections.Generic.List{System.Double[]},System.Int32)
    name: GetGeometryPolygon
    nameWithType: IUtilitairesServices.GetGeometryPolygon
    fullName: DEM.Net.Lib.Services.Lab.IUtilitairesServices.GetGeometryPolygon
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
