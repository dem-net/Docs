### YamlMime:ManagedReference
items:
- uid: DEM.Net.Lib.DemFileReport
  commentId: T:DEM.Net.Lib.DemFileReport
  id: DemFileReport
  parent: DEM.Net.Lib
  children:
  - DEM.Net.Lib.DemFileReport.IsExistingLocally
  - DEM.Net.Lib.DemFileReport.IsMetadataGenerated
  - DEM.Net.Lib.DemFileReport.LocalName
  - DEM.Net.Lib.DemFileReport.LocalZipName
  - DEM.Net.Lib.DemFileReport.Source
  - DEM.Net.Lib.DemFileReport.URL
  langs:
  - csharp
  - vb
  name: DemFileReport
  nameWithType: DemFileReport
  fullName: DEM.Net.Lib.DemFileReport
  type: Class
  source:
    remote:
      path: DEM.Net.Lib/Model/DemFileReport.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: DemFileReport
    path: ../DEM.Net.Lib/Model/DemFileReport.cs
    startLine: 8
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib
  syntax:
    content: public class DemFileReport
    content.vb: Public Class DemFileReport
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: DEM.Net.Lib.DemFileReport.URL
  commentId: P:DEM.Net.Lib.DemFileReport.URL
  id: URL
  parent: DEM.Net.Lib.DemFileReport
  langs:
  - csharp
  - vb
  name: URL
  nameWithType: DemFileReport.URL
  fullName: DEM.Net.Lib.DemFileReport.URL
  type: Property
  source:
    remote:
      path: DEM.Net.Lib/Model/DemFileReport.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: URL
    path: ../DEM.Net.Lib/Model/DemFileReport.cs
    startLine: 11
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib
  syntax:
    content: public string URL { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property URL As String
  overload: DEM.Net.Lib.DemFileReport.URL*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: DEM.Net.Lib.DemFileReport.LocalName
  commentId: P:DEM.Net.Lib.DemFileReport.LocalName
  id: LocalName
  parent: DEM.Net.Lib.DemFileReport
  langs:
  - csharp
  - vb
  name: LocalName
  nameWithType: DemFileReport.LocalName
  fullName: DEM.Net.Lib.DemFileReport.LocalName
  type: Property
  source:
    remote:
      path: DEM.Net.Lib/Model/DemFileReport.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: LocalName
    path: ../DEM.Net.Lib/Model/DemFileReport.cs
    startLine: 12
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib
  syntax:
    content: public string LocalName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property LocalName As String
  overload: DEM.Net.Lib.DemFileReport.LocalName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: DEM.Net.Lib.DemFileReport.LocalZipName
  commentId: P:DEM.Net.Lib.DemFileReport.LocalZipName
  id: LocalZipName
  parent: DEM.Net.Lib.DemFileReport
  langs:
  - csharp
  - vb
  name: LocalZipName
  nameWithType: DemFileReport.LocalZipName
  fullName: DEM.Net.Lib.DemFileReport.LocalZipName
  type: Property
  source:
    remote:
      path: DEM.Net.Lib/Model/DemFileReport.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: LocalZipName
    path: ../DEM.Net.Lib/Model/DemFileReport.cs
    startLine: 13
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib
  syntax:
    content: public string LocalZipName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property LocalZipName As String
  overload: DEM.Net.Lib.DemFileReport.LocalZipName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: DEM.Net.Lib.DemFileReport.IsExistingLocally
  commentId: P:DEM.Net.Lib.DemFileReport.IsExistingLocally
  id: IsExistingLocally
  parent: DEM.Net.Lib.DemFileReport
  langs:
  - csharp
  - vb
  name: IsExistingLocally
  nameWithType: DemFileReport.IsExistingLocally
  fullName: DEM.Net.Lib.DemFileReport.IsExistingLocally
  type: Property
  source:
    remote:
      path: DEM.Net.Lib/Model/DemFileReport.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: IsExistingLocally
    path: ../DEM.Net.Lib/Model/DemFileReport.cs
    startLine: 15
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib
  syntax:
    content: public bool IsExistingLocally { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsExistingLocally As Boolean
  overload: DEM.Net.Lib.DemFileReport.IsExistingLocally*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: DEM.Net.Lib.DemFileReport.Source
  commentId: P:DEM.Net.Lib.DemFileReport.Source
  id: Source
  parent: DEM.Net.Lib.DemFileReport
  langs:
  - csharp
  - vb
  name: Source
  nameWithType: DemFileReport.Source
  fullName: DEM.Net.Lib.DemFileReport.Source
  type: Property
  source:
    remote:
      path: DEM.Net.Lib/Model/DemFileReport.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: Source
    path: ../DEM.Net.Lib/Model/DemFileReport.cs
    startLine: 16
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib
  syntax:
    content: public GDALSource Source { get; }
    parameters: []
    return:
      type: DEM.Net.Lib.GDALSource
    content.vb: Public ReadOnly Property Source As GDALSource
  overload: DEM.Net.Lib.DemFileReport.Source*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: DEM.Net.Lib.DemFileReport.IsMetadataGenerated
  commentId: P:DEM.Net.Lib.DemFileReport.IsMetadataGenerated
  id: IsMetadataGenerated
  parent: DEM.Net.Lib.DemFileReport
  langs:
  - csharp
  - vb
  name: IsMetadataGenerated
  nameWithType: DemFileReport.IsMetadataGenerated
  fullName: DEM.Net.Lib.DemFileReport.IsMetadataGenerated
  type: Property
  source:
    remote:
      path: DEM.Net.Lib/Model/DemFileReport.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: IsMetadataGenerated
    path: ../DEM.Net.Lib/Model/DemFileReport.cs
    startLine: 17
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib
  syntax:
    content: public bool IsMetadataGenerated { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsMetadataGenerated As Boolean
  overload: DEM.Net.Lib.DemFileReport.IsMetadataGenerated*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: DEM.Net.Lib
  commentId: N:DEM.Net.Lib
  name: DEM.Net.Lib
  nameWithType: DEM.Net.Lib
  fullName: DEM.Net.Lib
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: DEM.Net.Lib.DemFileReport.URL*
  commentId: Overload:DEM.Net.Lib.DemFileReport.URL
  name: URL
  nameWithType: DemFileReport.URL
  fullName: DEM.Net.Lib.DemFileReport.URL
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: DEM.Net.Lib.DemFileReport.LocalName*
  commentId: Overload:DEM.Net.Lib.DemFileReport.LocalName
  name: LocalName
  nameWithType: DemFileReport.LocalName
  fullName: DEM.Net.Lib.DemFileReport.LocalName
- uid: DEM.Net.Lib.DemFileReport.LocalZipName*
  commentId: Overload:DEM.Net.Lib.DemFileReport.LocalZipName
  name: LocalZipName
  nameWithType: DemFileReport.LocalZipName
  fullName: DEM.Net.Lib.DemFileReport.LocalZipName
- uid: DEM.Net.Lib.DemFileReport.IsExistingLocally*
  commentId: Overload:DEM.Net.Lib.DemFileReport.IsExistingLocally
  name: IsExistingLocally
  nameWithType: DemFileReport.IsExistingLocally
  fullName: DEM.Net.Lib.DemFileReport.IsExistingLocally
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: DEM.Net.Lib.DemFileReport.Source*
  commentId: Overload:DEM.Net.Lib.DemFileReport.Source
  name: Source
  nameWithType: DemFileReport.Source
  fullName: DEM.Net.Lib.DemFileReport.Source
- uid: DEM.Net.Lib.GDALSource
  commentId: T:DEM.Net.Lib.GDALSource
  parent: DEM.Net.Lib
  name: GDALSource
  nameWithType: GDALSource
  fullName: DEM.Net.Lib.GDALSource
- uid: DEM.Net.Lib.DemFileReport.IsMetadataGenerated*
  commentId: Overload:DEM.Net.Lib.DemFileReport.IsMetadataGenerated
  name: IsMetadataGenerated
  nameWithType: DemFileReport.IsMetadataGenerated
  fullName: DEM.Net.Lib.DemFileReport.IsMetadataGenerated
