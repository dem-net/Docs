### YamlMime:ManagedReference
items:
- uid: DEM.Net.Lib.ElevationMetrics
  commentId: T:DEM.Net.Lib.ElevationMetrics
  id: ElevationMetrics
  parent: DEM.Net.Lib
  children:
  - DEM.Net.Lib.ElevationMetrics.Climb
  - DEM.Net.Lib.ElevationMetrics.Descent
  - DEM.Net.Lib.ElevationMetrics.Distance
  - DEM.Net.Lib.ElevationMetrics.MaxElevation
  - DEM.Net.Lib.ElevationMetrics.MinElevation
  - DEM.Net.Lib.ElevationMetrics.NumPoints
  langs:
  - csharp
  - vb
  name: ElevationMetrics
  nameWithType: ElevationMetrics
  fullName: DEM.Net.Lib.ElevationMetrics
  type: Class
  source:
    remote:
      path: DEM.Net.Lib/Model/ElevationMetrics.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: ElevationMetrics
    path: ../DEM.Net.Lib/Model/ElevationMetrics.cs
    startLine: 2
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib
  syntax:
    content: public class ElevationMetrics
    content.vb: Public Class ElevationMetrics
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: DEM.Net.Lib.ElevationMetrics.MinElevation
  commentId: P:DEM.Net.Lib.ElevationMetrics.MinElevation
  id: MinElevation
  parent: DEM.Net.Lib.ElevationMetrics
  langs:
  - csharp
  - vb
  name: MinElevation
  nameWithType: ElevationMetrics.MinElevation
  fullName: DEM.Net.Lib.ElevationMetrics.MinElevation
  type: Property
  source:
    remote:
      path: DEM.Net.Lib/Model/ElevationMetrics.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: MinElevation
    path: ../DEM.Net.Lib/Model/ElevationMetrics.cs
    startLine: 4
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib
  syntax:
    content: public double MinElevation { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property MinElevation As Double
  overload: DEM.Net.Lib.ElevationMetrics.MinElevation*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: DEM.Net.Lib.ElevationMetrics.MaxElevation
  commentId: P:DEM.Net.Lib.ElevationMetrics.MaxElevation
  id: MaxElevation
  parent: DEM.Net.Lib.ElevationMetrics
  langs:
  - csharp
  - vb
  name: MaxElevation
  nameWithType: ElevationMetrics.MaxElevation
  fullName: DEM.Net.Lib.ElevationMetrics.MaxElevation
  type: Property
  source:
    remote:
      path: DEM.Net.Lib/Model/ElevationMetrics.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: MaxElevation
    path: ../DEM.Net.Lib/Model/ElevationMetrics.cs
    startLine: 5
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib
  syntax:
    content: public double MaxElevation { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property MaxElevation As Double
  overload: DEM.Net.Lib.ElevationMetrics.MaxElevation*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: DEM.Net.Lib.ElevationMetrics.Distance
  commentId: P:DEM.Net.Lib.ElevationMetrics.Distance
  id: Distance
  parent: DEM.Net.Lib.ElevationMetrics
  langs:
  - csharp
  - vb
  name: Distance
  nameWithType: ElevationMetrics.Distance
  fullName: DEM.Net.Lib.ElevationMetrics.Distance
  type: Property
  source:
    remote:
      path: DEM.Net.Lib/Model/ElevationMetrics.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: Distance
    path: ../DEM.Net.Lib/Model/ElevationMetrics.cs
    startLine: 6
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib
  syntax:
    content: public double Distance { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property Distance As Double
  overload: DEM.Net.Lib.ElevationMetrics.Distance*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: DEM.Net.Lib.ElevationMetrics.NumPoints
  commentId: P:DEM.Net.Lib.ElevationMetrics.NumPoints
  id: NumPoints
  parent: DEM.Net.Lib.ElevationMetrics
  langs:
  - csharp
  - vb
  name: NumPoints
  nameWithType: ElevationMetrics.NumPoints
  fullName: DEM.Net.Lib.ElevationMetrics.NumPoints
  type: Property
  source:
    remote:
      path: DEM.Net.Lib/Model/ElevationMetrics.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: NumPoints
    path: ../DEM.Net.Lib/Model/ElevationMetrics.cs
    startLine: 7
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib
  syntax:
    content: public int NumPoints { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property NumPoints As Integer
  overload: DEM.Net.Lib.ElevationMetrics.NumPoints*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: DEM.Net.Lib.ElevationMetrics.Climb
  commentId: P:DEM.Net.Lib.ElevationMetrics.Climb
  id: Climb
  parent: DEM.Net.Lib.ElevationMetrics
  langs:
  - csharp
  - vb
  name: Climb
  nameWithType: ElevationMetrics.Climb
  fullName: DEM.Net.Lib.ElevationMetrics.Climb
  type: Property
  source:
    remote:
      path: DEM.Net.Lib/Model/ElevationMetrics.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: Climb
    path: ../DEM.Net.Lib/Model/ElevationMetrics.cs
    startLine: 8
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib
  syntax:
    content: public double Climb { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property Climb As Double
  overload: DEM.Net.Lib.ElevationMetrics.Climb*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: DEM.Net.Lib.ElevationMetrics.Descent
  commentId: P:DEM.Net.Lib.ElevationMetrics.Descent
  id: Descent
  parent: DEM.Net.Lib.ElevationMetrics
  langs:
  - csharp
  - vb
  name: Descent
  nameWithType: ElevationMetrics.Descent
  fullName: DEM.Net.Lib.ElevationMetrics.Descent
  type: Property
  source:
    remote:
      path: DEM.Net.Lib/Model/ElevationMetrics.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: Descent
    path: ../DEM.Net.Lib/Model/ElevationMetrics.cs
    startLine: 9
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib
  syntax:
    content: public double Descent { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property Descent As Double
  overload: DEM.Net.Lib.ElevationMetrics.Descent*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: DEM.Net.Lib
  commentId: N:DEM.Net.Lib
  name: DEM.Net.Lib
  nameWithType: DEM.Net.Lib
  fullName: DEM.Net.Lib
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: DEM.Net.Lib.ElevationMetrics.MinElevation*
  commentId: Overload:DEM.Net.Lib.ElevationMetrics.MinElevation
  name: MinElevation
  nameWithType: ElevationMetrics.MinElevation
  fullName: DEM.Net.Lib.ElevationMetrics.MinElevation
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: DEM.Net.Lib.ElevationMetrics.MaxElevation*
  commentId: Overload:DEM.Net.Lib.ElevationMetrics.MaxElevation
  name: MaxElevation
  nameWithType: ElevationMetrics.MaxElevation
  fullName: DEM.Net.Lib.ElevationMetrics.MaxElevation
- uid: DEM.Net.Lib.ElevationMetrics.Distance*
  commentId: Overload:DEM.Net.Lib.ElevationMetrics.Distance
  name: Distance
  nameWithType: ElevationMetrics.Distance
  fullName: DEM.Net.Lib.ElevationMetrics.Distance
- uid: DEM.Net.Lib.ElevationMetrics.NumPoints*
  commentId: Overload:DEM.Net.Lib.ElevationMetrics.NumPoints
  name: NumPoints
  nameWithType: ElevationMetrics.NumPoints
  fullName: DEM.Net.Lib.ElevationMetrics.NumPoints
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: DEM.Net.Lib.ElevationMetrics.Climb*
  commentId: Overload:DEM.Net.Lib.ElevationMetrics.Climb
  name: Climb
  nameWithType: ElevationMetrics.Climb
  fullName: DEM.Net.Lib.ElevationMetrics.Climb
- uid: DEM.Net.Lib.ElevationMetrics.Descent*
  commentId: Overload:DEM.Net.Lib.ElevationMetrics.Descent
  name: Descent
  nameWithType: ElevationMetrics.Descent
  fullName: DEM.Net.Lib.ElevationMetrics.Descent
