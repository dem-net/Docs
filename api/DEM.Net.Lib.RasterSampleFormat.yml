### YamlMime:ManagedReference
items:
- uid: DEM.Net.Lib.RasterSampleFormat
  commentId: T:DEM.Net.Lib.RasterSampleFormat
  id: RasterSampleFormat
  parent: DEM.Net.Lib
  children:
  - DEM.Net.Lib.RasterSampleFormat.FLOATING_POINT
  - DEM.Net.Lib.RasterSampleFormat.INTEGER
  - DEM.Net.Lib.RasterSampleFormat.UNSIGNED_INTEGER
  langs:
  - csharp
  - vb
  name: RasterSampleFormat
  nameWithType: RasterSampleFormat
  fullName: DEM.Net.Lib.RasterSampleFormat
  type: Class
  source:
    remote:
      path: DEM.Net.Lib/Services/Raster/RasterSampleFormat.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: RasterSampleFormat
    path: ../DEM.Net.Lib/Services/Raster/RasterSampleFormat.cs
    startLine: 8
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib
  syntax:
    content: public static class RasterSampleFormat
    content.vb: Public Module RasterSampleFormat
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: DEM.Net.Lib.RasterSampleFormat.FLOATING_POINT
  commentId: F:DEM.Net.Lib.RasterSampleFormat.FLOATING_POINT
  id: FLOATING_POINT
  parent: DEM.Net.Lib.RasterSampleFormat
  langs:
  - csharp
  - vb
  name: FLOATING_POINT
  nameWithType: RasterSampleFormat.FLOATING_POINT
  fullName: DEM.Net.Lib.RasterSampleFormat.FLOATING_POINT
  type: Field
  source:
    remote:
      path: DEM.Net.Lib/Services/Raster/RasterSampleFormat.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: FLOATING_POINT
    path: ../DEM.Net.Lib/Services/Raster/RasterSampleFormat.cs
    startLine: 10
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib
  syntax:
    content: public const string FLOATING_POINT = "IEEEFP"
    return:
      type: System.String
    content.vb: Public Const FLOATING_POINT As String = "IEEEFP"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: DEM.Net.Lib.RasterSampleFormat.INTEGER
  commentId: F:DEM.Net.Lib.RasterSampleFormat.INTEGER
  id: INTEGER
  parent: DEM.Net.Lib.RasterSampleFormat
  langs:
  - csharp
  - vb
  name: INTEGER
  nameWithType: RasterSampleFormat.INTEGER
  fullName: DEM.Net.Lib.RasterSampleFormat.INTEGER
  type: Field
  source:
    remote:
      path: DEM.Net.Lib/Services/Raster/RasterSampleFormat.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: INTEGER
    path: ../DEM.Net.Lib/Services/Raster/RasterSampleFormat.cs
    startLine: 11
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib
  syntax:
    content: public const string INTEGER = "INT"
    return:
      type: System.String
    content.vb: Public Const INTEGER As String = "INT"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: DEM.Net.Lib.RasterSampleFormat.UNSIGNED_INTEGER
  commentId: F:DEM.Net.Lib.RasterSampleFormat.UNSIGNED_INTEGER
  id: UNSIGNED_INTEGER
  parent: DEM.Net.Lib.RasterSampleFormat
  langs:
  - csharp
  - vb
  name: UNSIGNED_INTEGER
  nameWithType: RasterSampleFormat.UNSIGNED_INTEGER
  fullName: DEM.Net.Lib.RasterSampleFormat.UNSIGNED_INTEGER
  type: Field
  source:
    remote:
      path: DEM.Net.Lib/Services/Raster/RasterSampleFormat.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: UNSIGNED_INTEGER
    path: ../DEM.Net.Lib/Services/Raster/RasterSampleFormat.cs
    startLine: 12
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib
  syntax:
    content: public const string UNSIGNED_INTEGER = "UINT"
    return:
      type: System.String
    content.vb: Public Const UNSIGNED_INTEGER As String = "UINT"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: DEM.Net.Lib
  commentId: N:DEM.Net.Lib
  name: DEM.Net.Lib
  nameWithType: DEM.Net.Lib
  fullName: DEM.Net.Lib
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
