### YamlMime:ManagedReference
items:
- uid: DEM.Net.Lib.HGTFile
  commentId: T:DEM.Net.Lib.HGTFile
  id: HGTFile
  parent: DEM.Net.Lib
  children:
  - DEM.Net.Lib.HGTFile.#ctor(System.String)
  - DEM.Net.Lib.HGTFile.Dispose
  - DEM.Net.Lib.HGTFile.Dispose(System.Boolean)
  - DEM.Net.Lib.HGTFile.GetElevationAtPoint(DEM.Net.Lib.FileMetadata,System.Int32,System.Int32)
  - DEM.Net.Lib.HGTFile.GetHeightMap(DEM.Net.Lib.FileMetadata)
  - DEM.Net.Lib.HGTFile.GetHeightMapInBBox(DEM.Net.Lib.BoundingBox,DEM.Net.Lib.FileMetadata,System.Single)
  - DEM.Net.Lib.HGTFile.HGT1201
  - DEM.Net.Lib.HGTFile.HGT3601
  - DEM.Net.Lib.HGTFile.ParseMetaData
  langs:
  - csharp
  - vb
  name: HGTFile
  nameWithType: HGTFile
  fullName: DEM.Net.Lib.HGTFile
  type: Class
  source:
    remote:
      path: DEM.Net.Lib/IO/Raster/HGTFile.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: HGTFile
    path: ../DEM.Net.Lib/IO/Raster/HGTFile.cs
    startLine: 16
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib
  summary: "\nSRTM height file\nhttps://wiki.openstreetmap.org/wiki/SRTM\n\nOfficial documentation : https://dds.cr.usgs.gov/srtm/version2_1/Documentation/SRTM_Topo.pdf\n"
  example: []
  syntax:
    content: 'public class HGTFile : IRasterFile, IDisposable'
    content.vb: >-
      Public Class HGTFile
          Implements IRasterFile, IDisposable
  inheritance:
  - System.Object
  implements:
  - DEM.Net.Lib.IRasterFile
  - System.IDisposable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: DEM.Net.Lib.HGTFile.HGT3601
  commentId: F:DEM.Net.Lib.HGTFile.HGT3601
  id: HGT3601
  parent: DEM.Net.Lib.HGTFile
  langs:
  - csharp
  - vb
  name: HGT3601
  nameWithType: HGTFile.HGT3601
  fullName: DEM.Net.Lib.HGTFile.HGT3601
  type: Field
  source:
    remote:
      path: DEM.Net.Lib/IO/Raster/HGTFile.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: HGT3601
    path: ../DEM.Net.Lib/IO/Raster/HGTFile.cs
    startLine: 18
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib
  syntax:
    content: public const int HGT3601 = 25934402
    return:
      type: System.Int32
    content.vb: Public Const HGT3601 As Integer = 25934402
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: DEM.Net.Lib.HGTFile.HGT1201
  commentId: F:DEM.Net.Lib.HGTFile.HGT1201
  id: HGT1201
  parent: DEM.Net.Lib.HGTFile
  langs:
  - csharp
  - vb
  name: HGT1201
  nameWithType: HGTFile.HGT1201
  fullName: DEM.Net.Lib.HGTFile.HGT1201
  type: Field
  source:
    remote:
      path: DEM.Net.Lib/IO/Raster/HGTFile.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: HGT1201
    path: ../DEM.Net.Lib/IO/Raster/HGTFile.cs
    startLine: 19
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib
  syntax:
    content: public const int HGT1201 = 2884802
    return:
      type: System.Int32
    content.vb: Public Const HGT1201 As Integer = 2884802
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: DEM.Net.Lib.HGTFile.#ctor(System.String)
  commentId: M:DEM.Net.Lib.HGTFile.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: DEM.Net.Lib.HGTFile
  langs:
  - csharp
  - vb
  name: HGTFile(String)
  nameWithType: HGTFile.HGTFile(String)
  fullName: DEM.Net.Lib.HGTFile.HGTFile(System.String)
  type: Constructor
  source:
    remote:
      path: DEM.Net.Lib/IO/Raster/HGTFile.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: .ctor
    path: ../DEM.Net.Lib/IO/Raster/HGTFile.cs
    startLine: 24
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib
  syntax:
    content: public HGTFile(string filename)
    parameters:
    - id: filename
      type: System.String
    content.vb: Public Sub New(filename As String)
  overload: DEM.Net.Lib.HGTFile.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DEM.Net.Lib.HGTFile.GetElevationAtPoint(DEM.Net.Lib.FileMetadata,System.Int32,System.Int32)
  commentId: M:DEM.Net.Lib.HGTFile.GetElevationAtPoint(DEM.Net.Lib.FileMetadata,System.Int32,System.Int32)
  id: GetElevationAtPoint(DEM.Net.Lib.FileMetadata,System.Int32,System.Int32)
  parent: DEM.Net.Lib.HGTFile
  langs:
  - csharp
  - vb
  name: GetElevationAtPoint(FileMetadata, Int32, Int32)
  nameWithType: HGTFile.GetElevationAtPoint(FileMetadata, Int32, Int32)
  fullName: DEM.Net.Lib.HGTFile.GetElevationAtPoint(DEM.Net.Lib.FileMetadata, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: DEM.Net.Lib/IO/Raster/HGTFile.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: GetElevationAtPoint
    path: ../DEM.Net.Lib/IO/Raster/HGTFile.cs
    startLine: 30
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib
  syntax:
    content: public float GetElevationAtPoint(FileMetadata metadata, int x, int y)
    parameters:
    - id: metadata
      type: DEM.Net.Lib.FileMetadata
    - id: x
      type: System.Int32
    - id: y
      type: System.Int32
    return:
      type: System.Single
    content.vb: Public Function GetElevationAtPoint(metadata As FileMetadata, x As Integer, y As Integer) As Single
  overload: DEM.Net.Lib.HGTFile.GetElevationAtPoint*
  implements:
  - DEM.Net.Lib.IRasterFile.GetElevationAtPoint(DEM.Net.Lib.FileMetadata,System.Int32,System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DEM.Net.Lib.HGTFile.ParseMetaData
  commentId: M:DEM.Net.Lib.HGTFile.ParseMetaData
  id: ParseMetaData
  parent: DEM.Net.Lib.HGTFile
  langs:
  - csharp
  - vb
  name: ParseMetaData()
  nameWithType: HGTFile.ParseMetaData()
  fullName: DEM.Net.Lib.HGTFile.ParseMetaData()
  type: Method
  source:
    remote:
      path: DEM.Net.Lib/IO/Raster/HGTFile.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: ParseMetaData
    path: ../DEM.Net.Lib/IO/Raster/HGTFile.cs
    startLine: 96
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib
  syntax:
    content: public FileMetadata ParseMetaData()
    return:
      type: DEM.Net.Lib.FileMetadata
    content.vb: Public Function ParseMetaData As FileMetadata
  overload: DEM.Net.Lib.HGTFile.ParseMetaData*
  implements:
  - DEM.Net.Lib.IRasterFile.ParseMetaData
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DEM.Net.Lib.HGTFile.GetHeightMapInBBox(DEM.Net.Lib.BoundingBox,DEM.Net.Lib.FileMetadata,System.Single)
  commentId: M:DEM.Net.Lib.HGTFile.GetHeightMapInBBox(DEM.Net.Lib.BoundingBox,DEM.Net.Lib.FileMetadata,System.Single)
  id: GetHeightMapInBBox(DEM.Net.Lib.BoundingBox,DEM.Net.Lib.FileMetadata,System.Single)
  parent: DEM.Net.Lib.HGTFile
  langs:
  - csharp
  - vb
  name: GetHeightMapInBBox(BoundingBox, FileMetadata, Single)
  nameWithType: HGTFile.GetHeightMapInBBox(BoundingBox, FileMetadata, Single)
  fullName: DEM.Net.Lib.HGTFile.GetHeightMapInBBox(DEM.Net.Lib.BoundingBox, DEM.Net.Lib.FileMetadata, System.Single)
  type: Method
  source:
    remote:
      path: DEM.Net.Lib/IO/Raster/HGTFile.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: GetHeightMapInBBox
    path: ../DEM.Net.Lib/IO/Raster/HGTFile.cs
    startLine: 135
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib
  syntax:
    content: public HeightMap GetHeightMapInBBox(BoundingBox bbox, FileMetadata metadata, float noDataValue = -3.40282347E+38F)
    parameters:
    - id: bbox
      type: DEM.Net.Lib.BoundingBox
    - id: metadata
      type: DEM.Net.Lib.FileMetadata
    - id: noDataValue
      type: System.Single
    return:
      type: DEM.Net.Lib.HeightMap
    content.vb: Public Function GetHeightMapInBBox(bbox As BoundingBox, metadata As FileMetadata, noDataValue As Single = -3.40282347E+38F) As HeightMap
  overload: DEM.Net.Lib.HGTFile.GetHeightMapInBBox*
  implements:
  - DEM.Net.Lib.IRasterFile.GetHeightMapInBBox(DEM.Net.Lib.BoundingBox,DEM.Net.Lib.FileMetadata,System.Single)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DEM.Net.Lib.HGTFile.GetHeightMap(DEM.Net.Lib.FileMetadata)
  commentId: M:DEM.Net.Lib.HGTFile.GetHeightMap(DEM.Net.Lib.FileMetadata)
  id: GetHeightMap(DEM.Net.Lib.FileMetadata)
  parent: DEM.Net.Lib.HGTFile
  langs:
  - csharp
  - vb
  name: GetHeightMap(FileMetadata)
  nameWithType: HGTFile.GetHeightMap(FileMetadata)
  fullName: DEM.Net.Lib.HGTFile.GetHeightMap(DEM.Net.Lib.FileMetadata)
  type: Method
  source:
    remote:
      path: DEM.Net.Lib/IO/Raster/HGTFile.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: GetHeightMap
    path: ../DEM.Net.Lib/IO/Raster/HGTFile.cs
    startLine: 249
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib
  syntax:
    content: public HeightMap GetHeightMap(FileMetadata metadata)
    parameters:
    - id: metadata
      type: DEM.Net.Lib.FileMetadata
    return:
      type: DEM.Net.Lib.HeightMap
    content.vb: Public Function GetHeightMap(metadata As FileMetadata) As HeightMap
  overload: DEM.Net.Lib.HGTFile.GetHeightMap*
  implements:
  - DEM.Net.Lib.IRasterFile.GetHeightMap(DEM.Net.Lib.FileMetadata)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DEM.Net.Lib.HGTFile.Dispose(System.Boolean)
  commentId: M:DEM.Net.Lib.HGTFile.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: DEM.Net.Lib.HGTFile
  langs:
  - csharp
  - vb
  name: Dispose(Boolean)
  nameWithType: HGTFile.Dispose(Boolean)
  fullName: DEM.Net.Lib.HGTFile.Dispose(System.Boolean)
  type: Method
  source:
    remote:
      path: DEM.Net.Lib/IO/Raster/HGTFile.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: Dispose
    path: ../DEM.Net.Lib/IO/Raster/HGTFile.cs
    startLine: 334
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib
  syntax:
    content: protected virtual void Dispose(bool disposing)
    parameters:
    - id: disposing
      type: System.Boolean
    content.vb: Protected Overridable Sub Dispose(disposing As Boolean)
  overload: DEM.Net.Lib.HGTFile.Dispose*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: DEM.Net.Lib.HGTFile.Dispose
  commentId: M:DEM.Net.Lib.HGTFile.Dispose
  id: Dispose
  parent: DEM.Net.Lib.HGTFile
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: HGTFile.Dispose()
  fullName: DEM.Net.Lib.HGTFile.Dispose()
  type: Method
  source:
    remote:
      path: DEM.Net.Lib/IO/Raster/HGTFile.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: Dispose
    path: ../DEM.Net.Lib/IO/Raster/HGTFile.cs
    startLine: 357
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  overload: DEM.Net.Lib.HGTFile.Dispose*
  implements:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: DEM.Net.Lib
  commentId: N:DEM.Net.Lib
  name: DEM.Net.Lib
  nameWithType: DEM.Net.Lib
  fullName: DEM.Net.Lib
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: DEM.Net.Lib.IRasterFile
  commentId: T:DEM.Net.Lib.IRasterFile
  parent: DEM.Net.Lib
  name: IRasterFile
  nameWithType: IRasterFile
  fullName: DEM.Net.Lib.IRasterFile
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: DEM.Net.Lib.HGTFile.#ctor*
  commentId: Overload:DEM.Net.Lib.HGTFile.#ctor
  name: HGTFile
  nameWithType: HGTFile.HGTFile
  fullName: DEM.Net.Lib.HGTFile.HGTFile
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: DEM.Net.Lib.HGTFile.GetElevationAtPoint*
  commentId: Overload:DEM.Net.Lib.HGTFile.GetElevationAtPoint
  name: GetElevationAtPoint
  nameWithType: HGTFile.GetElevationAtPoint
  fullName: DEM.Net.Lib.HGTFile.GetElevationAtPoint
- uid: DEM.Net.Lib.IRasterFile.GetElevationAtPoint(DEM.Net.Lib.FileMetadata,System.Int32,System.Int32)
  commentId: M:DEM.Net.Lib.IRasterFile.GetElevationAtPoint(DEM.Net.Lib.FileMetadata,System.Int32,System.Int32)
  parent: DEM.Net.Lib.IRasterFile
  isExternal: true
  name: GetElevationAtPoint(FileMetadata, Int32, Int32)
  nameWithType: IRasterFile.GetElevationAtPoint(FileMetadata, Int32, Int32)
  fullName: DEM.Net.Lib.IRasterFile.GetElevationAtPoint(DEM.Net.Lib.FileMetadata, System.Int32, System.Int32)
  spec.csharp:
  - uid: DEM.Net.Lib.IRasterFile.GetElevationAtPoint(DEM.Net.Lib.FileMetadata,System.Int32,System.Int32)
    name: GetElevationAtPoint
    nameWithType: IRasterFile.GetElevationAtPoint
    fullName: DEM.Net.Lib.IRasterFile.GetElevationAtPoint
  - name: (
    nameWithType: (
    fullName: (
  - uid: DEM.Net.Lib.FileMetadata
    name: FileMetadata
    nameWithType: FileMetadata
    fullName: DEM.Net.Lib.FileMetadata
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DEM.Net.Lib.IRasterFile.GetElevationAtPoint(DEM.Net.Lib.FileMetadata,System.Int32,System.Int32)
    name: GetElevationAtPoint
    nameWithType: IRasterFile.GetElevationAtPoint
    fullName: DEM.Net.Lib.IRasterFile.GetElevationAtPoint
  - name: (
    nameWithType: (
    fullName: (
  - uid: DEM.Net.Lib.FileMetadata
    name: FileMetadata
    nameWithType: FileMetadata
    fullName: DEM.Net.Lib.FileMetadata
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DEM.Net.Lib.FileMetadata
  commentId: T:DEM.Net.Lib.FileMetadata
  parent: DEM.Net.Lib
  name: FileMetadata
  nameWithType: FileMetadata
  fullName: DEM.Net.Lib.FileMetadata
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: DEM.Net.Lib.HGTFile.ParseMetaData*
  commentId: Overload:DEM.Net.Lib.HGTFile.ParseMetaData
  name: ParseMetaData
  nameWithType: HGTFile.ParseMetaData
  fullName: DEM.Net.Lib.HGTFile.ParseMetaData
- uid: DEM.Net.Lib.IRasterFile.ParseMetaData
  commentId: M:DEM.Net.Lib.IRasterFile.ParseMetaData
  parent: DEM.Net.Lib.IRasterFile
  name: ParseMetaData()
  nameWithType: IRasterFile.ParseMetaData()
  fullName: DEM.Net.Lib.IRasterFile.ParseMetaData()
  spec.csharp:
  - uid: DEM.Net.Lib.IRasterFile.ParseMetaData
    name: ParseMetaData
    nameWithType: IRasterFile.ParseMetaData
    fullName: DEM.Net.Lib.IRasterFile.ParseMetaData
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DEM.Net.Lib.IRasterFile.ParseMetaData
    name: ParseMetaData
    nameWithType: IRasterFile.ParseMetaData
    fullName: DEM.Net.Lib.IRasterFile.ParseMetaData
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: DEM.Net.Lib.HGTFile.GetHeightMapInBBox*
  commentId: Overload:DEM.Net.Lib.HGTFile.GetHeightMapInBBox
  name: GetHeightMapInBBox
  nameWithType: HGTFile.GetHeightMapInBBox
  fullName: DEM.Net.Lib.HGTFile.GetHeightMapInBBox
- uid: DEM.Net.Lib.IRasterFile.GetHeightMapInBBox(DEM.Net.Lib.BoundingBox,DEM.Net.Lib.FileMetadata,System.Single)
  commentId: M:DEM.Net.Lib.IRasterFile.GetHeightMapInBBox(DEM.Net.Lib.BoundingBox,DEM.Net.Lib.FileMetadata,System.Single)
  parent: DEM.Net.Lib.IRasterFile
  isExternal: true
  name: GetHeightMapInBBox(BoundingBox, FileMetadata, Single)
  nameWithType: IRasterFile.GetHeightMapInBBox(BoundingBox, FileMetadata, Single)
  fullName: DEM.Net.Lib.IRasterFile.GetHeightMapInBBox(DEM.Net.Lib.BoundingBox, DEM.Net.Lib.FileMetadata, System.Single)
  spec.csharp:
  - uid: DEM.Net.Lib.IRasterFile.GetHeightMapInBBox(DEM.Net.Lib.BoundingBox,DEM.Net.Lib.FileMetadata,System.Single)
    name: GetHeightMapInBBox
    nameWithType: IRasterFile.GetHeightMapInBBox
    fullName: DEM.Net.Lib.IRasterFile.GetHeightMapInBBox
  - name: (
    nameWithType: (
    fullName: (
  - uid: DEM.Net.Lib.BoundingBox
    name: BoundingBox
    nameWithType: BoundingBox
    fullName: DEM.Net.Lib.BoundingBox
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DEM.Net.Lib.FileMetadata
    name: FileMetadata
    nameWithType: FileMetadata
    fullName: DEM.Net.Lib.FileMetadata
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DEM.Net.Lib.IRasterFile.GetHeightMapInBBox(DEM.Net.Lib.BoundingBox,DEM.Net.Lib.FileMetadata,System.Single)
    name: GetHeightMapInBBox
    nameWithType: IRasterFile.GetHeightMapInBBox
    fullName: DEM.Net.Lib.IRasterFile.GetHeightMapInBBox
  - name: (
    nameWithType: (
    fullName: (
  - uid: DEM.Net.Lib.BoundingBox
    name: BoundingBox
    nameWithType: BoundingBox
    fullName: DEM.Net.Lib.BoundingBox
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DEM.Net.Lib.FileMetadata
    name: FileMetadata
    nameWithType: FileMetadata
    fullName: DEM.Net.Lib.FileMetadata
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DEM.Net.Lib.BoundingBox
  commentId: T:DEM.Net.Lib.BoundingBox
  parent: DEM.Net.Lib
  name: BoundingBox
  nameWithType: BoundingBox
  fullName: DEM.Net.Lib.BoundingBox
- uid: DEM.Net.Lib.HeightMap
  commentId: T:DEM.Net.Lib.HeightMap
  parent: DEM.Net.Lib
  name: HeightMap
  nameWithType: HeightMap
  fullName: DEM.Net.Lib.HeightMap
- uid: DEM.Net.Lib.HGTFile.GetHeightMap*
  commentId: Overload:DEM.Net.Lib.HGTFile.GetHeightMap
  name: GetHeightMap
  nameWithType: HGTFile.GetHeightMap
  fullName: DEM.Net.Lib.HGTFile.GetHeightMap
- uid: DEM.Net.Lib.IRasterFile.GetHeightMap(DEM.Net.Lib.FileMetadata)
  commentId: M:DEM.Net.Lib.IRasterFile.GetHeightMap(DEM.Net.Lib.FileMetadata)
  parent: DEM.Net.Lib.IRasterFile
  name: GetHeightMap(FileMetadata)
  nameWithType: IRasterFile.GetHeightMap(FileMetadata)
  fullName: DEM.Net.Lib.IRasterFile.GetHeightMap(DEM.Net.Lib.FileMetadata)
  spec.csharp:
  - uid: DEM.Net.Lib.IRasterFile.GetHeightMap(DEM.Net.Lib.FileMetadata)
    name: GetHeightMap
    nameWithType: IRasterFile.GetHeightMap
    fullName: DEM.Net.Lib.IRasterFile.GetHeightMap
  - name: (
    nameWithType: (
    fullName: (
  - uid: DEM.Net.Lib.FileMetadata
    name: FileMetadata
    nameWithType: FileMetadata
    fullName: DEM.Net.Lib.FileMetadata
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DEM.Net.Lib.IRasterFile.GetHeightMap(DEM.Net.Lib.FileMetadata)
    name: GetHeightMap
    nameWithType: IRasterFile.GetHeightMap
    fullName: DEM.Net.Lib.IRasterFile.GetHeightMap
  - name: (
    nameWithType: (
    fullName: (
  - uid: DEM.Net.Lib.FileMetadata
    name: FileMetadata
    nameWithType: FileMetadata
    fullName: DEM.Net.Lib.FileMetadata
  - name: )
    nameWithType: )
    fullName: )
- uid: DEM.Net.Lib.HGTFile.Dispose*
  commentId: Overload:DEM.Net.Lib.HGTFile.Dispose
  name: Dispose
  nameWithType: HGTFile.Dispose
  fullName: DEM.Net.Lib.HGTFile.Dispose
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
