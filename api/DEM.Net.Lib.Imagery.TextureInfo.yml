### YamlMime:ManagedReference
items:
- uid: DEM.Net.Lib.Imagery.TextureInfo
  commentId: T:DEM.Net.Lib.Imagery.TextureInfo
  id: TextureInfo
  parent: DEM.Net.Lib.Imagery
  children:
  - DEM.Net.Lib.Imagery.TextureInfo.#ctor(System.String,DEM.Net.Lib.Imagery.TextureImageFormat,System.Int32,System.Int32,System.Int32,DEM.Net.Lib.BoundingBox)
  - DEM.Net.Lib.Imagery.TextureInfo.FileName
  - DEM.Net.Lib.Imagery.TextureInfo.FilePath
  - DEM.Net.Lib.Imagery.TextureInfo.Height
  - DEM.Net.Lib.Imagery.TextureInfo.ImageFormat
  - DEM.Net.Lib.Imagery.TextureInfo.ProjectedBounds
  - DEM.Net.Lib.Imagery.TextureInfo.ProjectedZoom
  - DEM.Net.Lib.Imagery.TextureInfo.Width
  langs:
  - csharp
  - vb
  name: TextureInfo
  nameWithType: TextureInfo
  fullName: DEM.Net.Lib.Imagery.TextureInfo
  type: Class
  source:
    remote:
      path: DEM.Net.Lib/Imagery/Structs/TextureInfo.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: TextureInfo
    path: ../DEM.Net.Lib/Imagery/Structs/TextureInfo.cs
    startLine: 10
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib.Imagery
  syntax:
    content: public class TextureInfo
    content.vb: Public Class TextureInfo
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: DEM.Net.Lib.Imagery.TextureInfo.FilePath
  commentId: P:DEM.Net.Lib.Imagery.TextureInfo.FilePath
  id: FilePath
  parent: DEM.Net.Lib.Imagery.TextureInfo
  langs:
  - csharp
  - vb
  name: FilePath
  nameWithType: TextureInfo.FilePath
  fullName: DEM.Net.Lib.Imagery.TextureInfo.FilePath
  type: Property
  source:
    remote:
      path: DEM.Net.Lib/Imagery/Structs/TextureInfo.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: FilePath
    path: ../DEM.Net.Lib/Imagery/Structs/TextureInfo.cs
    startLine: 13
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib.Imagery
  syntax:
    content: public string FilePath { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property FilePath As String
  overload: DEM.Net.Lib.Imagery.TextureInfo.FilePath*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: DEM.Net.Lib.Imagery.TextureInfo.FileName
  commentId: P:DEM.Net.Lib.Imagery.TextureInfo.FileName
  id: FileName
  parent: DEM.Net.Lib.Imagery.TextureInfo
  langs:
  - csharp
  - vb
  name: FileName
  nameWithType: TextureInfo.FileName
  fullName: DEM.Net.Lib.Imagery.TextureInfo.FileName
  type: Property
  source:
    remote:
      path: DEM.Net.Lib/Imagery/Structs/TextureInfo.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: FileName
    path: ../DEM.Net.Lib/Imagery/Structs/TextureInfo.cs
    startLine: 14
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib.Imagery
  syntax:
    content: public string FileName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property FileName As String
  overload: DEM.Net.Lib.Imagery.TextureInfo.FileName*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: DEM.Net.Lib.Imagery.TextureInfo.ImageFormat
  commentId: P:DEM.Net.Lib.Imagery.TextureInfo.ImageFormat
  id: ImageFormat
  parent: DEM.Net.Lib.Imagery.TextureInfo
  langs:
  - csharp
  - vb
  name: ImageFormat
  nameWithType: TextureInfo.ImageFormat
  fullName: DEM.Net.Lib.Imagery.TextureInfo.ImageFormat
  type: Property
  source:
    remote:
      path: DEM.Net.Lib/Imagery/Structs/TextureInfo.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: ImageFormat
    path: ../DEM.Net.Lib/Imagery/Structs/TextureInfo.cs
    startLine: 15
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib.Imagery
  syntax:
    content: public TextureImageFormat ImageFormat { get; }
    parameters: []
    return:
      type: DEM.Net.Lib.Imagery.TextureImageFormat
    content.vb: Public ReadOnly Property ImageFormat As TextureImageFormat
  overload: DEM.Net.Lib.Imagery.TextureInfo.ImageFormat*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: DEM.Net.Lib.Imagery.TextureInfo.Width
  commentId: P:DEM.Net.Lib.Imagery.TextureInfo.Width
  id: Width
  parent: DEM.Net.Lib.Imagery.TextureInfo
  langs:
  - csharp
  - vb
  name: Width
  nameWithType: TextureInfo.Width
  fullName: DEM.Net.Lib.Imagery.TextureInfo.Width
  type: Property
  source:
    remote:
      path: DEM.Net.Lib/Imagery/Structs/TextureInfo.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: Width
    path: ../DEM.Net.Lib/Imagery/Structs/TextureInfo.cs
    startLine: 16
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib.Imagery
  syntax:
    content: public int Width { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Width As Integer
  overload: DEM.Net.Lib.Imagery.TextureInfo.Width*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: DEM.Net.Lib.Imagery.TextureInfo.Height
  commentId: P:DEM.Net.Lib.Imagery.TextureInfo.Height
  id: Height
  parent: DEM.Net.Lib.Imagery.TextureInfo
  langs:
  - csharp
  - vb
  name: Height
  nameWithType: TextureInfo.Height
  fullName: DEM.Net.Lib.Imagery.TextureInfo.Height
  type: Property
  source:
    remote:
      path: DEM.Net.Lib/Imagery/Structs/TextureInfo.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: Height
    path: ../DEM.Net.Lib/Imagery/Structs/TextureInfo.cs
    startLine: 17
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib.Imagery
  syntax:
    content: public int Height { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Height As Integer
  overload: DEM.Net.Lib.Imagery.TextureInfo.Height*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: DEM.Net.Lib.Imagery.TextureInfo.ProjectedZoom
  commentId: P:DEM.Net.Lib.Imagery.TextureInfo.ProjectedZoom
  id: ProjectedZoom
  parent: DEM.Net.Lib.Imagery.TextureInfo
  langs:
  - csharp
  - vb
  name: ProjectedZoom
  nameWithType: TextureInfo.ProjectedZoom
  fullName: DEM.Net.Lib.Imagery.TextureInfo.ProjectedZoom
  type: Property
  source:
    remote:
      path: DEM.Net.Lib/Imagery/Structs/TextureInfo.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: ProjectedZoom
    path: ../DEM.Net.Lib/Imagery/Structs/TextureInfo.cs
    startLine: 18
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib.Imagery
  syntax:
    content: public int ProjectedZoom { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property ProjectedZoom As Integer
  overload: DEM.Net.Lib.Imagery.TextureInfo.ProjectedZoom*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: DEM.Net.Lib.Imagery.TextureInfo.ProjectedBounds
  commentId: P:DEM.Net.Lib.Imagery.TextureInfo.ProjectedBounds
  id: ProjectedBounds
  parent: DEM.Net.Lib.Imagery.TextureInfo
  langs:
  - csharp
  - vb
  name: ProjectedBounds
  nameWithType: TextureInfo.ProjectedBounds
  fullName: DEM.Net.Lib.Imagery.TextureInfo.ProjectedBounds
  type: Property
  source:
    remote:
      path: DEM.Net.Lib/Imagery/Structs/TextureInfo.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: ProjectedBounds
    path: ../DEM.Net.Lib/Imagery/Structs/TextureInfo.cs
    startLine: 19
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib.Imagery
  syntax:
    content: public BoundingBox ProjectedBounds { get; }
    parameters: []
    return:
      type: DEM.Net.Lib.BoundingBox
    content.vb: Public ReadOnly Property ProjectedBounds As BoundingBox
  overload: DEM.Net.Lib.Imagery.TextureInfo.ProjectedBounds*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: DEM.Net.Lib.Imagery.TextureInfo.#ctor(System.String,DEM.Net.Lib.Imagery.TextureImageFormat,System.Int32,System.Int32,System.Int32,DEM.Net.Lib.BoundingBox)
  commentId: M:DEM.Net.Lib.Imagery.TextureInfo.#ctor(System.String,DEM.Net.Lib.Imagery.TextureImageFormat,System.Int32,System.Int32,System.Int32,DEM.Net.Lib.BoundingBox)
  id: '#ctor(System.String,DEM.Net.Lib.Imagery.TextureImageFormat,System.Int32,System.Int32,System.Int32,DEM.Net.Lib.BoundingBox)'
  parent: DEM.Net.Lib.Imagery.TextureInfo
  langs:
  - csharp
  - vb
  name: TextureInfo(String, TextureImageFormat, Int32, Int32, Int32, BoundingBox)
  nameWithType: TextureInfo.TextureInfo(String, TextureImageFormat, Int32, Int32, Int32, BoundingBox)
  fullName: DEM.Net.Lib.Imagery.TextureInfo.TextureInfo(System.String, DEM.Net.Lib.Imagery.TextureImageFormat, System.Int32, System.Int32, System.Int32, DEM.Net.Lib.BoundingBox)
  type: Constructor
  source:
    remote:
      path: DEM.Net.Lib/Imagery/Structs/TextureInfo.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: .ctor
    path: ../DEM.Net.Lib/Imagery/Structs/TextureInfo.cs
    startLine: 21
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib.Imagery
  syntax:
    content: public TextureInfo(string filePath, TextureImageFormat imageFormat, int width, int height, int zoom = 0, BoundingBox projectedBounds = null)
    parameters:
    - id: filePath
      type: System.String
    - id: imageFormat
      type: DEM.Net.Lib.Imagery.TextureImageFormat
    - id: width
      type: System.Int32
    - id: height
      type: System.Int32
    - id: zoom
      type: System.Int32
    - id: projectedBounds
      type: DEM.Net.Lib.BoundingBox
    content.vb: Public Sub New(filePath As String, imageFormat As TextureImageFormat, width As Integer, height As Integer, zoom As Integer = 0, projectedBounds As BoundingBox = Nothing)
  overload: DEM.Net.Lib.Imagery.TextureInfo.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: DEM.Net.Lib.Imagery
  commentId: N:DEM.Net.Lib.Imagery
  name: DEM.Net.Lib.Imagery
  nameWithType: DEM.Net.Lib.Imagery
  fullName: DEM.Net.Lib.Imagery
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: DEM.Net.Lib.Imagery.TextureInfo.FilePath*
  commentId: Overload:DEM.Net.Lib.Imagery.TextureInfo.FilePath
  name: FilePath
  nameWithType: TextureInfo.FilePath
  fullName: DEM.Net.Lib.Imagery.TextureInfo.FilePath
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: DEM.Net.Lib.Imagery.TextureInfo.FileName*
  commentId: Overload:DEM.Net.Lib.Imagery.TextureInfo.FileName
  name: FileName
  nameWithType: TextureInfo.FileName
  fullName: DEM.Net.Lib.Imagery.TextureInfo.FileName
- uid: DEM.Net.Lib.Imagery.TextureInfo.ImageFormat*
  commentId: Overload:DEM.Net.Lib.Imagery.TextureInfo.ImageFormat
  name: ImageFormat
  nameWithType: TextureInfo.ImageFormat
  fullName: DEM.Net.Lib.Imagery.TextureInfo.ImageFormat
- uid: DEM.Net.Lib.Imagery.TextureImageFormat
  commentId: T:DEM.Net.Lib.Imagery.TextureImageFormat
  parent: DEM.Net.Lib.Imagery
  name: TextureImageFormat
  nameWithType: TextureImageFormat
  fullName: DEM.Net.Lib.Imagery.TextureImageFormat
- uid: DEM.Net.Lib.Imagery.TextureInfo.Width*
  commentId: Overload:DEM.Net.Lib.Imagery.TextureInfo.Width
  name: Width
  nameWithType: TextureInfo.Width
  fullName: DEM.Net.Lib.Imagery.TextureInfo.Width
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: DEM.Net.Lib.Imagery.TextureInfo.Height*
  commentId: Overload:DEM.Net.Lib.Imagery.TextureInfo.Height
  name: Height
  nameWithType: TextureInfo.Height
  fullName: DEM.Net.Lib.Imagery.TextureInfo.Height
- uid: DEM.Net.Lib.Imagery.TextureInfo.ProjectedZoom*
  commentId: Overload:DEM.Net.Lib.Imagery.TextureInfo.ProjectedZoom
  name: ProjectedZoom
  nameWithType: TextureInfo.ProjectedZoom
  fullName: DEM.Net.Lib.Imagery.TextureInfo.ProjectedZoom
- uid: DEM.Net.Lib.Imagery.TextureInfo.ProjectedBounds*
  commentId: Overload:DEM.Net.Lib.Imagery.TextureInfo.ProjectedBounds
  name: ProjectedBounds
  nameWithType: TextureInfo.ProjectedBounds
  fullName: DEM.Net.Lib.Imagery.TextureInfo.ProjectedBounds
- uid: DEM.Net.Lib.BoundingBox
  commentId: T:DEM.Net.Lib.BoundingBox
  parent: DEM.Net.Lib
  name: BoundingBox
  nameWithType: BoundingBox
  fullName: DEM.Net.Lib.BoundingBox
- uid: DEM.Net.Lib
  commentId: N:DEM.Net.Lib
  name: DEM.Net.Lib
  nameWithType: DEM.Net.Lib
  fullName: DEM.Net.Lib
- uid: DEM.Net.Lib.Imagery.TextureInfo.#ctor*
  commentId: Overload:DEM.Net.Lib.Imagery.TextureInfo.#ctor
  name: TextureInfo
  nameWithType: TextureInfo.TextureInfo
  fullName: DEM.Net.Lib.Imagery.TextureInfo.TextureInfo
