### YamlMime:ManagedReference
items:
- uid: DEM.Net.Lib.IRasterService
  commentId: T:DEM.Net.Lib.IRasterService
  id: IRasterService
  parent: DEM.Net.Lib
  children:
  - DEM.Net.Lib.IRasterService.GenerateDirectoryMetadata(DEM.Net.Lib.DEMDataSet,System.Boolean,System.Boolean,System.Boolean)
  - DEM.Net.Lib.IRasterService.GenerateFileMetadata(System.String,DEM.Net.Lib.DEMFileFormat,System.Boolean,System.Boolean)
  - DEM.Net.Lib.IRasterService.GenerateReport(DEM.Net.Lib.DEMDataSet,DEM.Net.Lib.BoundingBox)
  - DEM.Net.Lib.IRasterService.GenerateReportAsString
  - DEM.Net.Lib.IRasterService.GenerateReportForLocation(DEM.Net.Lib.DEMDataSet,System.Double,System.Double)
  - DEM.Net.Lib.IRasterService.GetLocalDEMFilePath(DEM.Net.Lib.DEMDataSet,System.String)
  - DEM.Net.Lib.IRasterService.GetLocalDEMPath(DEM.Net.Lib.DEMDataSet)
  - DEM.Net.Lib.IRasterService.LoadManifestMetadata(DEM.Net.Lib.DEMDataSet,System.Boolean)
  - DEM.Net.Lib.IRasterService.LocalDirectory
  - DEM.Net.Lib.IRasterService.OpenFile(System.String,DEM.Net.Lib.DEMFileFormat)
  - DEM.Net.Lib.IRasterService.ParseMetadata(DEM.Net.Lib.IRasterFile,System.Boolean)
  - DEM.Net.Lib.IRasterService.ParseMetadata(System.String,DEM.Net.Lib.DEMFileFormat,System.Boolean)
  langs:
  - csharp
  - vb
  name: IRasterService
  nameWithType: IRasterService
  fullName: DEM.Net.Lib.IRasterService
  type: Interface
  source:
    remote:
      path: DEM.Net.Lib/Services/Raster/IRasterService.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: IRasterService
    path: ../DEM.Net.Lib/Services/Raster/IRasterService.cs
    startLine: 5
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib
  syntax:
    content: public interface IRasterService
    content.vb: Public Interface IRasterService
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: DEM.Net.Lib.IRasterService.ParseMetadata(DEM.Net.Lib.IRasterFile,System.Boolean)
  commentId: M:DEM.Net.Lib.IRasterService.ParseMetadata(DEM.Net.Lib.IRasterFile,System.Boolean)
  id: ParseMetadata(DEM.Net.Lib.IRasterFile,System.Boolean)
  parent: DEM.Net.Lib.IRasterService
  langs:
  - csharp
  - vb
  name: ParseMetadata(IRasterFile, Boolean)
  nameWithType: IRasterService.ParseMetadata(IRasterFile, Boolean)
  fullName: DEM.Net.Lib.IRasterService.ParseMetadata(DEM.Net.Lib.IRasterFile, System.Boolean)
  type: Method
  source:
    remote:
      path: DEM.Net.Lib/Services/Raster/IRasterService.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: ParseMetadata
    path: ../DEM.Net.Lib/Services/Raster/IRasterService.cs
    startLine: 7
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib
  syntax:
    content: FileMetadata ParseMetadata(IRasterFile rasterFile, bool makeRelativePath = false)
    parameters:
    - id: rasterFile
      type: DEM.Net.Lib.IRasterFile
    - id: makeRelativePath
      type: System.Boolean
    return:
      type: DEM.Net.Lib.FileMetadata
    content.vb: Function ParseMetadata(rasterFile As IRasterFile, makeRelativePath As Boolean = False) As FileMetadata
  overload: DEM.Net.Lib.IRasterService.ParseMetadata*
- uid: DEM.Net.Lib.IRasterService.ParseMetadata(System.String,DEM.Net.Lib.DEMFileFormat,System.Boolean)
  commentId: M:DEM.Net.Lib.IRasterService.ParseMetadata(System.String,DEM.Net.Lib.DEMFileFormat,System.Boolean)
  id: ParseMetadata(System.String,DEM.Net.Lib.DEMFileFormat,System.Boolean)
  parent: DEM.Net.Lib.IRasterService
  langs:
  - csharp
  - vb
  name: ParseMetadata(String, DEMFileFormat, Boolean)
  nameWithType: IRasterService.ParseMetadata(String, DEMFileFormat, Boolean)
  fullName: DEM.Net.Lib.IRasterService.ParseMetadata(System.String, DEM.Net.Lib.DEMFileFormat, System.Boolean)
  type: Method
  source:
    remote:
      path: DEM.Net.Lib/Services/Raster/IRasterService.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: ParseMetadata
    path: ../DEM.Net.Lib/Services/Raster/IRasterService.cs
    startLine: 8
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib
  syntax:
    content: FileMetadata ParseMetadata(string fileName, DEMFileFormat fileFormat, bool makeRelativePath = true)
    parameters:
    - id: fileName
      type: System.String
    - id: fileFormat
      type: DEM.Net.Lib.DEMFileFormat
    - id: makeRelativePath
      type: System.Boolean
    return:
      type: DEM.Net.Lib.FileMetadata
    content.vb: Function ParseMetadata(fileName As String, fileFormat As DEMFileFormat, makeRelativePath As Boolean = True) As FileMetadata
  overload: DEM.Net.Lib.IRasterService.ParseMetadata*
- uid: DEM.Net.Lib.IRasterService.LoadManifestMetadata(DEM.Net.Lib.DEMDataSet,System.Boolean)
  commentId: M:DEM.Net.Lib.IRasterService.LoadManifestMetadata(DEM.Net.Lib.DEMDataSet,System.Boolean)
  id: LoadManifestMetadata(DEM.Net.Lib.DEMDataSet,System.Boolean)
  parent: DEM.Net.Lib.IRasterService
  langs:
  - csharp
  - vb
  name: LoadManifestMetadata(DEMDataSet, Boolean)
  nameWithType: IRasterService.LoadManifestMetadata(DEMDataSet, Boolean)
  fullName: DEM.Net.Lib.IRasterService.LoadManifestMetadata(DEM.Net.Lib.DEMDataSet, System.Boolean)
  type: Method
  source:
    remote:
      path: DEM.Net.Lib/Services/Raster/IRasterService.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: LoadManifestMetadata
    path: ../DEM.Net.Lib/Services/Raster/IRasterService.cs
    startLine: 9
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib
  syntax:
    content: List<FileMetadata> LoadManifestMetadata(DEMDataSet dataSet, bool force)
    parameters:
    - id: dataSet
      type: DEM.Net.Lib.DEMDataSet
    - id: force
      type: System.Boolean
    return:
      type: System.Collections.Generic.List{DEM.Net.Lib.FileMetadata}
    content.vb: Function LoadManifestMetadata(dataSet As DEMDataSet, force As Boolean) As List(Of FileMetadata)
  overload: DEM.Net.Lib.IRasterService.LoadManifestMetadata*
- uid: DEM.Net.Lib.IRasterService.OpenFile(System.String,DEM.Net.Lib.DEMFileFormat)
  commentId: M:DEM.Net.Lib.IRasterService.OpenFile(System.String,DEM.Net.Lib.DEMFileFormat)
  id: OpenFile(System.String,DEM.Net.Lib.DEMFileFormat)
  parent: DEM.Net.Lib.IRasterService
  langs:
  - csharp
  - vb
  name: OpenFile(String, DEMFileFormat)
  nameWithType: IRasterService.OpenFile(String, DEMFileFormat)
  fullName: DEM.Net.Lib.IRasterService.OpenFile(System.String, DEM.Net.Lib.DEMFileFormat)
  type: Method
  source:
    remote:
      path: DEM.Net.Lib/Services/Raster/IRasterService.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: OpenFile
    path: ../DEM.Net.Lib/Services/Raster/IRasterService.cs
    startLine: 11
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib
  syntax:
    content: IRasterFile OpenFile(string filePath, DEMFileFormat fileFormat)
    parameters:
    - id: filePath
      type: System.String
    - id: fileFormat
      type: DEM.Net.Lib.DEMFileFormat
    return:
      type: DEM.Net.Lib.IRasterFile
    content.vb: Function OpenFile(filePath As String, fileFormat As DEMFileFormat) As IRasterFile
  overload: DEM.Net.Lib.IRasterService.OpenFile*
- uid: DEM.Net.Lib.IRasterService.LocalDirectory
  commentId: P:DEM.Net.Lib.IRasterService.LocalDirectory
  id: LocalDirectory
  parent: DEM.Net.Lib.IRasterService
  langs:
  - csharp
  - vb
  name: LocalDirectory
  nameWithType: IRasterService.LocalDirectory
  fullName: DEM.Net.Lib.IRasterService.LocalDirectory
  type: Property
  source:
    remote:
      path: DEM.Net.Lib/Services/Raster/IRasterService.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: LocalDirectory
    path: ../DEM.Net.Lib/Services/Raster/IRasterService.cs
    startLine: 13
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib
  syntax:
    content: string LocalDirectory { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property LocalDirectory As String
  overload: DEM.Net.Lib.IRasterService.LocalDirectory*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: DEM.Net.Lib.IRasterService.GetLocalDEMPath(DEM.Net.Lib.DEMDataSet)
  commentId: M:DEM.Net.Lib.IRasterService.GetLocalDEMPath(DEM.Net.Lib.DEMDataSet)
  id: GetLocalDEMPath(DEM.Net.Lib.DEMDataSet)
  parent: DEM.Net.Lib.IRasterService
  langs:
  - csharp
  - vb
  name: GetLocalDEMPath(DEMDataSet)
  nameWithType: IRasterService.GetLocalDEMPath(DEMDataSet)
  fullName: DEM.Net.Lib.IRasterService.GetLocalDEMPath(DEM.Net.Lib.DEMDataSet)
  type: Method
  source:
    remote:
      path: DEM.Net.Lib/Services/Raster/IRasterService.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: GetLocalDEMPath
    path: ../DEM.Net.Lib/Services/Raster/IRasterService.cs
    startLine: 14
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib
  syntax:
    content: string GetLocalDEMPath(DEMDataSet dataset)
    parameters:
    - id: dataset
      type: DEM.Net.Lib.DEMDataSet
    return:
      type: System.String
    content.vb: Function GetLocalDEMPath(dataset As DEMDataSet) As String
  overload: DEM.Net.Lib.IRasterService.GetLocalDEMPath*
- uid: DEM.Net.Lib.IRasterService.GetLocalDEMFilePath(DEM.Net.Lib.DEMDataSet,System.String)
  commentId: M:DEM.Net.Lib.IRasterService.GetLocalDEMFilePath(DEM.Net.Lib.DEMDataSet,System.String)
  id: GetLocalDEMFilePath(DEM.Net.Lib.DEMDataSet,System.String)
  parent: DEM.Net.Lib.IRasterService
  langs:
  - csharp
  - vb
  name: GetLocalDEMFilePath(DEMDataSet, String)
  nameWithType: IRasterService.GetLocalDEMFilePath(DEMDataSet, String)
  fullName: DEM.Net.Lib.IRasterService.GetLocalDEMFilePath(DEM.Net.Lib.DEMDataSet, System.String)
  type: Method
  source:
    remote:
      path: DEM.Net.Lib/Services/Raster/IRasterService.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: GetLocalDEMFilePath
    path: ../DEM.Net.Lib/Services/Raster/IRasterService.cs
    startLine: 15
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib
  syntax:
    content: string GetLocalDEMFilePath(DEMDataSet dataset, string fileTitle)
    parameters:
    - id: dataset
      type: DEM.Net.Lib.DEMDataSet
    - id: fileTitle
      type: System.String
    return:
      type: System.String
    content.vb: Function GetLocalDEMFilePath(dataset As DEMDataSet, fileTitle As String) As String
  overload: DEM.Net.Lib.IRasterService.GetLocalDEMFilePath*
- uid: DEM.Net.Lib.IRasterService.GenerateDirectoryMetadata(DEM.Net.Lib.DEMDataSet,System.Boolean,System.Boolean,System.Boolean)
  commentId: M:DEM.Net.Lib.IRasterService.GenerateDirectoryMetadata(DEM.Net.Lib.DEMDataSet,System.Boolean,System.Boolean,System.Boolean)
  id: GenerateDirectoryMetadata(DEM.Net.Lib.DEMDataSet,System.Boolean,System.Boolean,System.Boolean)
  parent: DEM.Net.Lib.IRasterService
  langs:
  - csharp
  - vb
  name: GenerateDirectoryMetadata(DEMDataSet, Boolean, Boolean, Boolean)
  nameWithType: IRasterService.GenerateDirectoryMetadata(DEMDataSet, Boolean, Boolean, Boolean)
  fullName: DEM.Net.Lib.IRasterService.GenerateDirectoryMetadata(DEM.Net.Lib.DEMDataSet, System.Boolean, System.Boolean, System.Boolean)
  type: Method
  source:
    remote:
      path: DEM.Net.Lib/Services/Raster/IRasterService.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: GenerateDirectoryMetadata
    path: ../DEM.Net.Lib/Services/Raster/IRasterService.cs
    startLine: 25
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib
  summary: "\nGenerate metadata files for fast in-memory indexing\n"
  example: []
  syntax:
    content: void GenerateDirectoryMetadata(DEMDataSet dataSet, bool generateBitmaps, bool force, bool deleteOnError = false)
    parameters:
    - id: dataSet
      type: DEM.Net.Lib.DEMDataSet
      description: ''
    - id: generateBitmaps
      type: System.Boolean
      description: If true, bitmaps with height map will be generated (heavy memory usage and waaaay slower)
    - id: force
      type: System.Boolean
      description: If true, force regeneration of all files. If false, only missing files will be generated.
    - id: deleteOnError
      type: System.Boolean
      description: If true, files where error are encountered will be deleted
    content.vb: Sub GenerateDirectoryMetadata(dataSet As DEMDataSet, generateBitmaps As Boolean, force As Boolean, deleteOnError As Boolean = False)
  overload: DEM.Net.Lib.IRasterService.GenerateDirectoryMetadata*
- uid: DEM.Net.Lib.IRasterService.GenerateReport(DEM.Net.Lib.DEMDataSet,DEM.Net.Lib.BoundingBox)
  commentId: M:DEM.Net.Lib.IRasterService.GenerateReport(DEM.Net.Lib.DEMDataSet,DEM.Net.Lib.BoundingBox)
  id: GenerateReport(DEM.Net.Lib.DEMDataSet,DEM.Net.Lib.BoundingBox)
  parent: DEM.Net.Lib.IRasterService
  langs:
  - csharp
  - vb
  name: GenerateReport(DEMDataSet, BoundingBox)
  nameWithType: IRasterService.GenerateReport(DEMDataSet, BoundingBox)
  fullName: DEM.Net.Lib.IRasterService.GenerateReport(DEM.Net.Lib.DEMDataSet, DEM.Net.Lib.BoundingBox)
  type: Method
  source:
    remote:
      path: DEM.Net.Lib/Services/Raster/IRasterService.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: GenerateReport
    path: ../DEM.Net.Lib/Services/Raster/IRasterService.cs
    startLine: 34
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib
  summary: "\nCompare LST file and local directory and generates dictionary with key : remoteFile and value = true if file is present and false if it is not downloaded\n"
  example: []
  syntax:
    content: Dictionary<string, DemFileReport> GenerateReport(DEMDataSet dataSet, BoundingBox bbox = null)
    parameters:
    - id: dataSet
      type: DEM.Net.Lib.DEMDataSet
      description: DEM dataset information
    - id: bbox
      type: DEM.Net.Lib.BoundingBox
      description: Bbox for filtering
    return:
      type: System.Collections.Generic.Dictionary{System.String,DEM.Net.Lib.DemFileReport}
      description: ''
    content.vb: Function GenerateReport(dataSet As DEMDataSet, bbox As BoundingBox = Nothing) As Dictionary(Of String, DemFileReport)
  overload: DEM.Net.Lib.IRasterService.GenerateReport*
- uid: DEM.Net.Lib.IRasterService.GenerateReportForLocation(DEM.Net.Lib.DEMDataSet,System.Double,System.Double)
  commentId: M:DEM.Net.Lib.IRasterService.GenerateReportForLocation(DEM.Net.Lib.DEMDataSet,System.Double,System.Double)
  id: GenerateReportForLocation(DEM.Net.Lib.DEMDataSet,System.Double,System.Double)
  parent: DEM.Net.Lib.IRasterService
  langs:
  - csharp
  - vb
  name: GenerateReportForLocation(DEMDataSet, Double, Double)
  nameWithType: IRasterService.GenerateReportForLocation(DEMDataSet, Double, Double)
  fullName: DEM.Net.Lib.IRasterService.GenerateReportForLocation(DEM.Net.Lib.DEMDataSet, System.Double, System.Double)
  type: Method
  source:
    remote:
      path: DEM.Net.Lib/Services/Raster/IRasterService.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: GenerateReportForLocation
    path: ../DEM.Net.Lib/Services/Raster/IRasterService.cs
    startLine: 35
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib
  syntax:
    content: Dictionary<string, DemFileReport> GenerateReportForLocation(DEMDataSet dataSet, double lat, double lon)
    parameters:
    - id: dataSet
      type: DEM.Net.Lib.DEMDataSet
    - id: lat
      type: System.Double
    - id: lon
      type: System.Double
    return:
      type: System.Collections.Generic.Dictionary{System.String,DEM.Net.Lib.DemFileReport}
    content.vb: Function GenerateReportForLocation(dataSet As DEMDataSet, lat As Double, lon As Double) As Dictionary(Of String, DemFileReport)
  overload: DEM.Net.Lib.IRasterService.GenerateReportForLocation*
- uid: DEM.Net.Lib.IRasterService.GenerateReportAsString
  commentId: M:DEM.Net.Lib.IRasterService.GenerateReportAsString
  id: GenerateReportAsString
  parent: DEM.Net.Lib.IRasterService
  langs:
  - csharp
  - vb
  name: GenerateReportAsString()
  nameWithType: IRasterService.GenerateReportAsString()
  fullName: DEM.Net.Lib.IRasterService.GenerateReportAsString()
  type: Method
  source:
    remote:
      path: DEM.Net.Lib/Services/Raster/IRasterService.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: GenerateReportAsString
    path: ../DEM.Net.Lib/Services/Raster/IRasterService.cs
    startLine: 36
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib
  syntax:
    content: string GenerateReportAsString()
    return:
      type: System.String
    content.vb: Function GenerateReportAsString As String
  overload: DEM.Net.Lib.IRasterService.GenerateReportAsString*
- uid: DEM.Net.Lib.IRasterService.GenerateFileMetadata(System.String,DEM.Net.Lib.DEMFileFormat,System.Boolean,System.Boolean)
  commentId: M:DEM.Net.Lib.IRasterService.GenerateFileMetadata(System.String,DEM.Net.Lib.DEMFileFormat,System.Boolean,System.Boolean)
  id: GenerateFileMetadata(System.String,DEM.Net.Lib.DEMFileFormat,System.Boolean,System.Boolean)
  parent: DEM.Net.Lib.IRasterService
  langs:
  - csharp
  - vb
  name: GenerateFileMetadata(String, DEMFileFormat, Boolean, Boolean)
  nameWithType: IRasterService.GenerateFileMetadata(String, DEMFileFormat, Boolean, Boolean)
  fullName: DEM.Net.Lib.IRasterService.GenerateFileMetadata(System.String, DEM.Net.Lib.DEMFileFormat, System.Boolean, System.Boolean)
  type: Method
  source:
    remote:
      path: DEM.Net.Lib/Services/Raster/IRasterService.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: GenerateFileMetadata
    path: ../DEM.Net.Lib/Services/Raster/IRasterService.cs
    startLine: 39
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib
  syntax:
    content: void GenerateFileMetadata(string rasterFileName, DEMFileFormat fileFormat, bool generateBitmap, bool force)
    parameters:
    - id: rasterFileName
      type: System.String
    - id: fileFormat
      type: DEM.Net.Lib.DEMFileFormat
    - id: generateBitmap
      type: System.Boolean
    - id: force
      type: System.Boolean
    content.vb: Sub GenerateFileMetadata(rasterFileName As String, fileFormat As DEMFileFormat, generateBitmap As Boolean, force As Boolean)
  overload: DEM.Net.Lib.IRasterService.GenerateFileMetadata*
references:
- uid: DEM.Net.Lib
  commentId: N:DEM.Net.Lib
  name: DEM.Net.Lib
  nameWithType: DEM.Net.Lib
  fullName: DEM.Net.Lib
- uid: DEM.Net.Lib.IRasterService.ParseMetadata*
  commentId: Overload:DEM.Net.Lib.IRasterService.ParseMetadata
  name: ParseMetadata
  nameWithType: IRasterService.ParseMetadata
  fullName: DEM.Net.Lib.IRasterService.ParseMetadata
- uid: DEM.Net.Lib.IRasterFile
  commentId: T:DEM.Net.Lib.IRasterFile
  parent: DEM.Net.Lib
  name: IRasterFile
  nameWithType: IRasterFile
  fullName: DEM.Net.Lib.IRasterFile
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: DEM.Net.Lib.FileMetadata
  commentId: T:DEM.Net.Lib.FileMetadata
  parent: DEM.Net.Lib
  name: FileMetadata
  nameWithType: FileMetadata
  fullName: DEM.Net.Lib.FileMetadata
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: DEM.Net.Lib.DEMFileFormat
  commentId: T:DEM.Net.Lib.DEMFileFormat
  parent: DEM.Net.Lib
  name: DEMFileFormat
  nameWithType: DEMFileFormat
  fullName: DEM.Net.Lib.DEMFileFormat
- uid: DEM.Net.Lib.IRasterService.LoadManifestMetadata*
  commentId: Overload:DEM.Net.Lib.IRasterService.LoadManifestMetadata
  name: LoadManifestMetadata
  nameWithType: IRasterService.LoadManifestMetadata
  fullName: DEM.Net.Lib.IRasterService.LoadManifestMetadata
- uid: DEM.Net.Lib.DEMDataSet
  commentId: T:DEM.Net.Lib.DEMDataSet
  parent: DEM.Net.Lib
  name: DEMDataSet
  nameWithType: DEMDataSet
  fullName: DEM.Net.Lib.DEMDataSet
- uid: System.Collections.Generic.List{DEM.Net.Lib.FileMetadata}
  commentId: T:System.Collections.Generic.List{DEM.Net.Lib.FileMetadata}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<FileMetadata>
  nameWithType: List<FileMetadata>
  fullName: System.Collections.Generic.List<DEM.Net.Lib.FileMetadata>
  nameWithType.vb: List(Of FileMetadata)
  fullName.vb: System.Collections.Generic.List(Of DEM.Net.Lib.FileMetadata)
  name.vb: List(Of FileMetadata)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: DEM.Net.Lib.FileMetadata
    name: FileMetadata
    nameWithType: FileMetadata
    fullName: DEM.Net.Lib.FileMetadata
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: DEM.Net.Lib.FileMetadata
    name: FileMetadata
    nameWithType: FileMetadata
    fullName: DEM.Net.Lib.FileMetadata
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: DEM.Net.Lib.IRasterService.OpenFile*
  commentId: Overload:DEM.Net.Lib.IRasterService.OpenFile
  name: OpenFile
  nameWithType: IRasterService.OpenFile
  fullName: DEM.Net.Lib.IRasterService.OpenFile
- uid: DEM.Net.Lib.IRasterService.LocalDirectory*
  commentId: Overload:DEM.Net.Lib.IRasterService.LocalDirectory
  name: LocalDirectory
  nameWithType: IRasterService.LocalDirectory
  fullName: DEM.Net.Lib.IRasterService.LocalDirectory
- uid: DEM.Net.Lib.IRasterService.GetLocalDEMPath*
  commentId: Overload:DEM.Net.Lib.IRasterService.GetLocalDEMPath
  name: GetLocalDEMPath
  nameWithType: IRasterService.GetLocalDEMPath
  fullName: DEM.Net.Lib.IRasterService.GetLocalDEMPath
- uid: DEM.Net.Lib.IRasterService.GetLocalDEMFilePath*
  commentId: Overload:DEM.Net.Lib.IRasterService.GetLocalDEMFilePath
  name: GetLocalDEMFilePath
  nameWithType: IRasterService.GetLocalDEMFilePath
  fullName: DEM.Net.Lib.IRasterService.GetLocalDEMFilePath
- uid: DEM.Net.Lib.IRasterService.GenerateDirectoryMetadata*
  commentId: Overload:DEM.Net.Lib.IRasterService.GenerateDirectoryMetadata
  name: GenerateDirectoryMetadata
  nameWithType: IRasterService.GenerateDirectoryMetadata
  fullName: DEM.Net.Lib.IRasterService.GenerateDirectoryMetadata
- uid: DEM.Net.Lib.IRasterService.GenerateReport*
  commentId: Overload:DEM.Net.Lib.IRasterService.GenerateReport
  name: GenerateReport
  nameWithType: IRasterService.GenerateReport
  fullName: DEM.Net.Lib.IRasterService.GenerateReport
- uid: DEM.Net.Lib.BoundingBox
  commentId: T:DEM.Net.Lib.BoundingBox
  parent: DEM.Net.Lib
  name: BoundingBox
  nameWithType: BoundingBox
  fullName: DEM.Net.Lib.BoundingBox
- uid: System.Collections.Generic.Dictionary{System.String,DEM.Net.Lib.DemFileReport}
  commentId: T:System.Collections.Generic.Dictionary{System.String,DEM.Net.Lib.DemFileReport}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, DemFileReport>
  nameWithType: Dictionary<String, DemFileReport>
  fullName: System.Collections.Generic.Dictionary<System.String, DEM.Net.Lib.DemFileReport>
  nameWithType.vb: Dictionary(Of String, DemFileReport)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, DEM.Net.Lib.DemFileReport)
  name.vb: Dictionary(Of String, DemFileReport)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DEM.Net.Lib.DemFileReport
    name: DemFileReport
    nameWithType: DemFileReport
    fullName: DEM.Net.Lib.DemFileReport
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DEM.Net.Lib.DemFileReport
    name: DemFileReport
    nameWithType: DemFileReport
    fullName: DEM.Net.Lib.DemFileReport
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: DEM.Net.Lib.IRasterService.GenerateReportForLocation*
  commentId: Overload:DEM.Net.Lib.IRasterService.GenerateReportForLocation
  name: GenerateReportForLocation
  nameWithType: IRasterService.GenerateReportForLocation
  fullName: DEM.Net.Lib.IRasterService.GenerateReportForLocation
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: DEM.Net.Lib.IRasterService.GenerateReportAsString*
  commentId: Overload:DEM.Net.Lib.IRasterService.GenerateReportAsString
  name: GenerateReportAsString
  nameWithType: IRasterService.GenerateReportAsString
  fullName: DEM.Net.Lib.IRasterService.GenerateReportAsString
- uid: DEM.Net.Lib.IRasterService.GenerateFileMetadata*
  commentId: Overload:DEM.Net.Lib.IRasterService.GenerateFileMetadata
  name: GenerateFileMetadata
  nameWithType: IRasterService.GenerateFileMetadata
  fullName: DEM.Net.Lib.IRasterService.GenerateFileMetadata
