### YamlMime:ManagedReference
items:
- uid: DEM.Net.Lib.EnumerableWithCount`1
  commentId: T:DEM.Net.Lib.EnumerableWithCount`1
  id: EnumerableWithCount`1
  parent: DEM.Net.Lib
  children:
  - DEM.Net.Lib.EnumerableWithCount`1.#ctor(System.Int32,System.Collections.Generic.IEnumerable{`0})
  - DEM.Net.Lib.EnumerableWithCount`1.Count
  - DEM.Net.Lib.EnumerableWithCount`1.GetEnumerator
  - DEM.Net.Lib.EnumerableWithCount`1.System#Collections#IEnumerable#GetEnumerator
  langs:
  - csharp
  - vb
  name: EnumerableWithCount<T>
  nameWithType: EnumerableWithCount<T>
  fullName: DEM.Net.Lib.EnumerableWithCount<T>
  type: Class
  source:
    remote:
      path: DEM.Net.Lib/Helpers/IEnumerableWithCount.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: EnumerableWithCount
    path: ../DEM.Net.Lib/Helpers/IEnumerableWithCount.cs
    startLine: 14
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib
  syntax:
    content: 'public class EnumerableWithCount<T> : IEnumerableWithCount<T>, IEnumerable<T>, IEnumerable'
    typeParameters:
    - id: T
    content.vb: >-
      Public Class EnumerableWithCount(Of T)
          Implements IEnumerableWithCount(Of T), IEnumerable(Of T), IEnumerable
  inheritance:
  - System.Object
  implements:
  - DEM.Net.Lib.IEnumerableWithCount{{T}}
  - System.Collections.Generic.IEnumerable{{T}}
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  nameWithType.vb: EnumerableWithCount(Of T)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: DEM.Net.Lib.EnumerableWithCount(Of T)
  name.vb: EnumerableWithCount(Of T)
- uid: DEM.Net.Lib.EnumerableWithCount`1.#ctor(System.Int32,System.Collections.Generic.IEnumerable{`0})
  commentId: M:DEM.Net.Lib.EnumerableWithCount`1.#ctor(System.Int32,System.Collections.Generic.IEnumerable{`0})
  id: '#ctor(System.Int32,System.Collections.Generic.IEnumerable{`0})'
  parent: DEM.Net.Lib.EnumerableWithCount`1
  langs:
  - csharp
  - vb
  name: EnumerableWithCount(Int32, IEnumerable<T>)
  nameWithType: EnumerableWithCount<T>.EnumerableWithCount(Int32, IEnumerable<T>)
  fullName: DEM.Net.Lib.EnumerableWithCount<T>.EnumerableWithCount(System.Int32, System.Collections.Generic.IEnumerable<T>)
  type: Constructor
  source:
    remote:
      path: DEM.Net.Lib/Helpers/IEnumerableWithCount.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: .ctor
    path: ../DEM.Net.Lib/Helpers/IEnumerableWithCount.cs
    startLine: 19
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib
  syntax:
    content: public EnumerableWithCount(int count, IEnumerable<T> enumerable)
    parameters:
    - id: count
      type: System.Int32
    - id: enumerable
      type: System.Collections.Generic.IEnumerable{{T}}
    content.vb: Public Sub New(count As Integer, enumerable As IEnumerable(Of T))
  overload: DEM.Net.Lib.EnumerableWithCount`1.#ctor*
  nameWithType.vb: EnumerableWithCount(Of T).EnumerableWithCount(Int32, IEnumerable(Of T))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: DEM.Net.Lib.EnumerableWithCount(Of T).EnumerableWithCount(System.Int32, System.Collections.Generic.IEnumerable(Of T))
  name.vb: EnumerableWithCount(Int32, IEnumerable(Of T))
- uid: DEM.Net.Lib.EnumerableWithCount`1.Count
  commentId: P:DEM.Net.Lib.EnumerableWithCount`1.Count
  id: Count
  parent: DEM.Net.Lib.EnumerableWithCount`1
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: EnumerableWithCount<T>.Count
  fullName: DEM.Net.Lib.EnumerableWithCount<T>.Count
  type: Property
  source:
    remote:
      path: DEM.Net.Lib/Helpers/IEnumerableWithCount.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: Count
    path: ../DEM.Net.Lib/Helpers/IEnumerableWithCount.cs
    startLine: 24
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib
  syntax:
    content: public int Count { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Count As Integer
  overload: DEM.Net.Lib.EnumerableWithCount`1.Count*
  implements:
  - DEM.Net.Lib.IEnumerableWithCount{{T}}.Count
  nameWithType.vb: EnumerableWithCount(Of T).Count
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: DEM.Net.Lib.EnumerableWithCount(Of T).Count
- uid: DEM.Net.Lib.EnumerableWithCount`1.GetEnumerator
  commentId: M:DEM.Net.Lib.EnumerableWithCount`1.GetEnumerator
  id: GetEnumerator
  parent: DEM.Net.Lib.EnumerableWithCount`1
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: EnumerableWithCount<T>.GetEnumerator()
  fullName: DEM.Net.Lib.EnumerableWithCount<T>.GetEnumerator()
  type: Method
  source:
    remote:
      path: DEM.Net.Lib/Helpers/IEnumerableWithCount.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: GetEnumerator
    path: ../DEM.Net.Lib/Helpers/IEnumerableWithCount.cs
    startLine: 26
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib
  syntax:
    content: public IEnumerator<T> GetEnumerator()
    return:
      type: System.Collections.Generic.IEnumerator{{T}}
    content.vb: Public Function GetEnumerator As IEnumerator(Of T)
  overload: DEM.Net.Lib.EnumerableWithCount`1.GetEnumerator*
  implements:
  - System.Collections.Generic.IEnumerable{{T}}.GetEnumerator
  nameWithType.vb: EnumerableWithCount(Of T).GetEnumerator()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: DEM.Net.Lib.EnumerableWithCount(Of T).GetEnumerator()
- uid: DEM.Net.Lib.EnumerableWithCount`1.System#Collections#IEnumerable#GetEnumerator
  commentId: M:DEM.Net.Lib.EnumerableWithCount`1.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: DEM.Net.Lib.EnumerableWithCount`1
  langs:
  - csharp
  - vb
  name: IEnumerable.GetEnumerator()
  nameWithType: EnumerableWithCount<T>.IEnumerable.GetEnumerator()
  fullName: DEM.Net.Lib.EnumerableWithCount<T>.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  source:
    remote:
      path: DEM.Net.Lib/Helpers/IEnumerableWithCount.cs
      branch: dev
      repo: https://github.com/xfischer/DEM.Net.git
    id: System.Collections.IEnumerable.GetEnumerator
    path: ../DEM.Net.Lib/Helpers/IEnumerableWithCount.cs
    startLine: 31
  assemblies:
  - DEM.Net.Lib
  namespace: DEM.Net.Lib
  syntax:
    content: IEnumerator IEnumerable.GetEnumerator()
    return:
      type: System.Collections.IEnumerator
    content.vb: Function System.Collections.IEnumerable.GetEnumerator As IEnumerator Implements IEnumerable.GetEnumerator
  overload: DEM.Net.Lib.EnumerableWithCount`1.System#Collections#IEnumerable#GetEnumerator*
  implements:
  - System.Collections.IEnumerable.GetEnumerator
  nameWithType.vb: EnumerableWithCount(Of T).System.Collections.IEnumerable.GetEnumerator()
  fullName.vb: DEM.Net.Lib.EnumerableWithCount(Of T).System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
references:
- uid: DEM.Net.Lib
  commentId: N:DEM.Net.Lib
  name: DEM.Net.Lib
  nameWithType: DEM.Net.Lib
  fullName: DEM.Net.Lib
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: DEM.Net.Lib.IEnumerableWithCount{{T}}
  commentId: T:DEM.Net.Lib.IEnumerableWithCount{`0}
  parent: DEM.Net.Lib
  definition: DEM.Net.Lib.IEnumerableWithCount`1
  name: IEnumerableWithCount<T>
  nameWithType: IEnumerableWithCount<T>
  fullName: DEM.Net.Lib.IEnumerableWithCount<T>
  nameWithType.vb: IEnumerableWithCount(Of T)
  fullName.vb: DEM.Net.Lib.IEnumerableWithCount(Of T)
  name.vb: IEnumerableWithCount(Of T)
  spec.csharp:
  - uid: DEM.Net.Lib.IEnumerableWithCount`1
    name: IEnumerableWithCount
    nameWithType: IEnumerableWithCount
    fullName: DEM.Net.Lib.IEnumerableWithCount
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: DEM.Net.Lib.IEnumerableWithCount`1
    name: IEnumerableWithCount
    nameWithType: IEnumerableWithCount
    fullName: DEM.Net.Lib.IEnumerableWithCount
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{{T}}
  commentId: T:System.Collections.Generic.IEnumerable{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: DEM.Net.Lib.IEnumerableWithCount`1
  commentId: T:DEM.Net.Lib.IEnumerableWithCount`1
  name: IEnumerableWithCount<T>
  nameWithType: IEnumerableWithCount<T>
  fullName: DEM.Net.Lib.IEnumerableWithCount<T>
  nameWithType.vb: IEnumerableWithCount(Of T)
  fullName.vb: DEM.Net.Lib.IEnumerableWithCount(Of T)
  name.vb: IEnumerableWithCount(Of T)
  spec.csharp:
  - uid: DEM.Net.Lib.IEnumerableWithCount`1
    name: IEnumerableWithCount
    nameWithType: IEnumerableWithCount
    fullName: DEM.Net.Lib.IEnumerableWithCount
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: DEM.Net.Lib.IEnumerableWithCount`1
    name: IEnumerableWithCount
    nameWithType: IEnumerableWithCount
    fullName: DEM.Net.Lib.IEnumerableWithCount
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: DEM.Net.Lib.EnumerableWithCount`1.#ctor*
  commentId: Overload:DEM.Net.Lib.EnumerableWithCount`1.#ctor
  name: EnumerableWithCount
  nameWithType: EnumerableWithCount<T>.EnumerableWithCount
  fullName: DEM.Net.Lib.EnumerableWithCount<T>.EnumerableWithCount
  nameWithType.vb: EnumerableWithCount(Of T).EnumerableWithCount
  fullName.vb: DEM.Net.Lib.EnumerableWithCount(Of T).EnumerableWithCount
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: DEM.Net.Lib.EnumerableWithCount`1.Count*
  commentId: Overload:DEM.Net.Lib.EnumerableWithCount`1.Count
  name: Count
  nameWithType: EnumerableWithCount<T>.Count
  fullName: DEM.Net.Lib.EnumerableWithCount<T>.Count
  nameWithType.vb: EnumerableWithCount(Of T).Count
  fullName.vb: DEM.Net.Lib.EnumerableWithCount(Of T).Count
- uid: DEM.Net.Lib.IEnumerableWithCount{{T}}.Count
  commentId: P:DEM.Net.Lib.IEnumerableWithCount{`0}.Count
  parent: DEM.Net.Lib.IEnumerableWithCount{{T}}
  definition: DEM.Net.Lib.IEnumerableWithCount`1.Count
  name: Count
  nameWithType: IEnumerableWithCount<T>.Count
  fullName: DEM.Net.Lib.IEnumerableWithCount<T>.Count
  nameWithType.vb: IEnumerableWithCount(Of T).Count
  fullName.vb: DEM.Net.Lib.IEnumerableWithCount(Of T).Count
- uid: DEM.Net.Lib.IEnumerableWithCount`1.Count
  commentId: P:DEM.Net.Lib.IEnumerableWithCount`1.Count
  name: Count
  nameWithType: IEnumerableWithCount<T>.Count
  fullName: DEM.Net.Lib.IEnumerableWithCount<T>.Count
  nameWithType.vb: IEnumerableWithCount(Of T).Count
  fullName.vb: DEM.Net.Lib.IEnumerableWithCount(Of T).Count
- uid: DEM.Net.Lib.EnumerableWithCount`1.GetEnumerator*
  commentId: Overload:DEM.Net.Lib.EnumerableWithCount`1.GetEnumerator
  name: GetEnumerator
  nameWithType: EnumerableWithCount<T>.GetEnumerator
  fullName: DEM.Net.Lib.EnumerableWithCount<T>.GetEnumerator
  nameWithType.vb: EnumerableWithCount(Of T).GetEnumerator
  fullName.vb: DEM.Net.Lib.EnumerableWithCount(Of T).GetEnumerator
- uid: System.Collections.Generic.IEnumerable{{T}}.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable{`0}.GetEnumerator
  parent: System.Collections.Generic.IEnumerable{{T}}
  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<T>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of T).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of T).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator{{T}}
  commentId: T:System.Collections.Generic.IEnumerator{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<T>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of T).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of T).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  isExternal: true
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: DEM.Net.Lib.EnumerableWithCount`1.System#Collections#IEnumerable#GetEnumerator*
  commentId: Overload:DEM.Net.Lib.EnumerableWithCount`1.System#Collections#IEnumerable#GetEnumerator
  name: IEnumerable.GetEnumerator
  nameWithType: EnumerableWithCount<T>.IEnumerable.GetEnumerator
  fullName: DEM.Net.Lib.EnumerableWithCount<T>.System.Collections.IEnumerable.GetEnumerator
  nameWithType.vb: EnumerableWithCount(Of T).System.Collections.IEnumerable.GetEnumerator
  fullName.vb: DEM.Net.Lib.EnumerableWithCount(Of T).System.Collections.IEnumerable.GetEnumerator
  name.vb: System.Collections.IEnumerable.GetEnumerator
- uid: System.Collections.IEnumerable.GetEnumerator
  commentId: M:System.Collections.IEnumerable.GetEnumerator
  parent: System.Collections.IEnumerable
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable.GetEnumerator()
  fullName: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerator
  commentId: T:System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
